"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@deepgram";
exports.ids = ["vendor-chunks/@deepgram"];
exports.modules = {

/***/ "(rsc)/./node_modules/@deepgram/captions/dist/module/converters/AssemblyAiConverter.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@deepgram/captions/dist/module/converters/AssemblyAiConverter.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssemblyAiConverter: () => (/* binding */ AssemblyAiConverter)\n/* harmony export */ });\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/helpers */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/lib/helpers.js\");\n\nconst wordMap = (word)=>{\n    return {\n        word: word.text,\n        start: word.start,\n        end: word.end,\n        confidence: word.confidence,\n        punctuated_word: word.text,\n        speaker: word.speaker\n    };\n};\nclass AssemblyAiConverter {\n    constructor(transcriptionData){\n        this.transcriptionData = transcriptionData;\n    }\n    getLines(lineLength = 8) {\n        const results = this.transcriptionData;\n        let content = [];\n        if (results.utterances) {\n            results.utterances.forEach((utterance)=>{\n                if (utterance.words.length > lineLength) {\n                    content.push(...(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.chunkArray)(utterance.words.map((w)=>wordMap(w)), lineLength));\n                } else {\n                    content.push(utterance.words.map((w)=>wordMap(w)));\n                }\n            });\n        } else {\n            content.push(...(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.chunkArray)(results.words.map((w)=>wordMap(w)), lineLength));\n        }\n        return content;\n    }\n    getHeaders() {\n        const output = [];\n        output.push(\"NOTE\");\n        output.push(\"Transcription provided by Assembly AI\");\n        this.transcriptionData.id ? output.push(`Id: ${this.transcriptionData.id}`) : null;\n        this.transcriptionData.audio_duration ? output.push(`Duration: ${this.transcriptionData.audio_duration}`) : null;\n        return output;\n    }\n} //# sourceMappingURL=AssemblyAiConverter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL2NhcHRpb25zL2Rpc3QvbW9kdWxlL2NvbnZlcnRlcnMvQXNzZW1ibHlBaUNvbnZlcnRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0QztBQUM1QyxNQUFNQyxVQUFVLENBQUNDO0lBQ2IsT0FBTztRQUNIQSxNQUFNQSxLQUFLQyxJQUFJO1FBQ2ZDLE9BQU9GLEtBQUtFLEtBQUs7UUFDakJDLEtBQUtILEtBQUtHLEdBQUc7UUFDYkMsWUFBWUosS0FBS0ksVUFBVTtRQUMzQkMsaUJBQWlCTCxLQUFLQyxJQUFJO1FBQzFCSyxTQUFTTixLQUFLTSxPQUFPO0lBQ3pCO0FBQ0o7QUFDTyxNQUFNQztJQUNUQyxZQUFZQyxpQkFBaUIsQ0FBRTtRQUMzQixJQUFJLENBQUNBLGlCQUFpQixHQUFHQTtJQUM3QjtJQUNBQyxTQUFTQyxhQUFhLENBQUMsRUFBRTtRQUNyQixNQUFNQyxVQUFVLElBQUksQ0FBQ0gsaUJBQWlCO1FBQ3RDLElBQUlJLFVBQVUsRUFBRTtRQUNoQixJQUFJRCxRQUFRRSxVQUFVLEVBQUU7WUFDcEJGLFFBQVFFLFVBQVUsQ0FBQ0MsT0FBTyxDQUFDLENBQUNDO2dCQUN4QixJQUFJQSxVQUFVQyxLQUFLLENBQUNDLE1BQU0sR0FBR1AsWUFBWTtvQkFDckNFLFFBQVFNLElBQUksSUFBSXJCLHdEQUFVQSxDQUFDa0IsVUFBVUMsS0FBSyxDQUFDRyxHQUFHLENBQUMsQ0FBQ0MsSUFBTXRCLFFBQVFzQixLQUFLVjtnQkFDdkUsT0FDSztvQkFDREUsUUFBUU0sSUFBSSxDQUFDSCxVQUFVQyxLQUFLLENBQUNHLEdBQUcsQ0FBQyxDQUFDQyxJQUFNdEIsUUFBUXNCO2dCQUNwRDtZQUNKO1FBQ0osT0FDSztZQUNEUixRQUFRTSxJQUFJLElBQUlyQix3REFBVUEsQ0FBQ2MsUUFBUUssS0FBSyxDQUFDRyxHQUFHLENBQUMsQ0FBQ0MsSUFBTXRCLFFBQVFzQixLQUFLVjtRQUNyRTtRQUNBLE9BQU9FO0lBQ1g7SUFDQVMsYUFBYTtRQUNULE1BQU1DLFNBQVMsRUFBRTtRQUNqQkEsT0FBT0osSUFBSSxDQUFDO1FBQ1pJLE9BQU9KLElBQUksQ0FBQztRQUNaLElBQUksQ0FBQ1YsaUJBQWlCLENBQUNlLEVBQUUsR0FBR0QsT0FBT0osSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQ1YsaUJBQWlCLENBQUNlLEVBQUUsQ0FBQyxDQUFDLElBQUk7UUFDOUUsSUFBSSxDQUFDZixpQkFBaUIsQ0FBQ2dCLGNBQWMsR0FDL0JGLE9BQU9KLElBQUksQ0FBQyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUNWLGlCQUFpQixDQUFDZ0IsY0FBYyxDQUFDLENBQUMsSUFDaEU7UUFDTixPQUFPRjtJQUNYO0FBQ0osRUFDQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWxsLWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL0BkZWVwZ3JhbS9jYXB0aW9ucy9kaXN0L21vZHVsZS9jb252ZXJ0ZXJzL0Fzc2VtYmx5QWlDb252ZXJ0ZXIuanM/ZmU1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaHVua0FycmF5IH0gZnJvbSBcIi4uL2xpYi9oZWxwZXJzXCI7XG5jb25zdCB3b3JkTWFwID0gKHdvcmQpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB3b3JkOiB3b3JkLnRleHQsXG4gICAgICAgIHN0YXJ0OiB3b3JkLnN0YXJ0LFxuICAgICAgICBlbmQ6IHdvcmQuZW5kLFxuICAgICAgICBjb25maWRlbmNlOiB3b3JkLmNvbmZpZGVuY2UsXG4gICAgICAgIHB1bmN0dWF0ZWRfd29yZDogd29yZC50ZXh0LFxuICAgICAgICBzcGVha2VyOiB3b3JkLnNwZWFrZXIsXG4gICAgfTtcbn07XG5leHBvcnQgY2xhc3MgQXNzZW1ibHlBaUNvbnZlcnRlciB7XG4gICAgY29uc3RydWN0b3IodHJhbnNjcmlwdGlvbkRhdGEpIHtcbiAgICAgICAgdGhpcy50cmFuc2NyaXB0aW9uRGF0YSA9IHRyYW5zY3JpcHRpb25EYXRhO1xuICAgIH1cbiAgICBnZXRMaW5lcyhsaW5lTGVuZ3RoID0gOCkge1xuICAgICAgICBjb25zdCByZXN1bHRzID0gdGhpcy50cmFuc2NyaXB0aW9uRGF0YTtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBbXTtcbiAgICAgICAgaWYgKHJlc3VsdHMudXR0ZXJhbmNlcykge1xuICAgICAgICAgICAgcmVzdWx0cy51dHRlcmFuY2VzLmZvckVhY2goKHV0dGVyYW5jZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh1dHRlcmFuY2Uud29yZHMubGVuZ3RoID4gbGluZUxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50LnB1c2goLi4uY2h1bmtBcnJheSh1dHRlcmFuY2Uud29yZHMubWFwKCh3KSA9PiB3b3JkTWFwKHcpKSwgbGluZUxlbmd0aCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5wdXNoKHV0dGVyYW5jZS53b3Jkcy5tYXAoKHcpID0+IHdvcmRNYXAodykpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRlbnQucHVzaCguLi5jaHVua0FycmF5KHJlc3VsdHMud29yZHMubWFwKCh3KSA9PiB3b3JkTWFwKHcpKSwgbGluZUxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBnZXRIZWFkZXJzKCkge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICAgICAgb3V0cHV0LnB1c2goXCJOT1RFXCIpO1xuICAgICAgICBvdXRwdXQucHVzaChcIlRyYW5zY3JpcHRpb24gcHJvdmlkZWQgYnkgQXNzZW1ibHkgQUlcIik7XG4gICAgICAgIHRoaXMudHJhbnNjcmlwdGlvbkRhdGEuaWQgPyBvdXRwdXQucHVzaChgSWQ6ICR7dGhpcy50cmFuc2NyaXB0aW9uRGF0YS5pZH1gKSA6IG51bGw7XG4gICAgICAgIHRoaXMudHJhbnNjcmlwdGlvbkRhdGEuYXVkaW9fZHVyYXRpb25cbiAgICAgICAgICAgID8gb3V0cHV0LnB1c2goYER1cmF0aW9uOiAke3RoaXMudHJhbnNjcmlwdGlvbkRhdGEuYXVkaW9fZHVyYXRpb259YClcbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Bc3NlbWJseUFpQ29udmVydGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJjaHVua0FycmF5Iiwid29yZE1hcCIsIndvcmQiLCJ0ZXh0Iiwic3RhcnQiLCJlbmQiLCJjb25maWRlbmNlIiwicHVuY3R1YXRlZF93b3JkIiwic3BlYWtlciIsIkFzc2VtYmx5QWlDb252ZXJ0ZXIiLCJjb25zdHJ1Y3RvciIsInRyYW5zY3JpcHRpb25EYXRhIiwiZ2V0TGluZXMiLCJsaW5lTGVuZ3RoIiwicmVzdWx0cyIsImNvbnRlbnQiLCJ1dHRlcmFuY2VzIiwiZm9yRWFjaCIsInV0dGVyYW5jZSIsIndvcmRzIiwibGVuZ3RoIiwicHVzaCIsIm1hcCIsInciLCJnZXRIZWFkZXJzIiwib3V0cHV0IiwiaWQiLCJhdWRpb19kdXJhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/captions/dist/module/converters/AssemblyAiConverter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/captions/dist/module/converters/DeepgramConverter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@deepgram/captions/dist/module/converters/DeepgramConverter.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeepgramConverter: () => (/* binding */ DeepgramConverter)\n/* harmony export */ });\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/helpers */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/lib/helpers.js\");\n\nclass DeepgramConverter {\n    constructor(transcriptionData){\n        this.transcriptionData = transcriptionData;\n    }\n    getLines(lineLength = 8) {\n        const { results } = this.transcriptionData;\n        let content = [];\n        if (results.utterances) {\n            results.utterances.forEach((utterance)=>{\n                if (utterance.words.length > lineLength) {\n                    content.push(...(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.chunkArray)(utterance.words, lineLength));\n                } else {\n                    content.push(utterance.words);\n                }\n            });\n        } else {\n            const words = results.channels[0].alternatives[0].words;\n            const diarize = \"speaker\" in words[0]; // was diarization used\n            let buffer = [];\n            let currentSpeaker = 0;\n            words.forEach((word)=>{\n                var _a;\n                if (diarize && word.speaker !== currentSpeaker) {\n                    content.push(buffer);\n                    buffer = [];\n                }\n                if (buffer.length === lineLength) {\n                    content.push(buffer);\n                    buffer = [];\n                }\n                if (diarize) {\n                    currentSpeaker = (_a = word.speaker) !== null && _a !== void 0 ? _a : 0;\n                }\n                buffer.push(word);\n            });\n            content.push(buffer);\n        }\n        return content;\n    }\n    getHeaders() {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const output = [];\n        output.push(\"NOTE\");\n        output.push(\"Transcription provided by Deepgram\");\n        ((_a = this.transcriptionData.metadata) === null || _a === void 0 ? void 0 : _a.request_id) ? output.push(`Request Id: ${(_b = this.transcriptionData.metadata) === null || _b === void 0 ? void 0 : _b.request_id}`) : null;\n        ((_c = this.transcriptionData.metadata) === null || _c === void 0 ? void 0 : _c.created) ? output.push(`Created: ${(_d = this.transcriptionData.metadata) === null || _d === void 0 ? void 0 : _d.created}`) : null;\n        ((_e = this.transcriptionData.metadata) === null || _e === void 0 ? void 0 : _e.duration) ? output.push(`Duration: ${(_f = this.transcriptionData.metadata) === null || _f === void 0 ? void 0 : _f.duration}`) : null;\n        ((_g = this.transcriptionData.metadata) === null || _g === void 0 ? void 0 : _g.channels) ? output.push(`Channels: ${(_h = this.transcriptionData.metadata) === null || _h === void 0 ? void 0 : _h.channels}`) : null;\n        return output;\n    }\n} //# sourceMappingURL=DeepgramConverter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL2NhcHRpb25zL2Rpc3QvbW9kdWxlL2NvbnZlcnRlcnMvRGVlcGdyYW1Db252ZXJ0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDckMsTUFBTUM7SUFDVEMsWUFBWUMsaUJBQWlCLENBQUU7UUFDM0IsSUFBSSxDQUFDQSxpQkFBaUIsR0FBR0E7SUFDN0I7SUFDQUMsU0FBU0MsYUFBYSxDQUFDLEVBQUU7UUFDckIsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUNILGlCQUFpQjtRQUMxQyxJQUFJSSxVQUFVLEVBQUU7UUFDaEIsSUFBSUQsUUFBUUUsVUFBVSxFQUFFO1lBQ3BCRixRQUFRRSxVQUFVLENBQUNDLE9BQU8sQ0FBQyxDQUFDQztnQkFDeEIsSUFBSUEsVUFBVUMsS0FBSyxDQUFDQyxNQUFNLEdBQUdQLFlBQVk7b0JBQ3JDRSxRQUFRTSxJQUFJLElBQUliLHdEQUFVQSxDQUFDVSxVQUFVQyxLQUFLLEVBQUVOO2dCQUNoRCxPQUNLO29CQUNERSxRQUFRTSxJQUFJLENBQUNILFVBQVVDLEtBQUs7Z0JBQ2hDO1lBQ0o7UUFDSixPQUNLO1lBQ0QsTUFBTUEsUUFBUUwsUUFBUVEsUUFBUSxDQUFDLEVBQUUsQ0FBQ0MsWUFBWSxDQUFDLEVBQUUsQ0FBQ0osS0FBSztZQUN2RCxNQUFNSyxVQUFVLGFBQWFMLEtBQUssQ0FBQyxFQUFFLEVBQUUsdUJBQXVCO1lBQzlELElBQUlNLFNBQVMsRUFBRTtZQUNmLElBQUlDLGlCQUFpQjtZQUNyQlAsTUFBTUYsT0FBTyxDQUFDLENBQUNVO2dCQUNYLElBQUlDO2dCQUNKLElBQUlKLFdBQVdHLEtBQUtFLE9BQU8sS0FBS0gsZ0JBQWdCO29CQUM1Q1gsUUFBUU0sSUFBSSxDQUFDSTtvQkFDYkEsU0FBUyxFQUFFO2dCQUNmO2dCQUNBLElBQUlBLE9BQU9MLE1BQU0sS0FBS1AsWUFBWTtvQkFDOUJFLFFBQVFNLElBQUksQ0FBQ0k7b0JBQ2JBLFNBQVMsRUFBRTtnQkFDZjtnQkFDQSxJQUFJRCxTQUFTO29CQUNURSxpQkFBaUIsQ0FBQ0UsS0FBS0QsS0FBS0UsT0FBTyxNQUFNLFFBQVFELE9BQU8sS0FBSyxJQUFJQSxLQUFLO2dCQUMxRTtnQkFDQUgsT0FBT0osSUFBSSxDQUFDTTtZQUNoQjtZQUNBWixRQUFRTSxJQUFJLENBQUNJO1FBQ2pCO1FBQ0EsT0FBT1Y7SUFDWDtJQUNBZSxhQUFhO1FBQ1QsSUFBSUYsSUFBSUcsSUFBSUMsSUFBSUMsSUFBSUMsSUFBSUMsSUFBSUMsSUFBSUM7UUFDaEMsTUFBTUMsU0FBUyxFQUFFO1FBQ2pCQSxPQUFPakIsSUFBSSxDQUFDO1FBQ1ppQixPQUFPakIsSUFBSSxDQUFDO1FBQ1gsRUFBQ08sS0FBSyxJQUFJLENBQUNqQixpQkFBaUIsQ0FBQzRCLFFBQVEsTUFBTSxRQUFRWCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdZLFVBQVUsSUFDcEZGLE9BQU9qQixJQUFJLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQ1UsS0FBSyxJQUFJLENBQUNwQixpQkFBaUIsQ0FBQzRCLFFBQVEsTUFBTSxRQUFRUixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdTLFVBQVUsQ0FBQyxDQUFDLElBQ3RIO1FBQ0wsRUFBQ1IsS0FBSyxJQUFJLENBQUNyQixpQkFBaUIsQ0FBQzRCLFFBQVEsTUFBTSxRQUFRUCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdTLE9BQU8sSUFDakZILE9BQU9qQixJQUFJLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQ1ksS0FBSyxJQUFJLENBQUN0QixpQkFBaUIsQ0FBQzRCLFFBQVEsTUFBTSxRQUFRTixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdRLE9BQU8sQ0FBQyxDQUFDLElBQ2hIO1FBQ0wsRUFBQ1AsS0FBSyxJQUFJLENBQUN2QixpQkFBaUIsQ0FBQzRCLFFBQVEsTUFBTSxRQUFRTCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdRLFFBQVEsSUFDbEZKLE9BQU9qQixJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQ2MsS0FBSyxJQUFJLENBQUN4QixpQkFBaUIsQ0FBQzRCLFFBQVEsTUFBTSxRQUFRSixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdPLFFBQVEsQ0FBQyxDQUFDLElBQ2xIO1FBQ0wsRUFBQ04sS0FBSyxJQUFJLENBQUN6QixpQkFBaUIsQ0FBQzRCLFFBQVEsTUFBTSxRQUFRSCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdkLFFBQVEsSUFDbEZnQixPQUFPakIsSUFBSSxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUNnQixLQUFLLElBQUksQ0FBQzFCLGlCQUFpQixDQUFDNEIsUUFBUSxNQUFNLFFBQVFGLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR2YsUUFBUSxDQUFDLENBQUMsSUFDbEg7UUFDTixPQUFPZ0I7SUFDWDtBQUNKLEVBQ0EsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vY2FwdGlvbnMvZGlzdC9tb2R1bGUvY29udmVydGVycy9EZWVwZ3JhbUNvbnZlcnRlci5qcz8xNjNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNodW5rQXJyYXkgfSBmcm9tIFwiLi4vbGliL2hlbHBlcnNcIjtcbmV4cG9ydCBjbGFzcyBEZWVwZ3JhbUNvbnZlcnRlciB7XG4gICAgY29uc3RydWN0b3IodHJhbnNjcmlwdGlvbkRhdGEpIHtcbiAgICAgICAgdGhpcy50cmFuc2NyaXB0aW9uRGF0YSA9IHRyYW5zY3JpcHRpb25EYXRhO1xuICAgIH1cbiAgICBnZXRMaW5lcyhsaW5lTGVuZ3RoID0gOCkge1xuICAgICAgICBjb25zdCB7IHJlc3VsdHMgfSA9IHRoaXMudHJhbnNjcmlwdGlvbkRhdGE7XG4gICAgICAgIGxldCBjb250ZW50ID0gW107XG4gICAgICAgIGlmIChyZXN1bHRzLnV0dGVyYW5jZXMpIHtcbiAgICAgICAgICAgIHJlc3VsdHMudXR0ZXJhbmNlcy5mb3JFYWNoKCh1dHRlcmFuY2UpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodXR0ZXJhbmNlLndvcmRzLmxlbmd0aCA+IGxpbmVMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5wdXNoKC4uLmNodW5rQXJyYXkodXR0ZXJhbmNlLndvcmRzLCBsaW5lTGVuZ3RoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50LnB1c2godXR0ZXJhbmNlLndvcmRzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHdvcmRzID0gcmVzdWx0cy5jaGFubmVsc1swXS5hbHRlcm5hdGl2ZXNbMF0ud29yZHM7XG4gICAgICAgICAgICBjb25zdCBkaWFyaXplID0gXCJzcGVha2VyXCIgaW4gd29yZHNbMF07IC8vIHdhcyBkaWFyaXphdGlvbiB1c2VkXG4gICAgICAgICAgICBsZXQgYnVmZmVyID0gW107XG4gICAgICAgICAgICBsZXQgY3VycmVudFNwZWFrZXIgPSAwO1xuICAgICAgICAgICAgd29yZHMuZm9yRWFjaCgod29yZCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBpZiAoZGlhcml6ZSAmJiB3b3JkLnNwZWFrZXIgIT09IGN1cnJlbnRTcGVha2VyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQucHVzaChidWZmZXIpO1xuICAgICAgICAgICAgICAgICAgICBidWZmZXIgPSBbXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGJ1ZmZlci5sZW5ndGggPT09IGxpbmVMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5wdXNoKGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlciA9IFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZGlhcml6ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3BlYWtlciA9IChfYSA9IHdvcmQuc3BlYWtlcikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnVmZmVyLnB1c2god29yZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnRlbnQucHVzaChidWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBnZXRIZWFkZXJzKCkge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oO1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICAgICAgb3V0cHV0LnB1c2goXCJOT1RFXCIpO1xuICAgICAgICBvdXRwdXQucHVzaChcIlRyYW5zY3JpcHRpb24gcHJvdmlkZWQgYnkgRGVlcGdyYW1cIik7XG4gICAgICAgICgoX2EgPSB0aGlzLnRyYW5zY3JpcHRpb25EYXRhLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVxdWVzdF9pZClcbiAgICAgICAgICAgID8gb3V0cHV0LnB1c2goYFJlcXVlc3QgSWQ6ICR7KF9iID0gdGhpcy50cmFuc2NyaXB0aW9uRGF0YS5tZXRhZGF0YSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnJlcXVlc3RfaWR9YClcbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgKChfYyA9IHRoaXMudHJhbnNjcmlwdGlvbkRhdGEubWV0YWRhdGEpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jcmVhdGVkKVxuICAgICAgICAgICAgPyBvdXRwdXQucHVzaChgQ3JlYXRlZDogJHsoX2QgPSB0aGlzLnRyYW5zY3JpcHRpb25EYXRhLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuY3JlYXRlZH1gKVxuICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICAoKF9lID0gdGhpcy50cmFuc2NyaXB0aW9uRGF0YS5tZXRhZGF0YSkgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLmR1cmF0aW9uKVxuICAgICAgICAgICAgPyBvdXRwdXQucHVzaChgRHVyYXRpb246ICR7KF9mID0gdGhpcy50cmFuc2NyaXB0aW9uRGF0YS5tZXRhZGF0YSkgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLmR1cmF0aW9ufWApXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgICAgICgoX2cgPSB0aGlzLnRyYW5zY3JpcHRpb25EYXRhLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2cuY2hhbm5lbHMpXG4gICAgICAgICAgICA/IG91dHB1dC5wdXNoKGBDaGFubmVsczogJHsoX2ggPSB0aGlzLnRyYW5zY3JpcHRpb25EYXRhLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfaCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2guY2hhbm5lbHN9YClcbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZWVwZ3JhbUNvbnZlcnRlci5qcy5tYXAiXSwibmFtZXMiOlsiY2h1bmtBcnJheSIsIkRlZXBncmFtQ29udmVydGVyIiwiY29uc3RydWN0b3IiLCJ0cmFuc2NyaXB0aW9uRGF0YSIsImdldExpbmVzIiwibGluZUxlbmd0aCIsInJlc3VsdHMiLCJjb250ZW50IiwidXR0ZXJhbmNlcyIsImZvckVhY2giLCJ1dHRlcmFuY2UiLCJ3b3JkcyIsImxlbmd0aCIsInB1c2giLCJjaGFubmVscyIsImFsdGVybmF0aXZlcyIsImRpYXJpemUiLCJidWZmZXIiLCJjdXJyZW50U3BlYWtlciIsIndvcmQiLCJfYSIsInNwZWFrZXIiLCJnZXRIZWFkZXJzIiwiX2IiLCJfYyIsIl9kIiwiX2UiLCJfZiIsIl9nIiwiX2giLCJvdXRwdXQiLCJtZXRhZGF0YSIsInJlcXVlc3RfaWQiLCJjcmVhdGVkIiwiZHVyYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/captions/dist/module/converters/DeepgramConverter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/captions/dist/module/converters/IConverter.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deepgram/captions/dist/module/converters/IConverter.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isConverter: () => (/* binding */ isConverter)\n/* harmony export */ });\nfunction isConverter(object) {\n    return \"transcriptionData\" in object;\n} //# sourceMappingURL=IConverter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL2NhcHRpb25zL2Rpc3QvbW9kdWxlL2NvbnZlcnRlcnMvSUNvbnZlcnRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsWUFBWUMsTUFBTTtJQUM5QixPQUFPLHVCQUF1QkE7QUFDbEMsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWxsLWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL0BkZWVwZ3JhbS9jYXB0aW9ucy9kaXN0L21vZHVsZS9jb252ZXJ0ZXJzL0lDb252ZXJ0ZXIuanM/ZjY5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNDb252ZXJ0ZXIob2JqZWN0KSB7XG4gICAgcmV0dXJuIFwidHJhbnNjcmlwdGlvbkRhdGFcIiBpbiBvYmplY3Q7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JQ29udmVydGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJpc0NvbnZlcnRlciIsIm9iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/captions/dist/module/converters/IConverter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/captions/dist/module/converters/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@deepgram/captions/dist/module/converters/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssemblyAiConverter: () => (/* reexport safe */ _AssemblyAiConverter__WEBPACK_IMPORTED_MODULE_1__.AssemblyAiConverter),\n/* harmony export */   DeepgramConverter: () => (/* reexport safe */ _DeepgramConverter__WEBPACK_IMPORTED_MODULE_0__.DeepgramConverter),\n/* harmony export */   isConverter: () => (/* reexport safe */ _IConverter__WEBPACK_IMPORTED_MODULE_2__.isConverter)\n/* harmony export */ });\n/* harmony import */ var _DeepgramConverter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DeepgramConverter */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/converters/DeepgramConverter.js\");\n/* harmony import */ var _AssemblyAiConverter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AssemblyAiConverter */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/converters/AssemblyAiConverter.js\");\n/* harmony import */ var _IConverter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IConverter */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/converters/IConverter.js\");\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL2NhcHRpb25zL2Rpc3QvbW9kdWxlL2NvbnZlcnRlcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdEO0FBQ0k7QUFDakIsQ0FDM0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vY2FwdGlvbnMvZGlzdC9tb2R1bGUvY29udmVydGVycy9pbmRleC5qcz8xYWE0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IERlZXBncmFtQ29udmVydGVyIH0gZnJvbSBcIi4vRGVlcGdyYW1Db252ZXJ0ZXJcIjtcbmV4cG9ydCB7IEFzc2VtYmx5QWlDb252ZXJ0ZXIgfSBmcm9tIFwiLi9Bc3NlbWJseUFpQ29udmVydGVyXCI7XG5leHBvcnQgeyBpc0NvbnZlcnRlciB9IGZyb20gXCIuL0lDb252ZXJ0ZXJcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJEZWVwZ3JhbUNvbnZlcnRlciIsIkFzc2VtYmx5QWlDb252ZXJ0ZXIiLCJpc0NvbnZlcnRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/captions/dist/module/converters/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/captions/dist/module/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deepgram/captions/dist/module/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssemblyAiConverter: () => (/* reexport safe */ _converters__WEBPACK_IMPORTED_MODULE_3__.AssemblyAiConverter),\n/* harmony export */   DeepgramConverter: () => (/* reexport safe */ _converters__WEBPACK_IMPORTED_MODULE_3__.DeepgramConverter),\n/* harmony export */   chunkArray: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_2__.chunkArray),\n/* harmony export */   isConverter: () => (/* reexport safe */ _converters__WEBPACK_IMPORTED_MODULE_3__.isConverter),\n/* harmony export */   secondsToTimestamp: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_2__.secondsToTimestamp),\n/* harmony export */   srt: () => (/* binding */ srt),\n/* harmony export */   webvtt: () => (/* binding */ webvtt)\n/* harmony export */ });\n/* harmony import */ var _converters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/converters/IConverter.js\");\n/* harmony import */ var _converters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./converters */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/converters/DeepgramConverter.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/helpers */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/lib/helpers.js\");\n/* harmony import */ var _converters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./converters */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/converters/index.js\");\n\n\nconst parseInput = (transcription)=>{\n    if (!(0,_converters__WEBPACK_IMPORTED_MODULE_0__.isConverter)(transcription)) {\n        return new _converters__WEBPACK_IMPORTED_MODULE_1__.DeepgramConverter(transcription);\n    }\n    return transcription;\n};\nconst webvtt = (transcription, lineLength = 8)=>{\n    const output = [];\n    let data = parseInput(transcription);\n    // default top of file\n    output.push(\"WEBVTT\");\n    output.push(\"\");\n    // get converter specific headers\n    data.getHeaders ? output.push(data.getHeaders().join(\"\\n\")) : null;\n    data.getHeaders ? output.push(\"\") : null;\n    // get the lines\n    const lines = data.getLines(lineLength);\n    // is speaker output required?\n    const speakerLabels = \"speaker\" in lines[0][0];\n    lines.forEach((words)=>{\n        const firstWord = words[0];\n        const lastWord = words[words.length - 1];\n        output.push(`${(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.secondsToTimestamp)(firstWord.start)} --> ${(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.secondsToTimestamp)(lastWord.end)}`);\n        const line = words.map((word)=>{\n            var _a;\n            return (_a = word.punctuated_word) !== null && _a !== void 0 ? _a : word.word;\n        }).join(\" \");\n        const speakerLabel = speakerLabels ? `<v Speaker ${firstWord.speaker}>` : \"\";\n        output.push(`${speakerLabel}${line}`);\n        output.push(\"\");\n    });\n    return output.join(\"\\n\");\n};\nconst srt = (transcription, lineLength = 8)=>{\n    const output = [];\n    const data = parseInput(transcription);\n    // get the lines\n    let lines = data.getLines(lineLength);\n    // is speaker output required?\n    const speakerLabels = \"speaker\" in lines[0][0];\n    let entry = 1;\n    let currentSpeaker;\n    lines.forEach((words)=>{\n        output.push((entry++).toString());\n        const firstWord = words[0];\n        const lastWord = words[words.length - 1];\n        output.push(`${(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.secondsToTimestamp)(firstWord.start, \"HH:mm:ss,SSS\")} --> ${(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.secondsToTimestamp)(lastWord.end, \"HH:mm:ss,SSS\")}`);\n        const line = words.map((word)=>{\n            var _a;\n            return (_a = word.punctuated_word) !== null && _a !== void 0 ? _a : word.word;\n        }).join(\" \");\n        const speakerLabel = speakerLabels && currentSpeaker !== firstWord.speaker ? `[Speaker ${firstWord.speaker}]\\n` : \"\";\n        output.push(`${speakerLabel}${line}`);\n        output.push(\"\");\n        currentSpeaker = firstWord.speaker;\n    });\n    return output.join(\"\\n\");\n};\n\n/**\n * Helpful exports.\n */ \n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL2NhcHRpb25zL2Rpc3QvbW9kdWxlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQThEO0FBQ1g7QUFDbkQsTUFBTUcsYUFBYSxDQUFDQztJQUNoQixJQUFJLENBQUNILHdEQUFXQSxDQUFDRyxnQkFBZ0I7UUFDN0IsT0FBTyxJQUFJSiwwREFBaUJBLENBQUNJO0lBQ2pDO0lBQ0EsT0FBT0E7QUFDWDtBQUNBLE1BQU1DLFNBQVMsQ0FBQ0QsZUFBZUUsYUFBYSxDQUFDO0lBQ3pDLE1BQU1DLFNBQVMsRUFBRTtJQUNqQixJQUFJQyxPQUFPTCxXQUFXQztJQUN0QixzQkFBc0I7SUFDdEJHLE9BQU9FLElBQUksQ0FBQztJQUNaRixPQUFPRSxJQUFJLENBQUM7SUFDWixpQ0FBaUM7SUFDakNELEtBQUtFLFVBQVUsR0FBR0gsT0FBT0UsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLEdBQUdDLElBQUksQ0FBQyxTQUFTO0lBQzlESCxLQUFLRSxVQUFVLEdBQUdILE9BQU9FLElBQUksQ0FBQyxNQUFNO0lBQ3BDLGdCQUFnQjtJQUNoQixNQUFNRyxRQUFRSixLQUFLSyxRQUFRLENBQUNQO0lBQzVCLDhCQUE4QjtJQUM5QixNQUFNUSxnQkFBZ0IsYUFBYUYsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQzlDQSxNQUFNRyxPQUFPLENBQUMsQ0FBQ0M7UUFDWCxNQUFNQyxZQUFZRCxLQUFLLENBQUMsRUFBRTtRQUMxQixNQUFNRSxXQUFXRixLQUFLLENBQUNBLE1BQU1HLE1BQU0sR0FBRyxFQUFFO1FBQ3hDWixPQUFPRSxJQUFJLENBQUMsQ0FBQyxFQUFFUCxnRUFBa0JBLENBQUNlLFVBQVVHLEtBQUssRUFBRSxLQUFLLEVBQUVsQixnRUFBa0JBLENBQUNnQixTQUFTRyxHQUFHLEVBQUUsQ0FBQztRQUM1RixNQUFNQyxPQUFPTixNQUFNTyxHQUFHLENBQUMsQ0FBQ0M7WUFBVyxJQUFJQztZQUFJLE9BQU8sQ0FBQ0EsS0FBS0QsS0FBS0UsZUFBZSxNQUFNLFFBQVFELE9BQU8sS0FBSyxJQUFJQSxLQUFLRCxLQUFLQSxJQUFJO1FBQUUsR0FBR2IsSUFBSSxDQUFDO1FBQ2xJLE1BQU1nQixlQUFlYixnQkFBZ0IsQ0FBQyxXQUFXLEVBQUVHLFVBQVVXLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRztRQUMxRXJCLE9BQU9FLElBQUksQ0FBQyxDQUFDLEVBQUVrQixhQUFhLEVBQUVMLEtBQUssQ0FBQztRQUNwQ2YsT0FBT0UsSUFBSSxDQUFDO0lBQ2hCO0lBQ0EsT0FBT0YsT0FBT0ksSUFBSSxDQUFDO0FBQ3ZCO0FBQ0EsTUFBTWtCLE1BQU0sQ0FBQ3pCLGVBQWVFLGFBQWEsQ0FBQztJQUN0QyxNQUFNQyxTQUFTLEVBQUU7SUFDakIsTUFBTUMsT0FBT0wsV0FBV0M7SUFDeEIsZ0JBQWdCO0lBQ2hCLElBQUlRLFFBQVFKLEtBQUtLLFFBQVEsQ0FBQ1A7SUFDMUIsOEJBQThCO0lBQzlCLE1BQU1RLGdCQUFnQixhQUFhRixLQUFLLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDOUMsSUFBSWtCLFFBQVE7SUFDWixJQUFJQztJQUNKbkIsTUFBTUcsT0FBTyxDQUFDLENBQUNDO1FBQ1hULE9BQU9FLElBQUksQ0FBQyxDQUFDcUIsT0FBTSxFQUFHRSxRQUFRO1FBQzlCLE1BQU1mLFlBQVlELEtBQUssQ0FBQyxFQUFFO1FBQzFCLE1BQU1FLFdBQVdGLEtBQUssQ0FBQ0EsTUFBTUcsTUFBTSxHQUFHLEVBQUU7UUFDeENaLE9BQU9FLElBQUksQ0FBQyxDQUFDLEVBQUVQLGdFQUFrQkEsQ0FBQ2UsVUFBVUcsS0FBSyxFQUFFLGdCQUFnQixLQUFLLEVBQUVsQixnRUFBa0JBLENBQUNnQixTQUFTRyxHQUFHLEVBQUUsZ0JBQWdCLENBQUM7UUFDNUgsTUFBTUMsT0FBT04sTUFBTU8sR0FBRyxDQUFDLENBQUNDO1lBQVcsSUFBSUM7WUFBSSxPQUFPLENBQUNBLEtBQUtELEtBQUtFLGVBQWUsTUFBTSxRQUFRRCxPQUFPLEtBQUssSUFBSUEsS0FBS0QsS0FBS0EsSUFBSTtRQUFFLEdBQUdiLElBQUksQ0FBQztRQUNsSSxNQUFNZ0IsZUFBZWIsaUJBQWlCaUIsbUJBQW1CZCxVQUFVVyxPQUFPLEdBQ3BFLENBQUMsU0FBUyxFQUFFWCxVQUFVVyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQ2xDO1FBQ05yQixPQUFPRSxJQUFJLENBQUMsQ0FBQyxFQUFFa0IsYUFBYSxFQUFFTCxLQUFLLENBQUM7UUFDcENmLE9BQU9FLElBQUksQ0FBQztRQUNac0IsaUJBQWlCZCxVQUFVVyxPQUFPO0lBQ3RDO0lBQ0EsT0FBT3JCLE9BQU9JLElBQUksQ0FBQztBQUN2QjtBQUN1QjtBQUN2Qjs7Q0FFQyxHQUM0QjtBQUNEO0FBQ0UsQ0FDOUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vY2FwdGlvbnMvZGlzdC9tb2R1bGUvaW5kZXguanM/OWYxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWVwZ3JhbUNvbnZlcnRlciwgaXNDb252ZXJ0ZXIgfSBmcm9tIFwiLi9jb252ZXJ0ZXJzXCI7XG5pbXBvcnQgeyBzZWNvbmRzVG9UaW1lc3RhbXAgfSBmcm9tIFwiLi9saWIvaGVscGVyc1wiO1xuY29uc3QgcGFyc2VJbnB1dCA9ICh0cmFuc2NyaXB0aW9uKSA9PiB7XG4gICAgaWYgKCFpc0NvbnZlcnRlcih0cmFuc2NyaXB0aW9uKSkge1xuICAgICAgICByZXR1cm4gbmV3IERlZXBncmFtQ29udmVydGVyKHRyYW5zY3JpcHRpb24pO1xuICAgIH1cbiAgICByZXR1cm4gdHJhbnNjcmlwdGlvbjtcbn07XG5jb25zdCB3ZWJ2dHQgPSAodHJhbnNjcmlwdGlvbiwgbGluZUxlbmd0aCA9IDgpID0+IHtcbiAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICBsZXQgZGF0YSA9IHBhcnNlSW5wdXQodHJhbnNjcmlwdGlvbik7XG4gICAgLy8gZGVmYXVsdCB0b3Agb2YgZmlsZVxuICAgIG91dHB1dC5wdXNoKFwiV0VCVlRUXCIpO1xuICAgIG91dHB1dC5wdXNoKFwiXCIpO1xuICAgIC8vIGdldCBjb252ZXJ0ZXIgc3BlY2lmaWMgaGVhZGVyc1xuICAgIGRhdGEuZ2V0SGVhZGVycyA/IG91dHB1dC5wdXNoKGRhdGEuZ2V0SGVhZGVycygpLmpvaW4oXCJcXG5cIikpIDogbnVsbDtcbiAgICBkYXRhLmdldEhlYWRlcnMgPyBvdXRwdXQucHVzaChcIlwiKSA6IG51bGw7XG4gICAgLy8gZ2V0IHRoZSBsaW5lc1xuICAgIGNvbnN0IGxpbmVzID0gZGF0YS5nZXRMaW5lcyhsaW5lTGVuZ3RoKTtcbiAgICAvLyBpcyBzcGVha2VyIG91dHB1dCByZXF1aXJlZD9cbiAgICBjb25zdCBzcGVha2VyTGFiZWxzID0gXCJzcGVha2VyXCIgaW4gbGluZXNbMF1bMF07XG4gICAgbGluZXMuZm9yRWFjaCgod29yZHMpID0+IHtcbiAgICAgICAgY29uc3QgZmlyc3RXb3JkID0gd29yZHNbMF07XG4gICAgICAgIGNvbnN0IGxhc3RXb3JkID0gd29yZHNbd29yZHMubGVuZ3RoIC0gMV07XG4gICAgICAgIG91dHB1dC5wdXNoKGAke3NlY29uZHNUb1RpbWVzdGFtcChmaXJzdFdvcmQuc3RhcnQpfSAtLT4gJHtzZWNvbmRzVG9UaW1lc3RhbXAobGFzdFdvcmQuZW5kKX1gKTtcbiAgICAgICAgY29uc3QgbGluZSA9IHdvcmRzLm1hcCgod29yZCkgPT4geyB2YXIgX2E7IHJldHVybiAoX2EgPSB3b3JkLnB1bmN0dWF0ZWRfd29yZCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogd29yZC53b3JkOyB9KS5qb2luKFwiIFwiKTtcbiAgICAgICAgY29uc3Qgc3BlYWtlckxhYmVsID0gc3BlYWtlckxhYmVscyA/IGA8diBTcGVha2VyICR7Zmlyc3RXb3JkLnNwZWFrZXJ9PmAgOiBcIlwiO1xuICAgICAgICBvdXRwdXQucHVzaChgJHtzcGVha2VyTGFiZWx9JHtsaW5lfWApO1xuICAgICAgICBvdXRwdXQucHVzaChcIlwiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gb3V0cHV0LmpvaW4oXCJcXG5cIik7XG59O1xuY29uc3Qgc3J0ID0gKHRyYW5zY3JpcHRpb24sIGxpbmVMZW5ndGggPSA4KSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gW107XG4gICAgY29uc3QgZGF0YSA9IHBhcnNlSW5wdXQodHJhbnNjcmlwdGlvbik7XG4gICAgLy8gZ2V0IHRoZSBsaW5lc1xuICAgIGxldCBsaW5lcyA9IGRhdGEuZ2V0TGluZXMobGluZUxlbmd0aCk7XG4gICAgLy8gaXMgc3BlYWtlciBvdXRwdXQgcmVxdWlyZWQ/XG4gICAgY29uc3Qgc3BlYWtlckxhYmVscyA9IFwic3BlYWtlclwiIGluIGxpbmVzWzBdWzBdO1xuICAgIGxldCBlbnRyeSA9IDE7XG4gICAgbGV0IGN1cnJlbnRTcGVha2VyO1xuICAgIGxpbmVzLmZvckVhY2goKHdvcmRzKSA9PiB7XG4gICAgICAgIG91dHB1dC5wdXNoKChlbnRyeSsrKS50b1N0cmluZygpKTtcbiAgICAgICAgY29uc3QgZmlyc3RXb3JkID0gd29yZHNbMF07XG4gICAgICAgIGNvbnN0IGxhc3RXb3JkID0gd29yZHNbd29yZHMubGVuZ3RoIC0gMV07XG4gICAgICAgIG91dHB1dC5wdXNoKGAke3NlY29uZHNUb1RpbWVzdGFtcChmaXJzdFdvcmQuc3RhcnQsIFwiSEg6bW06c3MsU1NTXCIpfSAtLT4gJHtzZWNvbmRzVG9UaW1lc3RhbXAobGFzdFdvcmQuZW5kLCBcIkhIOm1tOnNzLFNTU1wiKX1gKTtcbiAgICAgICAgY29uc3QgbGluZSA9IHdvcmRzLm1hcCgod29yZCkgPT4geyB2YXIgX2E7IHJldHVybiAoX2EgPSB3b3JkLnB1bmN0dWF0ZWRfd29yZCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogd29yZC53b3JkOyB9KS5qb2luKFwiIFwiKTtcbiAgICAgICAgY29uc3Qgc3BlYWtlckxhYmVsID0gc3BlYWtlckxhYmVscyAmJiBjdXJyZW50U3BlYWtlciAhPT0gZmlyc3RXb3JkLnNwZWFrZXJcbiAgICAgICAgICAgID8gYFtTcGVha2VyICR7Zmlyc3RXb3JkLnNwZWFrZXJ9XVxcbmBcbiAgICAgICAgICAgIDogXCJcIjtcbiAgICAgICAgb3V0cHV0LnB1c2goYCR7c3BlYWtlckxhYmVsfSR7bGluZX1gKTtcbiAgICAgICAgb3V0cHV0LnB1c2goXCJcIik7XG4gICAgICAgIGN1cnJlbnRTcGVha2VyID0gZmlyc3RXb3JkLnNwZWFrZXI7XG4gICAgfSk7XG4gICAgcmV0dXJuIG91dHB1dC5qb2luKFwiXFxuXCIpO1xufTtcbmV4cG9ydCB7IHdlYnZ0dCwgc3J0IH07XG4vKipcbiAqIEhlbHBmdWwgZXhwb3J0cy5cbiAqL1xuZXhwb3J0ICogZnJvbSBcIi4vY29udmVydGVyc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWIvaGVscGVyc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkRlZXBncmFtQ29udmVydGVyIiwiaXNDb252ZXJ0ZXIiLCJzZWNvbmRzVG9UaW1lc3RhbXAiLCJwYXJzZUlucHV0IiwidHJhbnNjcmlwdGlvbiIsIndlYnZ0dCIsImxpbmVMZW5ndGgiLCJvdXRwdXQiLCJkYXRhIiwicHVzaCIsImdldEhlYWRlcnMiLCJqb2luIiwibGluZXMiLCJnZXRMaW5lcyIsInNwZWFrZXJMYWJlbHMiLCJmb3JFYWNoIiwid29yZHMiLCJmaXJzdFdvcmQiLCJsYXN0V29yZCIsImxlbmd0aCIsInN0YXJ0IiwiZW5kIiwibGluZSIsIm1hcCIsIndvcmQiLCJfYSIsInB1bmN0dWF0ZWRfd29yZCIsInNwZWFrZXJMYWJlbCIsInNwZWFrZXIiLCJzcnQiLCJlbnRyeSIsImN1cnJlbnRTcGVha2VyIiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/captions/dist/module/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/captions/dist/module/lib/helpers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@deepgram/captions/dist/module/lib/helpers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chunkArray: () => (/* binding */ chunkArray),\n/* harmony export */   secondsToTimestamp: () => (/* binding */ secondsToTimestamp)\n/* harmony export */ });\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"(rsc)/./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs/plugin/utc */ \"(rsc)/./node_modules/dayjs/plugin/utc.js\");\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__);\n\n\ndayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default()));\nfunction secondsToTimestamp(seconds, format = \"HH:mm:ss.SSS\") {\n    return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(seconds * 1000).utc().format(format);\n}\nfunction chunkArray(arr, length) {\n    const res = [];\n    for(let i = 0; i < arr.length; i += length){\n        const chunkarr = arr.slice(i, i + length);\n        res.push(chunkarr);\n    }\n    return res;\n} //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL2NhcHRpb25zL2Rpc3QvbW9kdWxlL2xpYi9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQjtBQUNTO0FBQ25DQSxtREFBWSxDQUFDQyx5REFBR0E7QUFDVCxTQUFTRSxtQkFBbUJDLE9BQU8sRUFBRUMsU0FBUyxjQUFjO0lBQy9ELE9BQU9MLDRDQUFLQSxDQUFDSSxVQUFVLE1BQ2xCSCxHQUFHLEdBQ0hJLE1BQU0sQ0FBQ0E7QUFDaEI7QUFDTyxTQUFTQyxXQUFXQyxHQUFHLEVBQUVDLE1BQU07SUFDbEMsTUFBTUMsTUFBTSxFQUFFO0lBQ2QsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILElBQUlDLE1BQU0sRUFBRUUsS0FBS0YsT0FBUTtRQUN6QyxNQUFNRyxXQUFXSixJQUFJSyxLQUFLLENBQUNGLEdBQUdBLElBQUlGO1FBQ2xDQyxJQUFJSSxJQUFJLENBQUNGO0lBQ2I7SUFDQSxPQUFPRjtBQUNYLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vY2FwdGlvbnMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanM/ZmVjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF5anMgZnJvbSBcImRheWpzXCI7XG5pbXBvcnQgdXRjIGZyb20gXCJkYXlqcy9wbHVnaW4vdXRjXCI7XG5kYXlqcy5leHRlbmQodXRjKTtcbmV4cG9ydCBmdW5jdGlvbiBzZWNvbmRzVG9UaW1lc3RhbXAoc2Vjb25kcywgZm9ybWF0ID0gXCJISDptbTpzcy5TU1NcIikge1xuICAgIHJldHVybiBkYXlqcyhzZWNvbmRzICogMTAwMClcbiAgICAgICAgLnV0YygpXG4gICAgICAgIC5mb3JtYXQoZm9ybWF0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjaHVua0FycmF5KGFyciwgbGVuZ3RoKSB7XG4gICAgY29uc3QgcmVzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpICs9IGxlbmd0aCkge1xuICAgICAgICBjb25zdCBjaHVua2FyciA9IGFyci5zbGljZShpLCBpICsgbGVuZ3RoKTtcbiAgICAgICAgcmVzLnB1c2goY2h1bmthcnIpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOlsiZGF5anMiLCJ1dGMiLCJleHRlbmQiLCJzZWNvbmRzVG9UaW1lc3RhbXAiLCJzZWNvbmRzIiwiZm9ybWF0IiwiY2h1bmtBcnJheSIsImFyciIsImxlbmd0aCIsInJlcyIsImkiLCJjaHVua2FyciIsInNsaWNlIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/captions/dist/module/lib/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/DeepgramClient.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/DeepgramClient.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DeepgramClient)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AuthRestClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ManageRestClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ModelsRestClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SelfHostedRestClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ReadRestClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AgentLiveClient.js\");\n\n\n/**\n * The DeepgramClient class provides access to various Deepgram API clients, including ListenClient, ManageClient, SelfHostedRestClient, ReadClient, and SpeakClient.\n *\n * @see https://github.com/deepgram/deepgram-js-sdk\n */ class DeepgramClient extends _packages__WEBPACK_IMPORTED_MODULE_0__.AbstractClient {\n    /**\n     * Returns a new instance of the AuthRestClient, which provides access to the Deepgram API's temporary token endpoints.\n     *\n     * @returns {AuthRestClient} A new instance of the AuthRestClient.\n     * @see https://developers.deepgram.com/reference/token-based-auth-api/grant-token\n     */ get auth() {\n        return new _packages__WEBPACK_IMPORTED_MODULE_1__.AuthRestClient(this.options);\n    }\n    /**\n     * Returns a new instance of the ListenClient, which provides access to the Deepgram API's listening functionality.\n     *\n     * @returns {ListenClient} A new instance of the ListenClient.\n     */ get listen() {\n        return new _packages__WEBPACK_IMPORTED_MODULE_2__.ListenClient(this.options);\n    }\n    /**\n     * Returns a new instance of the ManageClient, which provides access to the Deepgram API's management functionality.\n     *\n     * @returns {ManageClient} A new instance of the ManageClient.\n     */ get manage() {\n        return new _packages__WEBPACK_IMPORTED_MODULE_3__.ManageClient(this.options);\n    }\n    /**\n     * Returns a new instance of the ModelsRestClient, which provides access to the Deepgram API's model functionality.\n     *\n     * @returns {ModelsRestClient} A new instance of the ModelsRestClient.\n     */ get models() {\n        return new _packages__WEBPACK_IMPORTED_MODULE_4__.ModelsRestClient(this.options);\n    }\n    /**\n     * Returns a new instance of the SelfHostedRestClient, which provides access to the Deepgram API's self-hosted functionality.\n     *\n     * @returns {OnPremClient} A new instance of the SelfHostedRestClient named as OnPremClient.\n     * @deprecated use selfhosted() instead\n     */ get onprem() {\n        return this.selfhosted;\n    }\n    /**\n     * Returns a new instance of the SelfHostedRestClient, which provides access to the Deepgram API's self-hosted functionality.\n     *\n     * @returns {SelfHostedRestClient} A new instance of the SelfHostedRestClient.\n     */ get selfhosted() {\n        return new _packages__WEBPACK_IMPORTED_MODULE_5__.SelfHostedRestClient(this.options);\n    }\n    /**\n     * Returns a new instance of the ReadClient, which provides access to the Deepgram API's reading functionality.\n     *\n     * @returns {ReadClient} A new instance of the ReadClient.\n     */ get read() {\n        return new _packages__WEBPACK_IMPORTED_MODULE_6__.ReadClient(this.options);\n    }\n    /**\n     * Returns a new instance of the SpeakClient, which provides access to the Deepgram API's speaking functionality.\n     *\n     * @returns {SpeakClient} A new instance of the SpeakClient.\n     */ get speak() {\n        return new _packages__WEBPACK_IMPORTED_MODULE_7__.SpeakClient(this.options);\n    }\n    /**\n     * Returns a new instance of the AgentLiveClient, which provides access to Deepgram's Voice Agent API.\n     *\n     * @returns {AgentLiveClient} A new instance of the AgentLiveClient.\n     * @beta\n     */ agent(endpoint = \"/:version/agent/converse\") {\n        return new _packages__WEBPACK_IMPORTED_MODULE_8__.AgentLiveClient(this.options, endpoint);\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get transcription() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get projects() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get keys() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get members() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get scopes() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get invitation() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get usage() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n    /**\n     * @deprecated\n     * @see https://dpgr.am/js-v3\n     */ get billing() {\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_9__.DeepgramVersionError();\n    }\n} //# sourceMappingURL=DeepgramClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/DeepgramClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.AbstractClient),\n/* harmony export */   AbstractLiveClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.AbstractLiveClient),\n/* harmony export */   AbstractRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.AbstractRestClient),\n/* harmony export */   AbstractRestfulClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.AbstractRestfulClient),\n/* harmony export */   AbstractWsClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.AbstractWsClient),\n/* harmony export */   AgentEvents: () => (/* reexport safe */ _lib_enums__WEBPACK_IMPORTED_MODULE_3__.AgentEvents),\n/* harmony export */   AgentLiveClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.AgentLiveClient),\n/* harmony export */   AuthRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.AuthRestClient),\n/* harmony export */   CONNECTION_STATE: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.CONNECTION_STATE),\n/* harmony export */   CallbackUrl: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.CallbackUrl),\n/* harmony export */   DEFAULT_AGENT_OPTIONS: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_AGENT_OPTIONS),\n/* harmony export */   DEFAULT_AGENT_URL: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_AGENT_URL),\n/* harmony export */   DEFAULT_GLOBAL_OPTIONS: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_GLOBAL_OPTIONS),\n/* harmony export */   DEFAULT_HEADERS: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_HEADERS),\n/* harmony export */   DEFAULT_OPTIONS: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_OPTIONS),\n/* harmony export */   DEFAULT_URL: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_URL),\n/* harmony export */   Deepgram: () => (/* binding */ Deepgram),\n/* harmony export */   DeepgramApiError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_0__.DeepgramApiError),\n/* harmony export */   DeepgramClient: () => (/* reexport safe */ _DeepgramClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   DeepgramError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_0__.DeepgramError),\n/* harmony export */   DeepgramUnknownError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_0__.DeepgramUnknownError),\n/* harmony export */   DeepgramVersionError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_0__.DeepgramVersionError),\n/* harmony export */   ListenClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ListenClient),\n/* harmony export */   ListenLiveClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ListenLiveClient),\n/* harmony export */   ListenRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ListenRestClient),\n/* harmony export */   LiveClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.LiveClient),\n/* harmony export */   LiveConnectionState: () => (/* reexport safe */ _lib_enums__WEBPACK_IMPORTED_MODULE_3__.LiveConnectionState),\n/* harmony export */   LiveTTSEvents: () => (/* reexport safe */ _lib_enums__WEBPACK_IMPORTED_MODULE_3__.LiveTTSEvents),\n/* harmony export */   LiveTranscriptionEvents: () => (/* reexport safe */ _lib_enums__WEBPACK_IMPORTED_MODULE_3__.LiveTranscriptionEvents),\n/* harmony export */   ManageClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ManageClient),\n/* harmony export */   ManageRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ManageRestClient),\n/* harmony export */   ModelsRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ModelsRestClient),\n/* harmony export */   OnPremClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.OnPremClient),\n/* harmony export */   PrerecordedClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.PrerecordedClient),\n/* harmony export */   ReadClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ReadClient),\n/* harmony export */   ReadRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.ReadRestClient),\n/* harmony export */   SOCKET_STATES: () => (/* reexport safe */ _lib_constants__WEBPACK_IMPORTED_MODULE_4__.SOCKET_STATES),\n/* harmony export */   SelfHostedRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.SelfHostedRestClient),\n/* harmony export */   SpeakClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.SpeakClient),\n/* harmony export */   SpeakLiveClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.SpeakLiveClient),\n/* harmony export */   SpeakRestClient: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.SpeakRestClient),\n/* harmony export */   appendSearchParams: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.appendSearchParams),\n/* harmony export */   applyDefaults: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.applyDefaults),\n/* harmony export */   buildRequestUrl: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.buildRequestUrl),\n/* harmony export */   convertLegacyOptions: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.convertLegacyOptions),\n/* harmony export */   convertProtocolToWs: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.convertProtocolToWs),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   isDeepgramClientOptions: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.isDeepgramClientOptions),\n/* harmony export */   isDeepgramError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_0__.isDeepgramError),\n/* harmony export */   isFileSource: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.isFileSource),\n/* harmony export */   isLiveSchema: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.isLiveSchema),\n/* harmony export */   isTextSource: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.isTextSource),\n/* harmony export */   isUrlSource: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.isUrlSource),\n/* harmony export */   noop: () => (/* reexport safe */ _packages__WEBPACK_IMPORTED_MODULE_2__.noop),\n/* harmony export */   resolveHeadersConstructor: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.resolveHeadersConstructor),\n/* harmony export */   srt: () => (/* reexport safe */ _deepgram_captions__WEBPACK_IMPORTED_MODULE_6__.srt),\n/* harmony export */   stripTrailingSlash: () => (/* reexport safe */ _lib_helpers__WEBPACK_IMPORTED_MODULE_5__.stripTrailingSlash),\n/* harmony export */   webvtt: () => (/* reexport safe */ _deepgram_captions__WEBPACK_IMPORTED_MODULE_6__.webvtt)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _DeepgramClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DeepgramClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/DeepgramClient.js\");\n/* harmony import */ var _packages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./packages */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/index.js\");\n/* harmony import */ var _lib_enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/enums */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/index.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/constants */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/helpers */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\");\n/* harmony import */ var _deepgram_captions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deepgram/captions */ \"(rsc)/./node_modules/@deepgram/captions/dist/module/index.js\");\n\n\n/**\n * This class is deprecated and should not be used. It throws a `DeepgramVersionError` when instantiated.\n *\n * @deprecated\n * @see https://dpgr.am/js-v3\n */ class Deepgram {\n    constructor(apiKey, apiUrl, requireSSL){\n        this.apiKey = apiKey;\n        this.apiUrl = apiUrl;\n        this.requireSSL = requireSSL;\n        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_0__.DeepgramVersionError();\n    }\n}\nfunction createClient(keyOrOptions, options) {\n    let resolvedOptions = {};\n    if (typeof keyOrOptions === \"string\" || typeof keyOrOptions === \"function\") {\n        if (typeof options === \"object\") {\n            resolvedOptions = options;\n        }\n        resolvedOptions.key = keyOrOptions;\n    } else if (typeof keyOrOptions === \"object\") {\n        resolvedOptions = keyOrOptions;\n    }\n    return new _DeepgramClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"](resolvedOptions);\n}\n\n/**\n * Helpful exports.\n */ \n\n\n\n\n\n/**\n * Captions. These will be tree-shaken if unused.\n *\n * @see https://github.com/deepgram/deepgram-node-captions\n *\n * import/export declarations don't do anything but set up an alias to the\n * exported variable, they do not count as a \"use\". Given their semantics,\n * they are tracked specially by any bundler and will not adversely affect\n * tree-shaking.\n */  //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvRDtBQUNOO0FBQzlDOzs7OztDQUtDLEdBQ0QsTUFBTUU7SUFDRkMsWUFBWUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFVBQVUsQ0FBRTtRQUNwQyxJQUFJLENBQUNGLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNDLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNDLFVBQVUsR0FBR0E7UUFDbEIsTUFBTSxJQUFJTiw2REFBb0JBO0lBQ2xDO0FBQ0o7QUFDQSxTQUFTTyxhQUFhQyxZQUFZLEVBQUVDLE9BQU87SUFDdkMsSUFBSUMsa0JBQWtCLENBQUM7SUFDdkIsSUFBSSxPQUFPRixpQkFBaUIsWUFBWSxPQUFPQSxpQkFBaUIsWUFBWTtRQUN4RSxJQUFJLE9BQU9DLFlBQVksVUFBVTtZQUM3QkMsa0JBQWtCRDtRQUN0QjtRQUNBQyxnQkFBZ0JDLEdBQUcsR0FBR0g7SUFDMUIsT0FDSyxJQUFJLE9BQU9BLGlCQUFpQixVQUFVO1FBQ3ZDRSxrQkFBa0JGO0lBQ3RCO0lBQ0EsT0FBTyxJQUFJUCx1REFBY0EsQ0FBQ1M7QUFDOUI7QUFDa0Q7QUFDbEQ7O0NBRUMsR0FDMEI7QUFDQztBQUNBO0FBQ0k7QUFDSDtBQUNDO0FBQzlCOzs7Ozs7Ozs7Q0FTQyxHQUNnRCxDQUNqRCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWxsLWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL0BkZWVwZ3JhbS9zZGsvZGlzdC9tb2R1bGUvaW5kZXguanM/OTZhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWVwZ3JhbVZlcnNpb25FcnJvciB9IGZyb20gXCIuL2xpYi9lcnJvcnNcIjtcbmltcG9ydCBEZWVwZ3JhbUNsaWVudCBmcm9tIFwiLi9EZWVwZ3JhbUNsaWVudFwiO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGlzIGRlcHJlY2F0ZWQgYW5kIHNob3VsZCBub3QgYmUgdXNlZC4gSXQgdGhyb3dzIGEgYERlZXBncmFtVmVyc2lvbkVycm9yYCB3aGVuIGluc3RhbnRpYXRlZC5cbiAqXG4gKiBAZGVwcmVjYXRlZFxuICogQHNlZSBodHRwczovL2RwZ3IuYW0vanMtdjNcbiAqL1xuY2xhc3MgRGVlcGdyYW0ge1xuICAgIGNvbnN0cnVjdG9yKGFwaUtleSwgYXBpVXJsLCByZXF1aXJlU1NMKSB7XG4gICAgICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgICAgICB0aGlzLmFwaVVybCA9IGFwaVVybDtcbiAgICAgICAgdGhpcy5yZXF1aXJlU1NMID0gcmVxdWlyZVNTTDtcbiAgICAgICAgdGhyb3cgbmV3IERlZXBncmFtVmVyc2lvbkVycm9yKCk7XG4gICAgfVxufVxuZnVuY3Rpb24gY3JlYXRlQ2xpZW50KGtleU9yT3B0aW9ucywgb3B0aW9ucykge1xuICAgIGxldCByZXNvbHZlZE9wdGlvbnMgPSB7fTtcbiAgICBpZiAodHlwZW9mIGtleU9yT3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCB0eXBlb2Yga2V5T3JPcHRpb25zID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICByZXNvbHZlZE9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIHJlc29sdmVkT3B0aW9ucy5rZXkgPSBrZXlPck9wdGlvbnM7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBrZXlPck9wdGlvbnMgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgcmVzb2x2ZWRPcHRpb25zID0ga2V5T3JPcHRpb25zO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IERlZXBncmFtQ2xpZW50KHJlc29sdmVkT3B0aW9ucyk7XG59XG5leHBvcnQgeyBjcmVhdGVDbGllbnQsIERlZXBncmFtQ2xpZW50LCBEZWVwZ3JhbSB9O1xuLyoqXG4gKiBIZWxwZnVsIGV4cG9ydHMuXG4gKi9cbmV4cG9ydCAqIGZyb20gXCIuL3BhY2thZ2VzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWIvdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xpYi9lbnVtc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL2NvbnN0YW50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL2Vycm9yc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL2hlbHBlcnNcIjtcbi8qKlxuICogQ2FwdGlvbnMuIFRoZXNlIHdpbGwgYmUgdHJlZS1zaGFrZW4gaWYgdW51c2VkLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2RlZXBncmFtL2RlZXBncmFtLW5vZGUtY2FwdGlvbnNcbiAqXG4gKiBpbXBvcnQvZXhwb3J0IGRlY2xhcmF0aW9ucyBkb24ndCBkbyBhbnl0aGluZyBidXQgc2V0IHVwIGFuIGFsaWFzIHRvIHRoZVxuICogZXhwb3J0ZWQgdmFyaWFibGUsIHRoZXkgZG8gbm90IGNvdW50IGFzIGEgXCJ1c2VcIi4gR2l2ZW4gdGhlaXIgc2VtYW50aWNzLFxuICogdGhleSBhcmUgdHJhY2tlZCBzcGVjaWFsbHkgYnkgYW55IGJ1bmRsZXIgYW5kIHdpbGwgbm90IGFkdmVyc2VseSBhZmZlY3RcbiAqIHRyZWUtc2hha2luZy5cbiAqL1xuZXhwb3J0IHsgd2VidnR0LCBzcnQgfSBmcm9tIFwiQGRlZXBncmFtL2NhcHRpb25zXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiRGVlcGdyYW1WZXJzaW9uRXJyb3IiLCJEZWVwZ3JhbUNsaWVudCIsIkRlZXBncmFtIiwiY29uc3RydWN0b3IiLCJhcGlLZXkiLCJhcGlVcmwiLCJyZXF1aXJlU1NMIiwiY3JlYXRlQ2xpZW50Iiwia2V5T3JPcHRpb25zIiwib3B0aW9ucyIsInJlc29sdmVkT3B0aW9ucyIsImtleSIsIndlYnZ0dCIsInNydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/constants.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONNECTION_STATE: () => (/* binding */ CONNECTION_STATE),\n/* harmony export */   DEFAULT_AGENT_OPTIONS: () => (/* binding */ DEFAULT_AGENT_OPTIONS),\n/* harmony export */   DEFAULT_AGENT_URL: () => (/* binding */ DEFAULT_AGENT_URL),\n/* harmony export */   DEFAULT_GLOBAL_OPTIONS: () => (/* binding */ DEFAULT_GLOBAL_OPTIONS),\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS),\n/* harmony export */   DEFAULT_OPTIONS: () => (/* binding */ DEFAULT_OPTIONS),\n/* harmony export */   DEFAULT_URL: () => (/* binding */ DEFAULT_URL),\n/* harmony export */   SOCKET_STATES: () => (/* binding */ SOCKET_STATES)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\");\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runtime */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/runtime.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/version.js\");\n\n\n\nconst getAgent = ()=>{\n    if ((0,_runtime__WEBPACK_IMPORTED_MODULE_0__.isNode)()) {\n        return `node/${_runtime__WEBPACK_IMPORTED_MODULE_0__.NODE_VERSION}`;\n    } else if ((0,_runtime__WEBPACK_IMPORTED_MODULE_0__.isBun)()) {\n        return `bun/${_runtime__WEBPACK_IMPORTED_MODULE_0__.BUN_VERSION}`;\n    } else if ((0,_runtime__WEBPACK_IMPORTED_MODULE_0__.isBrowser)()) {\n        return `javascript ${_runtime__WEBPACK_IMPORTED_MODULE_0__.BROWSER_AGENT}`;\n    } else {\n        return `unknown`;\n    }\n};\nconst DEFAULT_HEADERS = {\n    \"Content-Type\": `application/json`,\n    \"X-Client-Info\": `@deepgram/sdk; ${(0,_runtime__WEBPACK_IMPORTED_MODULE_0__.isBrowser)() ? \"browser\" : \"server\"}; v${_version__WEBPACK_IMPORTED_MODULE_1__.version}`,\n    \"User-Agent\": `@deepgram/sdk/${_version__WEBPACK_IMPORTED_MODULE_1__.version} ${getAgent()}`\n};\nconst DEFAULT_URL = \"https://api.deepgram.com\";\nconst DEFAULT_AGENT_URL = \"wss://agent.deepgram.com\";\nconst DEFAULT_GLOBAL_OPTIONS = {\n    fetch: {\n        options: {\n            url: DEFAULT_URL,\n            headers: DEFAULT_HEADERS\n        }\n    },\n    websocket: {\n        options: {\n            url: (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.convertProtocolToWs)(DEFAULT_URL),\n            _nodeOnlyHeaders: DEFAULT_HEADERS\n        }\n    }\n};\nconst DEFAULT_AGENT_OPTIONS = {\n    fetch: {\n        options: {\n            url: DEFAULT_URL,\n            headers: DEFAULT_HEADERS\n        }\n    },\n    websocket: {\n        options: {\n            url: DEFAULT_AGENT_URL,\n            _nodeOnlyHeaders: DEFAULT_HEADERS\n        }\n    }\n};\nconst DEFAULT_OPTIONS = {\n    global: DEFAULT_GLOBAL_OPTIONS,\n    agent: DEFAULT_AGENT_OPTIONS\n};\nvar SOCKET_STATES;\n(function(SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nvar CONNECTION_STATE;\n(function(CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {})); //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQytDO0FBQzNEO0FBQ3BDLE1BQU1RLFdBQVc7SUFDYixJQUFJTCxnREFBTUEsSUFBSTtRQUNWLE9BQU8sQ0FBQyxLQUFLLEVBQUVDLGtEQUFZQSxDQUFDLENBQUM7SUFDakMsT0FDSyxJQUFJRiwrQ0FBS0EsSUFBSTtRQUNkLE9BQU8sQ0FBQyxJQUFJLEVBQUVHLGlEQUFXQSxDQUFDLENBQUM7SUFDL0IsT0FDSyxJQUFJSixtREFBU0EsSUFBSTtRQUNsQixPQUFPLENBQUMsV0FBVyxFQUFFSyxtREFBYUEsQ0FBQyxDQUFDO0lBQ3hDLE9BQ0s7UUFDRCxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3BCO0FBQ0o7QUFDTyxNQUFNRyxrQkFBa0I7SUFDM0IsZ0JBQWdCLENBQUMsZ0JBQWdCLENBQUM7SUFDbEMsaUJBQWlCLENBQUMsZUFBZSxFQUFFUixtREFBU0EsS0FBSyxZQUFZLFNBQVMsR0FBRyxFQUFFTSw2Q0FBT0EsQ0FBQyxDQUFDO0lBQ3BGLGNBQWMsQ0FBQyxjQUFjLEVBQUVBLDZDQUFPQSxDQUFDLENBQUMsRUFBRUMsV0FBVyxDQUFDO0FBQzFELEVBQUU7QUFDSyxNQUFNRSxjQUFjLDJCQUEyQjtBQUMvQyxNQUFNQyxvQkFBb0IsMkJBQTJCO0FBQ3JELE1BQU1DLHlCQUF5QjtJQUNsQ0MsT0FBTztRQUFFQyxTQUFTO1lBQUVDLEtBQUtMO1lBQWFNLFNBQVNQO1FBQWdCO0lBQUU7SUFDakVRLFdBQVc7UUFDUEgsU0FBUztZQUFFQyxLQUFLZiw2REFBbUJBLENBQUNVO1lBQWNRLGtCQUFrQlQ7UUFBZ0I7SUFDeEY7QUFDSixFQUFFO0FBQ0ssTUFBTVUsd0JBQXdCO0lBQ2pDTixPQUFPO1FBQUVDLFNBQVM7WUFBRUMsS0FBS0w7WUFBYU0sU0FBU1A7UUFBZ0I7SUFBRTtJQUNqRVEsV0FBVztRQUNQSCxTQUFTO1lBQUVDLEtBQUtKO1lBQW1CTyxrQkFBa0JUO1FBQWdCO0lBQ3pFO0FBQ0osRUFBRTtBQUNLLE1BQU1XLGtCQUFrQjtJQUMzQkMsUUFBUVQ7SUFDUlUsT0FBT0g7QUFDWCxFQUFFO0FBQ0ssSUFBSUksY0FBYztBQUN4QixVQUFVQSxhQUFhO0lBQ3BCQSxhQUFhLENBQUNBLGFBQWEsQ0FBQyxhQUFhLEdBQUcsRUFBRSxHQUFHO0lBQ2pEQSxhQUFhLENBQUNBLGFBQWEsQ0FBQyxPQUFPLEdBQUcsRUFBRSxHQUFHO0lBQzNDQSxhQUFhLENBQUNBLGFBQWEsQ0FBQyxVQUFVLEdBQUcsRUFBRSxHQUFHO0lBQzlDQSxhQUFhLENBQUNBLGFBQWEsQ0FBQyxTQUFTLEdBQUcsRUFBRSxHQUFHO0FBQ2pELEdBQUdBLGlCQUFrQkEsQ0FBQUEsZ0JBQWdCLENBQUM7QUFDL0IsSUFBSUMsaUJBQWlCO0FBQzNCLFVBQVVBLGdCQUFnQjtJQUN2QkEsZ0JBQWdCLENBQUMsYUFBYSxHQUFHO0lBQ2pDQSxnQkFBZ0IsQ0FBQyxPQUFPLEdBQUc7SUFDM0JBLGdCQUFnQixDQUFDLFVBQVUsR0FBRztJQUM5QkEsZ0JBQWdCLENBQUMsU0FBUyxHQUFHO0FBQ2pDLEdBQUdBLG9CQUFxQkEsQ0FBQUEsbUJBQW1CLENBQUMsS0FDNUMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vc2RrL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanM/NzFmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0UHJvdG9jb2xUb1dzIH0gZnJvbSBcIi4vaGVscGVyc1wiO1xuaW1wb3J0IHsgaXNCcm93c2VyLCBpc0J1biwgaXNOb2RlLCBOT0RFX1ZFUlNJT04sIEJVTl9WRVJTSU9OLCBCUk9XU0VSX0FHRU5UIH0gZnJvbSBcIi4vcnVudGltZVwiO1xuaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gXCIuL3ZlcnNpb25cIjtcbmNvbnN0IGdldEFnZW50ID0gKCkgPT4ge1xuICAgIGlmIChpc05vZGUoKSkge1xuICAgICAgICByZXR1cm4gYG5vZGUvJHtOT0RFX1ZFUlNJT059YDtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNCdW4oKSkge1xuICAgICAgICByZXR1cm4gYGJ1bi8ke0JVTl9WRVJTSU9OfWA7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQnJvd3NlcigpKSB7XG4gICAgICAgIHJldHVybiBgamF2YXNjcmlwdCAke0JST1dTRVJfQUdFTlR9YDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBgdW5rbm93bmA7XG4gICAgfVxufTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7XG4gICAgXCJDb250ZW50LVR5cGVcIjogYGFwcGxpY2F0aW9uL2pzb25gLFxuICAgIFwiWC1DbGllbnQtSW5mb1wiOiBgQGRlZXBncmFtL3NkazsgJHtpc0Jyb3dzZXIoKSA/IFwiYnJvd3NlclwiIDogXCJzZXJ2ZXJcIn07IHYke3ZlcnNpb259YCxcbiAgICBcIlVzZXItQWdlbnRcIjogYEBkZWVwZ3JhbS9zZGsvJHt2ZXJzaW9ufSAke2dldEFnZW50KCl9YCxcbn07XG5leHBvcnQgY29uc3QgREVGQVVMVF9VUkwgPSBcImh0dHBzOi8vYXBpLmRlZXBncmFtLmNvbVwiO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQUdFTlRfVVJMID0gXCJ3c3M6Ly9hZ2VudC5kZWVwZ3JhbS5jb21cIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0dMT0JBTF9PUFRJT05TID0ge1xuICAgIGZldGNoOiB7IG9wdGlvbnM6IHsgdXJsOiBERUZBVUxUX1VSTCwgaGVhZGVyczogREVGQVVMVF9IRUFERVJTIH0gfSxcbiAgICB3ZWJzb2NrZXQ6IHtcbiAgICAgICAgb3B0aW9uczogeyB1cmw6IGNvbnZlcnRQcm90b2NvbFRvV3MoREVGQVVMVF9VUkwpLCBfbm9kZU9ubHlIZWFkZXJzOiBERUZBVUxUX0hFQURFUlMgfSxcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0FHRU5UX09QVElPTlMgPSB7XG4gICAgZmV0Y2g6IHsgb3B0aW9uczogeyB1cmw6IERFRkFVTFRfVVJMLCBoZWFkZXJzOiBERUZBVUxUX0hFQURFUlMgfSB9LFxuICAgIHdlYnNvY2tldDoge1xuICAgICAgICBvcHRpb25zOiB7IHVybDogREVGQVVMVF9BR0VOVF9VUkwsIF9ub2RlT25seUhlYWRlcnM6IERFRkFVTFRfSEVBREVSUyB9LFxuICAgIH0sXG59O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgICBnbG9iYWw6IERFRkFVTFRfR0xPQkFMX09QVElPTlMsXG4gICAgYWdlbnQ6IERFRkFVTFRfQUdFTlRfT1BUSU9OUyxcbn07XG5leHBvcnQgdmFyIFNPQ0tFVF9TVEFURVM7XG4oZnVuY3Rpb24gKFNPQ0tFVF9TVEFURVMpIHtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJjb25uZWN0aW5nXCJdID0gMF0gPSBcImNvbm5lY3RpbmdcIjtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJvcGVuXCJdID0gMV0gPSBcIm9wZW5cIjtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJjbG9zaW5nXCJdID0gMl0gPSBcImNsb3NpbmdcIjtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJjbG9zZWRcIl0gPSAzXSA9IFwiY2xvc2VkXCI7XG59KShTT0NLRVRfU1RBVEVTIHx8IChTT0NLRVRfU1RBVEVTID0ge30pKTtcbmV4cG9ydCB2YXIgQ09OTkVDVElPTl9TVEFURTtcbihmdW5jdGlvbiAoQ09OTkVDVElPTl9TVEFURSkge1xuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDb25uZWN0aW5nXCJdID0gXCJjb25uZWN0aW5nXCI7XG4gICAgQ09OTkVDVElPTl9TVEFURVtcIk9wZW5cIl0gPSBcIm9wZW5cIjtcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiQ2xvc2luZ1wiXSA9IFwiY2xvc2luZ1wiO1xuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDbG9zZWRcIl0gPSBcImNsb3NlZFwiO1xufSkoQ09OTkVDVElPTl9TVEFURSB8fCAoQ09OTkVDVElPTl9TVEFURSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbImNvbnZlcnRQcm90b2NvbFRvV3MiLCJpc0Jyb3dzZXIiLCJpc0J1biIsImlzTm9kZSIsIk5PREVfVkVSU0lPTiIsIkJVTl9WRVJTSU9OIiwiQlJPV1NFUl9BR0VOVCIsInZlcnNpb24iLCJnZXRBZ2VudCIsIkRFRkFVTFRfSEVBREVSUyIsIkRFRkFVTFRfVVJMIiwiREVGQVVMVF9BR0VOVF9VUkwiLCJERUZBVUxUX0dMT0JBTF9PUFRJT05TIiwiZmV0Y2giLCJvcHRpb25zIiwidXJsIiwiaGVhZGVycyIsIndlYnNvY2tldCIsIl9ub2RlT25seUhlYWRlcnMiLCJERUZBVUxUX0FHRU5UX09QVElPTlMiLCJERUZBVUxUX09QVElPTlMiLCJnbG9iYWwiLCJhZ2VudCIsIlNPQ0tFVF9TVEFURVMiLCJDT05ORUNUSU9OX1NUQVRFIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/AgentEvents.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/enums/AgentEvents.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentEvents: () => (/* binding */ AgentEvents)\n/* harmony export */ });\nvar AgentEvents;\n(function(AgentEvents) {\n    /**\n     * Built in socket events.\n     */ AgentEvents[\"Open\"] = \"Open\";\n    AgentEvents[\"Close\"] = \"Close\";\n    AgentEvents[\"Error\"] = \"Error\";\n    /**\n     * Audio event?\n     */ AgentEvents[\"Audio\"] = \"Audio\";\n    /**\n     * Confirms the successful connection to the websocket.\n     * { type: \"Welcome\", request_id: \"String\"}\n     */ AgentEvents[\"Welcome\"] = \"Welcome\";\n    /**\n     * Confirms that your `configure` request was successful.\n     * { type: \"SettingsApplied\" }\n     */ AgentEvents[\"SettingsApplied\"] = \"SettingsApplied\";\n    /**\n     * Triggered when the agent \"hears\" the user say something.\n     * { type: \"ConversationText\", role: string, content: string }\n     */ AgentEvents[\"ConversationText\"] = \"ConversationText\";\n    /**\n     * Triggered when the agent begins receiving user audio.\n     * { type: \"UserStartedSpeaking\" }\n     */ AgentEvents[\"UserStartedSpeaking\"] = \"UserStartedSpeaking\";\n    /**\n     * Triggered when the user has stopped speaking and the agent is processing the audio.\n     * { type: \"AgentThinking\", content: string }\n     */ AgentEvents[\"AgentThinking\"] = \"AgentThinking\";\n    /**\n     * A request to call client-side functions.\n     * { type: \"FunctionCallRequest\", functions: { id: string; name: string; arguments: string; client_side: boolean}[] }\n     */ AgentEvents[\"FunctionCallRequest\"] = \"FunctionCallRequest\";\n    /**\n     * Triggered when the agent begins streaming an audio response.\n     * YOU WILL ONLY RECEIVE THIS EVENT IF YOU HAVE ENABLED `experimental` IN YOUR CONFIG.\n     * { type: \"AgentStartedSpeaking\", total_latency: number, tts_latency: number, ttt_latency: number }\n     */ AgentEvents[\"AgentStartedSpeaking\"] = \"AgentStartedSpeaking\";\n    /**\n     * Triggered when the agent has finished streaming an audio response.\n     * { type: \"AgentAudioDone\" }\n     */ AgentEvents[\"AgentAudioDone\"] = \"AgentAudioDone\";\n    /**\n     * This event is only emitted when you send an `InjectAgentMessage` request while\n     * the user is currently speaking or the server is processing user audio.\n     * { type: \"InjectionRefused\", message: string }\n     */ AgentEvents[\"InjectionRefused\"] = \"InjectionRefused\";\n    /**\n     * A successful response to the `UpdateInstructions` request.\n     * { type: \"PromptUpdated\" }\n     */ AgentEvents[\"PromptUpdated\"] = \"PromptUpdated\";\n    /**\n     * A successful response to the `UpdateSpeak` request.\n     * { type: \"SpeakUpdated\" }\n     */ AgentEvents[\"SpeakUpdated\"] = \"SpeakUpdated\";\n    /**\n     * Catch all for any other message event\n     */ AgentEvents[\"Unhandled\"] = \"Unhandled\";\n})(AgentEvents || (AgentEvents = {})); //# sourceMappingURL=AgentEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZW51bXMvQWdlbnRFdmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQUlBLFlBQVk7QUFDdEIsVUFBVUEsV0FBVztJQUNsQjs7S0FFQyxHQUNEQSxXQUFXLENBQUMsT0FBTyxHQUFHO0lBQ3RCQSxXQUFXLENBQUMsUUFBUSxHQUFHO0lBQ3ZCQSxXQUFXLENBQUMsUUFBUSxHQUFHO0lBQ3ZCOztLQUVDLEdBQ0RBLFdBQVcsQ0FBQyxRQUFRLEdBQUc7SUFDdkI7OztLQUdDLEdBQ0RBLFdBQVcsQ0FBQyxVQUFVLEdBQUc7SUFDekI7OztLQUdDLEdBQ0RBLFdBQVcsQ0FBQyxrQkFBa0IsR0FBRztJQUNqQzs7O0tBR0MsR0FDREEsV0FBVyxDQUFDLG1CQUFtQixHQUFHO0lBQ2xDOzs7S0FHQyxHQUNEQSxXQUFXLENBQUMsc0JBQXNCLEdBQUc7SUFDckM7OztLQUdDLEdBQ0RBLFdBQVcsQ0FBQyxnQkFBZ0IsR0FBRztJQUMvQjs7O0tBR0MsR0FDREEsV0FBVyxDQUFDLHNCQUFzQixHQUFHO0lBQ3JDOzs7O0tBSUMsR0FDREEsV0FBVyxDQUFDLHVCQUF1QixHQUFHO0lBQ3RDOzs7S0FHQyxHQUNEQSxXQUFXLENBQUMsaUJBQWlCLEdBQUc7SUFDaEM7Ozs7S0FJQyxHQUNEQSxXQUFXLENBQUMsbUJBQW1CLEdBQUc7SUFDbEM7OztLQUdDLEdBQ0RBLFdBQVcsQ0FBQyxnQkFBZ0IsR0FBRztJQUMvQjs7O0tBR0MsR0FDREEsV0FBVyxDQUFDLGVBQWUsR0FBRztJQUM5Qjs7S0FFQyxHQUNEQSxXQUFXLENBQUMsWUFBWSxHQUFHO0FBQy9CLEdBQUdBLGVBQWdCQSxDQUFBQSxjQUFjLENBQUMsS0FDbEMsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vc2RrL2Rpc3QvbW9kdWxlL2xpYi9lbnVtcy9BZ2VudEV2ZW50cy5qcz8zMGI4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgQWdlbnRFdmVudHM7XG4oZnVuY3Rpb24gKEFnZW50RXZlbnRzKSB7XG4gICAgLyoqXG4gICAgICogQnVpbHQgaW4gc29ja2V0IGV2ZW50cy5cbiAgICAgKi9cbiAgICBBZ2VudEV2ZW50c1tcIk9wZW5cIl0gPSBcIk9wZW5cIjtcbiAgICBBZ2VudEV2ZW50c1tcIkNsb3NlXCJdID0gXCJDbG9zZVwiO1xuICAgIEFnZW50RXZlbnRzW1wiRXJyb3JcIl0gPSBcIkVycm9yXCI7XG4gICAgLyoqXG4gICAgICogQXVkaW8gZXZlbnQ/XG4gICAgICovXG4gICAgQWdlbnRFdmVudHNbXCJBdWRpb1wiXSA9IFwiQXVkaW9cIjtcbiAgICAvKipcbiAgICAgKiBDb25maXJtcyB0aGUgc3VjY2Vzc2Z1bCBjb25uZWN0aW9uIHRvIHRoZSB3ZWJzb2NrZXQuXG4gICAgICogeyB0eXBlOiBcIldlbGNvbWVcIiwgcmVxdWVzdF9pZDogXCJTdHJpbmdcIn1cbiAgICAgKi9cbiAgICBBZ2VudEV2ZW50c1tcIldlbGNvbWVcIl0gPSBcIldlbGNvbWVcIjtcbiAgICAvKipcbiAgICAgKiBDb25maXJtcyB0aGF0IHlvdXIgYGNvbmZpZ3VyZWAgcmVxdWVzdCB3YXMgc3VjY2Vzc2Z1bC5cbiAgICAgKiB7IHR5cGU6IFwiU2V0dGluZ3NBcHBsaWVkXCIgfVxuICAgICAqL1xuICAgIEFnZW50RXZlbnRzW1wiU2V0dGluZ3NBcHBsaWVkXCJdID0gXCJTZXR0aW5nc0FwcGxpZWRcIjtcbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyZWQgd2hlbiB0aGUgYWdlbnQgXCJoZWFyc1wiIHRoZSB1c2VyIHNheSBzb21ldGhpbmcuXG4gICAgICogeyB0eXBlOiBcIkNvbnZlcnNhdGlvblRleHRcIiwgcm9sZTogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcgfVxuICAgICAqL1xuICAgIEFnZW50RXZlbnRzW1wiQ29udmVyc2F0aW9uVGV4dFwiXSA9IFwiQ29udmVyc2F0aW9uVGV4dFwiO1xuICAgIC8qKlxuICAgICAqIFRyaWdnZXJlZCB3aGVuIHRoZSBhZ2VudCBiZWdpbnMgcmVjZWl2aW5nIHVzZXIgYXVkaW8uXG4gICAgICogeyB0eXBlOiBcIlVzZXJTdGFydGVkU3BlYWtpbmdcIiB9XG4gICAgICovXG4gICAgQWdlbnRFdmVudHNbXCJVc2VyU3RhcnRlZFNwZWFraW5nXCJdID0gXCJVc2VyU3RhcnRlZFNwZWFraW5nXCI7XG4gICAgLyoqXG4gICAgICogVHJpZ2dlcmVkIHdoZW4gdGhlIHVzZXIgaGFzIHN0b3BwZWQgc3BlYWtpbmcgYW5kIHRoZSBhZ2VudCBpcyBwcm9jZXNzaW5nIHRoZSBhdWRpby5cbiAgICAgKiB7IHR5cGU6IFwiQWdlbnRUaGlua2luZ1wiLCBjb250ZW50OiBzdHJpbmcgfVxuICAgICAqL1xuICAgIEFnZW50RXZlbnRzW1wiQWdlbnRUaGlua2luZ1wiXSA9IFwiQWdlbnRUaGlua2luZ1wiO1xuICAgIC8qKlxuICAgICAqIEEgcmVxdWVzdCB0byBjYWxsIGNsaWVudC1zaWRlIGZ1bmN0aW9ucy5cbiAgICAgKiB7IHR5cGU6IFwiRnVuY3Rpb25DYWxsUmVxdWVzdFwiLCBmdW5jdGlvbnM6IHsgaWQ6IHN0cmluZzsgbmFtZTogc3RyaW5nOyBhcmd1bWVudHM6IHN0cmluZzsgY2xpZW50X3NpZGU6IGJvb2xlYW59W10gfVxuICAgICAqL1xuICAgIEFnZW50RXZlbnRzW1wiRnVuY3Rpb25DYWxsUmVxdWVzdFwiXSA9IFwiRnVuY3Rpb25DYWxsUmVxdWVzdFwiO1xuICAgIC8qKlxuICAgICAqIFRyaWdnZXJlZCB3aGVuIHRoZSBhZ2VudCBiZWdpbnMgc3RyZWFtaW5nIGFuIGF1ZGlvIHJlc3BvbnNlLlxuICAgICAqIFlPVSBXSUxMIE9OTFkgUkVDRUlWRSBUSElTIEVWRU5UIElGIFlPVSBIQVZFIEVOQUJMRUQgYGV4cGVyaW1lbnRhbGAgSU4gWU9VUiBDT05GSUcuXG4gICAgICogeyB0eXBlOiBcIkFnZW50U3RhcnRlZFNwZWFraW5nXCIsIHRvdGFsX2xhdGVuY3k6IG51bWJlciwgdHRzX2xhdGVuY3k6IG51bWJlciwgdHR0X2xhdGVuY3k6IG51bWJlciB9XG4gICAgICovXG4gICAgQWdlbnRFdmVudHNbXCJBZ2VudFN0YXJ0ZWRTcGVha2luZ1wiXSA9IFwiQWdlbnRTdGFydGVkU3BlYWtpbmdcIjtcbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyZWQgd2hlbiB0aGUgYWdlbnQgaGFzIGZpbmlzaGVkIHN0cmVhbWluZyBhbiBhdWRpbyByZXNwb25zZS5cbiAgICAgKiB7IHR5cGU6IFwiQWdlbnRBdWRpb0RvbmVcIiB9XG4gICAgICovXG4gICAgQWdlbnRFdmVudHNbXCJBZ2VudEF1ZGlvRG9uZVwiXSA9IFwiQWdlbnRBdWRpb0RvbmVcIjtcbiAgICAvKipcbiAgICAgKiBUaGlzIGV2ZW50IGlzIG9ubHkgZW1pdHRlZCB3aGVuIHlvdSBzZW5kIGFuIGBJbmplY3RBZ2VudE1lc3NhZ2VgIHJlcXVlc3Qgd2hpbGVcbiAgICAgKiB0aGUgdXNlciBpcyBjdXJyZW50bHkgc3BlYWtpbmcgb3IgdGhlIHNlcnZlciBpcyBwcm9jZXNzaW5nIHVzZXIgYXVkaW8uXG4gICAgICogeyB0eXBlOiBcIkluamVjdGlvblJlZnVzZWRcIiwgbWVzc2FnZTogc3RyaW5nIH1cbiAgICAgKi9cbiAgICBBZ2VudEV2ZW50c1tcIkluamVjdGlvblJlZnVzZWRcIl0gPSBcIkluamVjdGlvblJlZnVzZWRcIjtcbiAgICAvKipcbiAgICAgKiBBIHN1Y2Nlc3NmdWwgcmVzcG9uc2UgdG8gdGhlIGBVcGRhdGVJbnN0cnVjdGlvbnNgIHJlcXVlc3QuXG4gICAgICogeyB0eXBlOiBcIlByb21wdFVwZGF0ZWRcIiB9XG4gICAgICovXG4gICAgQWdlbnRFdmVudHNbXCJQcm9tcHRVcGRhdGVkXCJdID0gXCJQcm9tcHRVcGRhdGVkXCI7XG4gICAgLyoqXG4gICAgICogQSBzdWNjZXNzZnVsIHJlc3BvbnNlIHRvIHRoZSBgVXBkYXRlU3BlYWtgIHJlcXVlc3QuXG4gICAgICogeyB0eXBlOiBcIlNwZWFrVXBkYXRlZFwiIH1cbiAgICAgKi9cbiAgICBBZ2VudEV2ZW50c1tcIlNwZWFrVXBkYXRlZFwiXSA9IFwiU3BlYWtVcGRhdGVkXCI7XG4gICAgLyoqXG4gICAgICogQ2F0Y2ggYWxsIGZvciBhbnkgb3RoZXIgbWVzc2FnZSBldmVudFxuICAgICAqL1xuICAgIEFnZW50RXZlbnRzW1wiVW5oYW5kbGVkXCJdID0gXCJVbmhhbmRsZWRcIjtcbn0pKEFnZW50RXZlbnRzIHx8IChBZ2VudEV2ZW50cyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BZ2VudEV2ZW50cy5qcy5tYXAiXSwibmFtZXMiOlsiQWdlbnRFdmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/AgentEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveConnectionState.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveConnectionState.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LiveConnectionState: () => (/* binding */ LiveConnectionState)\n/* harmony export */ });\n/**\n * Enum representing the different states of a live connection.\n *\n * @deprecated Since 3.4. Use `SOCKET_STATES` for generic socket connection states instead.\n */ var LiveConnectionState;\n(function(LiveConnectionState) {\n    LiveConnectionState[LiveConnectionState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    LiveConnectionState[LiveConnectionState[\"OPEN\"] = 1] = \"OPEN\";\n    LiveConnectionState[LiveConnectionState[\"CLOSING\"] = 2] = \"CLOSING\";\n    LiveConnectionState[LiveConnectionState[\"CLOSED\"] = 3] = \"CLOSED\";\n})(LiveConnectionState || (LiveConnectionState = {})); //# sourceMappingURL=LiveConnectionState.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZW51bXMvTGl2ZUNvbm5lY3Rpb25TdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUNNLElBQUlBLG9CQUFvQjtBQUM5QixVQUFVQSxtQkFBbUI7SUFDMUJBLG1CQUFtQixDQUFDQSxtQkFBbUIsQ0FBQyxhQUFhLEdBQUcsRUFBRSxHQUFHO0lBQzdEQSxtQkFBbUIsQ0FBQ0EsbUJBQW1CLENBQUMsT0FBTyxHQUFHLEVBQUUsR0FBRztJQUN2REEsbUJBQW1CLENBQUNBLG1CQUFtQixDQUFDLFVBQVUsR0FBRyxFQUFFLEdBQUc7SUFDMURBLG1CQUFtQixDQUFDQSxtQkFBbUIsQ0FBQyxTQUFTLEdBQUcsRUFBRSxHQUFHO0FBQzdELEdBQUdBLHVCQUF3QkEsQ0FBQUEsc0JBQXNCLENBQUMsS0FDbEQsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vc2RrL2Rpc3QvbW9kdWxlL2xpYi9lbnVtcy9MaXZlQ29ubmVjdGlvblN0YXRlLmpzPzU5ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFbnVtIHJlcHJlc2VudGluZyB0aGUgZGlmZmVyZW50IHN0YXRlcyBvZiBhIGxpdmUgY29ubmVjdGlvbi5cbiAqXG4gKiBAZGVwcmVjYXRlZCBTaW5jZSAzLjQuIFVzZSBgU09DS0VUX1NUQVRFU2AgZm9yIGdlbmVyaWMgc29ja2V0IGNvbm5lY3Rpb24gc3RhdGVzIGluc3RlYWQuXG4gKi9cbmV4cG9ydCB2YXIgTGl2ZUNvbm5lY3Rpb25TdGF0ZTtcbihmdW5jdGlvbiAoTGl2ZUNvbm5lY3Rpb25TdGF0ZSkge1xuICAgIExpdmVDb25uZWN0aW9uU3RhdGVbTGl2ZUNvbm5lY3Rpb25TdGF0ZVtcIkNPTk5FQ1RJTkdcIl0gPSAwXSA9IFwiQ09OTkVDVElOR1wiO1xuICAgIExpdmVDb25uZWN0aW9uU3RhdGVbTGl2ZUNvbm5lY3Rpb25TdGF0ZVtcIk9QRU5cIl0gPSAxXSA9IFwiT1BFTlwiO1xuICAgIExpdmVDb25uZWN0aW9uU3RhdGVbTGl2ZUNvbm5lY3Rpb25TdGF0ZVtcIkNMT1NJTkdcIl0gPSAyXSA9IFwiQ0xPU0lOR1wiO1xuICAgIExpdmVDb25uZWN0aW9uU3RhdGVbTGl2ZUNvbm5lY3Rpb25TdGF0ZVtcIkNMT1NFRFwiXSA9IDNdID0gXCJDTE9TRURcIjtcbn0pKExpdmVDb25uZWN0aW9uU3RhdGUgfHwgKExpdmVDb25uZWN0aW9uU3RhdGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TGl2ZUNvbm5lY3Rpb25TdGF0ZS5qcy5tYXAiXSwibmFtZXMiOlsiTGl2ZUNvbm5lY3Rpb25TdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveConnectionState.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTTSEvents.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTTSEvents.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LiveTTSEvents: () => (/* binding */ LiveTTSEvents)\n/* harmony export */ });\n/**\n * Enumeration of events related to live text-to-speech synthesis.\n *\n * - `Open`: Built-in socket event for when the connection is opened.\n * - `Close`: Built-in socket event for when the connection is closed.\n * - `Error`: Built-in socket event for when an error occurs.\n * - `Metadata`: Event for when metadata is received.\n * - `Flushed`: Event for when the server has flushed the buffer.\n * - `Warning`: Event for when a warning is received.\n * - `Unhandled`: Catch-all event for any other message event.\n */ var LiveTTSEvents;\n(function(LiveTTSEvents) {\n    /**\n     * Built in socket events.\n     */ LiveTTSEvents[\"Open\"] = \"Open\";\n    LiveTTSEvents[\"Close\"] = \"Close\";\n    LiveTTSEvents[\"Error\"] = \"Error\";\n    /**\n     * Message { type: string }\n     */ LiveTTSEvents[\"Metadata\"] = \"Metadata\";\n    LiveTTSEvents[\"Flushed\"] = \"Flushed\";\n    LiveTTSEvents[\"Warning\"] = \"Warning\";\n    /**\n     * Audio data event.\n     */ LiveTTSEvents[\"Audio\"] = \"Audio\";\n    /**\n     * Catch all for any other message event\n     */ LiveTTSEvents[\"Unhandled\"] = \"Unhandled\";\n})(LiveTTSEvents || (LiveTTSEvents = {})); //# sourceMappingURL=LiveTTSEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZW51bXMvTGl2ZVRUU0V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLElBQUlBLGNBQWM7QUFDeEIsVUFBVUEsYUFBYTtJQUNwQjs7S0FFQyxHQUNEQSxhQUFhLENBQUMsT0FBTyxHQUFHO0lBQ3hCQSxhQUFhLENBQUMsUUFBUSxHQUFHO0lBQ3pCQSxhQUFhLENBQUMsUUFBUSxHQUFHO0lBQ3pCOztLQUVDLEdBQ0RBLGFBQWEsQ0FBQyxXQUFXLEdBQUc7SUFDNUJBLGFBQWEsQ0FBQyxVQUFVLEdBQUc7SUFDM0JBLGFBQWEsQ0FBQyxVQUFVLEdBQUc7SUFDM0I7O0tBRUMsR0FDREEsYUFBYSxDQUFDLFFBQVEsR0FBRztJQUN6Qjs7S0FFQyxHQUNEQSxhQUFhLENBQUMsWUFBWSxHQUFHO0FBQ2pDLEdBQUdBLGlCQUFrQkEsQ0FBQUEsZ0JBQWdCLENBQUMsS0FDdEMseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vc2RrL2Rpc3QvbW9kdWxlL2xpYi9lbnVtcy9MaXZlVFRTRXZlbnRzLmpzP2UzMDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFbnVtZXJhdGlvbiBvZiBldmVudHMgcmVsYXRlZCB0byBsaXZlIHRleHQtdG8tc3BlZWNoIHN5bnRoZXNpcy5cbiAqXG4gKiAtIGBPcGVuYDogQnVpbHQtaW4gc29ja2V0IGV2ZW50IGZvciB3aGVuIHRoZSBjb25uZWN0aW9uIGlzIG9wZW5lZC5cbiAqIC0gYENsb3NlYDogQnVpbHQtaW4gc29ja2V0IGV2ZW50IGZvciB3aGVuIHRoZSBjb25uZWN0aW9uIGlzIGNsb3NlZC5cbiAqIC0gYEVycm9yYDogQnVpbHQtaW4gc29ja2V0IGV2ZW50IGZvciB3aGVuIGFuIGVycm9yIG9jY3Vycy5cbiAqIC0gYE1ldGFkYXRhYDogRXZlbnQgZm9yIHdoZW4gbWV0YWRhdGEgaXMgcmVjZWl2ZWQuXG4gKiAtIGBGbHVzaGVkYDogRXZlbnQgZm9yIHdoZW4gdGhlIHNlcnZlciBoYXMgZmx1c2hlZCB0aGUgYnVmZmVyLlxuICogLSBgV2FybmluZ2A6IEV2ZW50IGZvciB3aGVuIGEgd2FybmluZyBpcyByZWNlaXZlZC5cbiAqIC0gYFVuaGFuZGxlZGA6IENhdGNoLWFsbCBldmVudCBmb3IgYW55IG90aGVyIG1lc3NhZ2UgZXZlbnQuXG4gKi9cbmV4cG9ydCB2YXIgTGl2ZVRUU0V2ZW50cztcbihmdW5jdGlvbiAoTGl2ZVRUU0V2ZW50cykge1xuICAgIC8qKlxuICAgICAqIEJ1aWx0IGluIHNvY2tldCBldmVudHMuXG4gICAgICovXG4gICAgTGl2ZVRUU0V2ZW50c1tcIk9wZW5cIl0gPSBcIk9wZW5cIjtcbiAgICBMaXZlVFRTRXZlbnRzW1wiQ2xvc2VcIl0gPSBcIkNsb3NlXCI7XG4gICAgTGl2ZVRUU0V2ZW50c1tcIkVycm9yXCJdID0gXCJFcnJvclwiO1xuICAgIC8qKlxuICAgICAqIE1lc3NhZ2UgeyB0eXBlOiBzdHJpbmcgfVxuICAgICAqL1xuICAgIExpdmVUVFNFdmVudHNbXCJNZXRhZGF0YVwiXSA9IFwiTWV0YWRhdGFcIjtcbiAgICBMaXZlVFRTRXZlbnRzW1wiRmx1c2hlZFwiXSA9IFwiRmx1c2hlZFwiO1xuICAgIExpdmVUVFNFdmVudHNbXCJXYXJuaW5nXCJdID0gXCJXYXJuaW5nXCI7XG4gICAgLyoqXG4gICAgICogQXVkaW8gZGF0YSBldmVudC5cbiAgICAgKi9cbiAgICBMaXZlVFRTRXZlbnRzW1wiQXVkaW9cIl0gPSBcIkF1ZGlvXCI7XG4gICAgLyoqXG4gICAgICogQ2F0Y2ggYWxsIGZvciBhbnkgb3RoZXIgbWVzc2FnZSBldmVudFxuICAgICAqL1xuICAgIExpdmVUVFNFdmVudHNbXCJVbmhhbmRsZWRcIl0gPSBcIlVuaGFuZGxlZFwiO1xufSkoTGl2ZVRUU0V2ZW50cyB8fCAoTGl2ZVRUU0V2ZW50cyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1MaXZlVFRTRXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJMaXZlVFRTRXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTTSEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTranscriptionEvents.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTranscriptionEvents.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LiveTranscriptionEvents: () => (/* binding */ LiveTranscriptionEvents)\n/* harmony export */ });\n/**\n * Enumeration of events related to live transcription.\n *\n * - `Open`: Built-in socket event for when the connection is opened.\n * - `Close`: Built-in socket event for when the connection is closed.\n * - `Error`: Built-in socket event for when an error occurs.\n * - `Transcript`: Event for when a transcript message is received.\n * - `Metadata`: Event for when metadata is received.\n * - `UtteranceEnd`: Event for when an utterance ends.\n * - `SpeechStarted`: Event for when speech is detected.\n * - `Unhandled`: Catch-all event for any other message event.\n */ var LiveTranscriptionEvents;\n(function(LiveTranscriptionEvents) {\n    /**\n     * Built in socket events.\n     */ LiveTranscriptionEvents[\"Open\"] = \"open\";\n    LiveTranscriptionEvents[\"Close\"] = \"close\";\n    LiveTranscriptionEvents[\"Error\"] = \"error\";\n    /**\n     * Message { type: string }\n     */ LiveTranscriptionEvents[\"Transcript\"] = \"Results\";\n    LiveTranscriptionEvents[\"Metadata\"] = \"Metadata\";\n    LiveTranscriptionEvents[\"UtteranceEnd\"] = \"UtteranceEnd\";\n    LiveTranscriptionEvents[\"SpeechStarted\"] = \"SpeechStarted\";\n    /**\n     * Catch all for any other message event\n     */ LiveTranscriptionEvents[\"Unhandled\"] = \"Unhandled\";\n})(LiveTranscriptionEvents || (LiveTranscriptionEvents = {})); //# sourceMappingURL=LiveTranscriptionEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZW51bXMvTGl2ZVRyYW5zY3JpcHRpb25FdmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7OztDQVdDLEdBQ00sSUFBSUEsd0JBQXdCO0FBQ2xDLFVBQVVBLHVCQUF1QjtJQUM5Qjs7S0FFQyxHQUNEQSx1QkFBdUIsQ0FBQyxPQUFPLEdBQUc7SUFDbENBLHVCQUF1QixDQUFDLFFBQVEsR0FBRztJQUNuQ0EsdUJBQXVCLENBQUMsUUFBUSxHQUFHO0lBQ25DOztLQUVDLEdBQ0RBLHVCQUF1QixDQUFDLGFBQWEsR0FBRztJQUN4Q0EsdUJBQXVCLENBQUMsV0FBVyxHQUFHO0lBQ3RDQSx1QkFBdUIsQ0FBQyxlQUFlLEdBQUc7SUFDMUNBLHVCQUF1QixDQUFDLGdCQUFnQixHQUFHO0lBQzNDOztLQUVDLEdBQ0RBLHVCQUF1QixDQUFDLFlBQVksR0FBRztBQUMzQyxHQUFHQSwyQkFBNEJBLENBQUFBLDBCQUEwQixDQUFDLEtBQzFELG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbGwtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZW51bXMvTGl2ZVRyYW5zY3JpcHRpb25FdmVudHMuanM/NDA5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVudW1lcmF0aW9uIG9mIGV2ZW50cyByZWxhdGVkIHRvIGxpdmUgdHJhbnNjcmlwdGlvbi5cbiAqXG4gKiAtIGBPcGVuYDogQnVpbHQtaW4gc29ja2V0IGV2ZW50IGZvciB3aGVuIHRoZSBjb25uZWN0aW9uIGlzIG9wZW5lZC5cbiAqIC0gYENsb3NlYDogQnVpbHQtaW4gc29ja2V0IGV2ZW50IGZvciB3aGVuIHRoZSBjb25uZWN0aW9uIGlzIGNsb3NlZC5cbiAqIC0gYEVycm9yYDogQnVpbHQtaW4gc29ja2V0IGV2ZW50IGZvciB3aGVuIGFuIGVycm9yIG9jY3Vycy5cbiAqIC0gYFRyYW5zY3JpcHRgOiBFdmVudCBmb3Igd2hlbiBhIHRyYW5zY3JpcHQgbWVzc2FnZSBpcyByZWNlaXZlZC5cbiAqIC0gYE1ldGFkYXRhYDogRXZlbnQgZm9yIHdoZW4gbWV0YWRhdGEgaXMgcmVjZWl2ZWQuXG4gKiAtIGBVdHRlcmFuY2VFbmRgOiBFdmVudCBmb3Igd2hlbiBhbiB1dHRlcmFuY2UgZW5kcy5cbiAqIC0gYFNwZWVjaFN0YXJ0ZWRgOiBFdmVudCBmb3Igd2hlbiBzcGVlY2ggaXMgZGV0ZWN0ZWQuXG4gKiAtIGBVbmhhbmRsZWRgOiBDYXRjaC1hbGwgZXZlbnQgZm9yIGFueSBvdGhlciBtZXNzYWdlIGV2ZW50LlxuICovXG5leHBvcnQgdmFyIExpdmVUcmFuc2NyaXB0aW9uRXZlbnRzO1xuKGZ1bmN0aW9uIChMaXZlVHJhbnNjcmlwdGlvbkV2ZW50cykge1xuICAgIC8qKlxuICAgICAqIEJ1aWx0IGluIHNvY2tldCBldmVudHMuXG4gICAgICovXG4gICAgTGl2ZVRyYW5zY3JpcHRpb25FdmVudHNbXCJPcGVuXCJdID0gXCJvcGVuXCI7XG4gICAgTGl2ZVRyYW5zY3JpcHRpb25FdmVudHNbXCJDbG9zZVwiXSA9IFwiY2xvc2VcIjtcbiAgICBMaXZlVHJhbnNjcmlwdGlvbkV2ZW50c1tcIkVycm9yXCJdID0gXCJlcnJvclwiO1xuICAgIC8qKlxuICAgICAqIE1lc3NhZ2UgeyB0eXBlOiBzdHJpbmcgfVxuICAgICAqL1xuICAgIExpdmVUcmFuc2NyaXB0aW9uRXZlbnRzW1wiVHJhbnNjcmlwdFwiXSA9IFwiUmVzdWx0c1wiO1xuICAgIExpdmVUcmFuc2NyaXB0aW9uRXZlbnRzW1wiTWV0YWRhdGFcIl0gPSBcIk1ldGFkYXRhXCI7XG4gICAgTGl2ZVRyYW5zY3JpcHRpb25FdmVudHNbXCJVdHRlcmFuY2VFbmRcIl0gPSBcIlV0dGVyYW5jZUVuZFwiO1xuICAgIExpdmVUcmFuc2NyaXB0aW9uRXZlbnRzW1wiU3BlZWNoU3RhcnRlZFwiXSA9IFwiU3BlZWNoU3RhcnRlZFwiO1xuICAgIC8qKlxuICAgICAqIENhdGNoIGFsbCBmb3IgYW55IG90aGVyIG1lc3NhZ2UgZXZlbnRcbiAgICAgKi9cbiAgICBMaXZlVHJhbnNjcmlwdGlvbkV2ZW50c1tcIlVuaGFuZGxlZFwiXSA9IFwiVW5oYW5kbGVkXCI7XG59KShMaXZlVHJhbnNjcmlwdGlvbkV2ZW50cyB8fCAoTGl2ZVRyYW5zY3JpcHRpb25FdmVudHMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TGl2ZVRyYW5zY3JpcHRpb25FdmVudHMuanMubWFwIl0sIm5hbWVzIjpbIkxpdmVUcmFuc2NyaXB0aW9uRXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTranscriptionEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/enums/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentEvents: () => (/* reexport safe */ _AgentEvents__WEBPACK_IMPORTED_MODULE_0__.AgentEvents),\n/* harmony export */   LiveConnectionState: () => (/* reexport safe */ _LiveConnectionState__WEBPACK_IMPORTED_MODULE_1__.LiveConnectionState),\n/* harmony export */   LiveTTSEvents: () => (/* reexport safe */ _LiveTTSEvents__WEBPACK_IMPORTED_MODULE_3__.LiveTTSEvents),\n/* harmony export */   LiveTranscriptionEvents: () => (/* reexport safe */ _LiveTranscriptionEvents__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents)\n/* harmony export */ });\n/* harmony import */ var _AgentEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AgentEvents */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/AgentEvents.js\");\n/* harmony import */ var _LiveConnectionState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LiveConnectionState */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveConnectionState.js\");\n/* harmony import */ var _LiveTranscriptionEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LiveTranscriptionEvents */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTranscriptionEvents.js\");\n/* harmony import */ var _LiveTTSEvents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LiveTTSEvents */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTTSEvents.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZW51bXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEI7QUFDUTtBQUNJO0FBQ1YsQ0FDaEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vc2RrL2Rpc3QvbW9kdWxlL2xpYi9lbnVtcy9pbmRleC5qcz8wODE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL0FnZW50RXZlbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9MaXZlQ29ubmVjdGlvblN0YXRlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9MaXZlVHJhbnNjcmlwdGlvbkV2ZW50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vTGl2ZVRUU0V2ZW50c1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/errors.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeepgramApiError: () => (/* binding */ DeepgramApiError),\n/* harmony export */   DeepgramError: () => (/* binding */ DeepgramError),\n/* harmony export */   DeepgramUnknownError: () => (/* binding */ DeepgramUnknownError),\n/* harmony export */   DeepgramVersionError: () => (/* binding */ DeepgramVersionError),\n/* harmony export */   isDeepgramError: () => (/* binding */ isDeepgramError)\n/* harmony export */ });\nclass DeepgramError extends Error {\n    constructor(message){\n        super(message);\n        this.__dgError = true;\n        this.name = \"DeepgramError\";\n    }\n}\nfunction isDeepgramError(error) {\n    return typeof error === \"object\" && error !== null && \"__dgError\" in error;\n}\nclass DeepgramApiError extends DeepgramError {\n    constructor(message, status){\n        super(message);\n        this.name = \"DeepgramApiError\";\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status\n        };\n    }\n}\nclass DeepgramUnknownError extends DeepgramError {\n    constructor(message, originalError){\n        super(message);\n        this.name = \"DeepgramUnknownError\";\n        this.originalError = originalError;\n    }\n}\nclass DeepgramVersionError extends DeepgramError {\n    constructor(){\n        super(`You are attempting to use an old format for a newer SDK version. Read more here: https://dpgr.am/js-v3`);\n        this.name = \"DeepgramVersionError\";\n    }\n} //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sTUFBTUEsc0JBQXNCQztJQUMvQkMsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNDLFNBQVMsR0FBRztRQUNqQixJQUFJLENBQUNDLElBQUksR0FBRztJQUNoQjtBQUNKO0FBQ08sU0FBU0MsZ0JBQWdCQyxLQUFLO0lBQ2pDLE9BQU8sT0FBT0EsVUFBVSxZQUFZQSxVQUFVLFFBQVEsZUFBZUE7QUFDekU7QUFDTyxNQUFNQyx5QkFBeUJSO0lBQ2xDRSxZQUFZQyxPQUFPLEVBQUVNLE1BQU0sQ0FBRTtRQUN6QixLQUFLLENBQUNOO1FBQ04sSUFBSSxDQUFDRSxJQUFJLEdBQUc7UUFDWixJQUFJLENBQUNJLE1BQU0sR0FBR0E7SUFDbEI7SUFDQUMsU0FBUztRQUNMLE9BQU87WUFDSEwsTUFBTSxJQUFJLENBQUNBLElBQUk7WUFDZkYsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckJNLFFBQVEsSUFBSSxDQUFDQSxNQUFNO1FBQ3ZCO0lBQ0o7QUFDSjtBQUNPLE1BQU1FLDZCQUE2Qlg7SUFDdENFLFlBQVlDLE9BQU8sRUFBRVMsYUFBYSxDQUFFO1FBQ2hDLEtBQUssQ0FBQ1Q7UUFDTixJQUFJLENBQUNFLElBQUksR0FBRztRQUNaLElBQUksQ0FBQ08sYUFBYSxHQUFHQTtJQUN6QjtBQUNKO0FBQ08sTUFBTUMsNkJBQTZCYjtJQUN0Q0UsYUFBYztRQUNWLEtBQUssQ0FBQyxDQUFDLHNHQUFzRyxDQUFDO1FBQzlHLElBQUksQ0FBQ0csSUFBSSxHQUFHO0lBQ2hCO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWxsLWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL0BkZWVwZ3JhbS9zZGsvZGlzdC9tb2R1bGUvbGliL2Vycm9ycy5qcz83NzA5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEZWVwZ3JhbUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMuX19kZ0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJEZWVwZ3JhbUVycm9yXCI7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzRGVlcGdyYW1FcnJvcihlcnJvcikge1xuICAgIHJldHVybiB0eXBlb2YgZXJyb3IgPT09IFwib2JqZWN0XCIgJiYgZXJyb3IgIT09IG51bGwgJiYgXCJfX2RnRXJyb3JcIiBpbiBlcnJvcjtcbn1cbmV4cG9ydCBjbGFzcyBEZWVwZ3JhbUFwaUVycm9yIGV4dGVuZHMgRGVlcGdyYW1FcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkRlZXBncmFtQXBpRXJyb3JcIjtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIERlZXBncmFtVW5rbm93bkVycm9yIGV4dGVuZHMgRGVlcGdyYW1FcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3JpZ2luYWxFcnJvcikge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJEZWVwZ3JhbVVua25vd25FcnJvclwiO1xuICAgICAgICB0aGlzLm9yaWdpbmFsRXJyb3IgPSBvcmlnaW5hbEVycm9yO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBEZWVwZ3JhbVZlcnNpb25FcnJvciBleHRlbmRzIERlZXBncmFtRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcihgWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhbiBvbGQgZm9ybWF0IGZvciBhIG5ld2VyIFNESyB2ZXJzaW9uLiBSZWFkIG1vcmUgaGVyZTogaHR0cHM6Ly9kcGdyLmFtL2pzLXYzYCk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiRGVlcGdyYW1WZXJzaW9uRXJyb3JcIjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbIkRlZXBncmFtRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsIl9fZGdFcnJvciIsIm5hbWUiLCJpc0RlZXBncmFtRXJyb3IiLCJlcnJvciIsIkRlZXBncmFtQXBpRXJyb3IiLCJzdGF0dXMiLCJ0b0pTT04iLCJEZWVwZ3JhbVVua25vd25FcnJvciIsIm9yaWdpbmFsRXJyb3IiLCJEZWVwZ3JhbVZlcnNpb25FcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/fetch.js":
/*!*************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/fetch.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchWithAuth: () => (/* binding */ fetchWithAuth),\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch),\n/* harmony export */   resolveResponse: () => (/* binding */ resolveResponse)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ \"(rsc)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_0__);\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * Resolves the appropriate fetch function to use, either a custom fetch function provided as an argument, or the global fetch function if available, or the cross-fetch library if the global fetch function is not available.\n *\n * @param customFetch - An optional custom fetch function to use instead of the global fetch function.\n * @returns A fetch function that can be used to make HTTP requests.\n */ const resolveFetch = (customFetch)=>{\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    } else if (typeof fetch === \"undefined\") {\n        _fetch = (cross_fetch__WEBPACK_IMPORTED_MODULE_0___default());\n    } else {\n        _fetch = fetch;\n    }\n    return (...args)=>_fetch(...args);\n};\n/**\n * Resolves a fetch function that includes an \"Authorization\" header with the provided API key.\n *\n * @param apiKey - The API key to include in the \"Authorization\" header.\n * @param customFetch - An optional custom fetch function to use instead of the global fetch function.\n * @returns A fetch function that can be used to make HTTP requests with the provided API key in the \"Authorization\" header.\n */ const fetchWithAuth = (apiKey, customFetch)=>{\n    const fetch1 = resolveFetch(customFetch);\n    const HeadersConstructor = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveHeadersConstructor)();\n    return (input, init)=>__awaiter(void 0, void 0, void 0, function*() {\n            const headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n            if (!headers.has(\"Authorization\")) {\n                headers.set(\"Authorization\", `Token ${apiKey}`);\n            }\n            return fetch1(input, Object.assign(Object.assign({}, init), {\n                headers\n            }));\n        });\n};\n/**\n * Resolves the appropriate Response object to use, either the global Response object if available, or the Response object from the cross-fetch library if the global Response object is not available.\n *\n * @returns The appropriate Response object to use for making HTTP requests.\n */ const resolveResponse = ()=>__awaiter(void 0, void 0, void 0, function*() {\n        if (typeof Response === \"undefined\") {\n            return (yield Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! cross-fetch */ \"(rsc)/./node_modules/cross-fetch/dist/node-ponyfill.js\", 23))).Response;\n        }\n        return Response;\n    }); //# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvZmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWSxTQUFLLElBQUksU0FBSSxDQUFDQSxTQUFTLElBQUssU0FBVUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLENBQUMsRUFBRUMsU0FBUztJQUNuRixTQUFTQyxNQUFNQyxLQUFLO1FBQUksT0FBT0EsaUJBQWlCSCxJQUFJRyxRQUFRLElBQUlILEVBQUUsU0FBVUksT0FBTztZQUFJQSxRQUFRRDtRQUFRO0lBQUk7SUFDM0csT0FBTyxJQUFLSCxDQUFBQSxLQUFNQSxDQUFBQSxJQUFJSyxPQUFNLENBQUMsRUFBRyxTQUFVRCxPQUFPLEVBQUVFLE1BQU07UUFDckQsU0FBU0MsVUFBVUosS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFVBQVVRLElBQUksQ0FBQ047WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUMxRixTQUFTQyxTQUFTUixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsU0FBUyxDQUFDLFFBQVEsQ0FBQ0U7WUFBUyxFQUFFLE9BQU9PLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUM3RixTQUFTRixLQUFLSSxNQUFNO1lBQUlBLE9BQU9DLElBQUksR0FBR1QsUUFBUVEsT0FBT1QsS0FBSyxJQUFJRCxNQUFNVSxPQUFPVCxLQUFLLEVBQUVXLElBQUksQ0FBQ1AsV0FBV0k7UUFBVztRQUM3R0gsS0FBSyxDQUFDUCxZQUFZQSxVQUFVYyxLQUFLLENBQUNqQixTQUFTQyxjQUFjLEVBQUUsR0FBR1UsSUFBSTtJQUN0RTtBQUNKO0FBQ3NEO0FBQ2pCO0FBQ3JDOzs7OztDQUtDLEdBQ00sTUFBTVMsZUFBZSxDQUFDQztJQUN6QixJQUFJQztJQUNKLElBQUlELGFBQWE7UUFDYkMsU0FBU0Q7SUFDYixPQUNLLElBQUksT0FBT0UsVUFBVSxhQUFhO1FBQ25DRCxTQUFTSCxvREFBVUE7SUFDdkIsT0FDSztRQUNERyxTQUFTQztJQUNiO0lBQ0EsT0FBTyxDQUFDLEdBQUdDLE9BQVNGLFVBQVVFO0FBQ2xDLEVBQUU7QUFDRjs7Ozs7O0NBTUMsR0FDTSxNQUFNQyxnQkFBZ0IsQ0FBQ0MsUUFBUUw7SUFDbEMsTUFBTUUsU0FBUUgsYUFBYUM7SUFDM0IsTUFBTU0scUJBQXFCVCxtRUFBeUJBO0lBQ3BELE9BQU8sQ0FBQ1UsT0FBT0MsT0FBUzlCLFVBQVUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDdEQsTUFBTStCLFVBQVUsSUFBSUgsbUJBQW1CRSxTQUFTLFFBQVFBLFNBQVMsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBS0MsT0FBTztZQUMvRixJQUFJLENBQUNBLFFBQVFDLEdBQUcsQ0FBQyxrQkFBa0I7Z0JBQy9CRCxRQUFRRSxHQUFHLENBQUMsaUJBQWlCLENBQUMsTUFBTSxFQUFFTixPQUFPLENBQUM7WUFDbEQ7WUFDQSxPQUFPSCxPQUFNSyxPQUFPSyxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdMLE9BQU87Z0JBQUVDO1lBQVE7UUFDekU7QUFDSixFQUFFO0FBQ0Y7Ozs7Q0FJQyxHQUNNLE1BQU1LLGtCQUFrQixJQUFNcEMsVUFBVSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuRSxJQUFJLE9BQU9xQyxhQUFhLGFBQWE7WUFDakMsT0FBTyxDQUFDLE1BQU0sdUtBQW9CLEVBQUdBLFFBQVE7UUFDakQ7UUFDQSxPQUFPQTtJQUNYLEdBQUcsQ0FDSCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWxsLWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL0BkZWVwZ3JhbS9zZGsvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzPzE2YWYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyByZXNvbHZlSGVhZGVyc0NvbnN0cnVjdG9yIH0gZnJvbSBcIi4vaGVscGVyc1wiO1xuaW1wb3J0IGNyb3NzRmV0Y2ggZnJvbSBcImNyb3NzLWZldGNoXCI7XG4vKipcbiAqIFJlc29sdmVzIHRoZSBhcHByb3ByaWF0ZSBmZXRjaCBmdW5jdGlvbiB0byB1c2UsIGVpdGhlciBhIGN1c3RvbSBmZXRjaCBmdW5jdGlvbiBwcm92aWRlZCBhcyBhbiBhcmd1bWVudCwgb3IgdGhlIGdsb2JhbCBmZXRjaCBmdW5jdGlvbiBpZiBhdmFpbGFibGUsIG9yIHRoZSBjcm9zcy1mZXRjaCBsaWJyYXJ5IGlmIHRoZSBnbG9iYWwgZmV0Y2ggZnVuY3Rpb24gaXMgbm90IGF2YWlsYWJsZS5cbiAqXG4gKiBAcGFyYW0gY3VzdG9tRmV0Y2ggLSBBbiBvcHRpb25hbCBjdXN0b20gZmV0Y2ggZnVuY3Rpb24gdG8gdXNlIGluc3RlYWQgb2YgdGhlIGdsb2JhbCBmZXRjaCBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIEEgZmV0Y2ggZnVuY3Rpb24gdGhhdCBjYW4gYmUgdXNlZCB0byBtYWtlIEhUVFAgcmVxdWVzdHMuXG4gKi9cbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcbiAgICBsZXQgX2ZldGNoO1xuICAgIGlmIChjdXN0b21GZXRjaCkge1xuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGZldGNoID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIF9mZXRjaCA9IGNyb3NzRmV0Y2g7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBfZmV0Y2ggPSBmZXRjaDtcbiAgICB9XG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiBfZmV0Y2goLi4uYXJncyk7XG59O1xuLyoqXG4gKiBSZXNvbHZlcyBhIGZldGNoIGZ1bmN0aW9uIHRoYXQgaW5jbHVkZXMgYW4gXCJBdXRob3JpemF0aW9uXCIgaGVhZGVyIHdpdGggdGhlIHByb3ZpZGVkIEFQSSBrZXkuXG4gKlxuICogQHBhcmFtIGFwaUtleSAtIFRoZSBBUEkga2V5IHRvIGluY2x1ZGUgaW4gdGhlIFwiQXV0aG9yaXphdGlvblwiIGhlYWRlci5cbiAqIEBwYXJhbSBjdXN0b21GZXRjaCAtIEFuIG9wdGlvbmFsIGN1c3RvbSBmZXRjaCBmdW5jdGlvbiB0byB1c2UgaW5zdGVhZCBvZiB0aGUgZ2xvYmFsIGZldGNoIGZ1bmN0aW9uLlxuICogQHJldHVybnMgQSBmZXRjaCBmdW5jdGlvbiB0aGF0IGNhbiBiZSB1c2VkIHRvIG1ha2UgSFRUUCByZXF1ZXN0cyB3aXRoIHRoZSBwcm92aWRlZCBBUEkga2V5IGluIHRoZSBcIkF1dGhvcml6YXRpb25cIiBoZWFkZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBmZXRjaFdpdGhBdXRoID0gKGFwaUtleSwgY3VzdG9tRmV0Y2gpID0+IHtcbiAgICBjb25zdCBmZXRjaCA9IHJlc29sdmVGZXRjaChjdXN0b21GZXRjaCk7XG4gICAgY29uc3QgSGVhZGVyc0NvbnN0cnVjdG9yID0gcmVzb2x2ZUhlYWRlcnNDb25zdHJ1Y3RvcigpO1xuICAgIHJldHVybiAoaW5wdXQsIGluaXQpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnNDb25zdHJ1Y3Rvcihpbml0ID09PSBudWxsIHx8IGluaXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGluaXQuaGVhZGVycyk7XG4gICAgICAgIGlmICghaGVhZGVycy5oYXMoXCJBdXRob3JpemF0aW9uXCIpKSB7XG4gICAgICAgICAgICBoZWFkZXJzLnNldChcIkF1dGhvcml6YXRpb25cIiwgYFRva2VuICR7YXBpS2V5fWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmZXRjaChpbnB1dCwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbml0KSwgeyBoZWFkZXJzIH0pKTtcbiAgICB9KTtcbn07XG4vKipcbiAqIFJlc29sdmVzIHRoZSBhcHByb3ByaWF0ZSBSZXNwb25zZSBvYmplY3QgdG8gdXNlLCBlaXRoZXIgdGhlIGdsb2JhbCBSZXNwb25zZSBvYmplY3QgaWYgYXZhaWxhYmxlLCBvciB0aGUgUmVzcG9uc2Ugb2JqZWN0IGZyb20gdGhlIGNyb3NzLWZldGNoIGxpYnJhcnkgaWYgdGhlIGdsb2JhbCBSZXNwb25zZSBvYmplY3QgaXMgbm90IGF2YWlsYWJsZS5cbiAqXG4gKiBAcmV0dXJucyBUaGUgYXBwcm9wcmlhdGUgUmVzcG9uc2Ugb2JqZWN0IHRvIHVzZSBmb3IgbWFraW5nIEhUVFAgcmVxdWVzdHMuXG4gKi9cbmV4cG9ydCBjb25zdCByZXNvbHZlUmVzcG9uc2UgPSAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBpZiAodHlwZW9mIFJlc3BvbnNlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiAoeWllbGQgaW1wb3J0KFwiY3Jvc3MtZmV0Y2hcIikpLlJlc3BvbnNlO1xuICAgIH1cbiAgICByZXR1cm4gUmVzcG9uc2U7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJhZG9wdCIsInZhbHVlIiwicmVzb2x2ZSIsIlByb21pc2UiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsImUiLCJyZWplY3RlZCIsInJlc3VsdCIsImRvbmUiLCJ0aGVuIiwiYXBwbHkiLCJyZXNvbHZlSGVhZGVyc0NvbnN0cnVjdG9yIiwiY3Jvc3NGZXRjaCIsInJlc29sdmVGZXRjaCIsImN1c3RvbUZldGNoIiwiX2ZldGNoIiwiZmV0Y2giLCJhcmdzIiwiZmV0Y2hXaXRoQXV0aCIsImFwaUtleSIsIkhlYWRlcnNDb25zdHJ1Y3RvciIsImlucHV0IiwiaW5pdCIsImhlYWRlcnMiLCJoYXMiLCJzZXQiLCJPYmplY3QiLCJhc3NpZ24iLCJyZXNvbHZlUmVzcG9uc2UiLCJSZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js":
/*!***************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/helpers.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CallbackUrl: () => (/* binding */ CallbackUrl),\n/* harmony export */   appendSearchParams: () => (/* binding */ appendSearchParams),\n/* harmony export */   applyDefaults: () => (/* binding */ applyDefaults),\n/* harmony export */   buildRequestUrl: () => (/* binding */ buildRequestUrl),\n/* harmony export */   convertLegacyOptions: () => (/* binding */ convertLegacyOptions),\n/* harmony export */   convertProtocolToWs: () => (/* binding */ convertProtocolToWs),\n/* harmony export */   isDeepgramClientOptions: () => (/* binding */ isDeepgramClientOptions),\n/* harmony export */   isFileSource: () => (/* binding */ isFileSource),\n/* harmony export */   isLiveSchema: () => (/* binding */ isLiveSchema),\n/* harmony export */   isTextSource: () => (/* binding */ isTextSource),\n/* harmony export */   isUrlSource: () => (/* binding */ isUrlSource),\n/* harmony export */   resolveHeadersConstructor: () => (/* binding */ resolveHeadersConstructor),\n/* harmony export */   stripTrailingSlash: () => (/* binding */ stripTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ \"(rsc)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deepmerge */ \"(rsc)/./node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(deepmerge__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction stripTrailingSlash(url) {\n    return url.replace(/\\/$/, \"\");\n}\nfunction applyDefaults(options = {}, subordinate = {}) {\n    return deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(subordinate, options);\n}\nfunction appendSearchParams(searchParams, options) {\n    Object.keys(options).forEach((i)=>{\n        if (Array.isArray(options[i])) {\n            const arrayParams = options[i];\n            arrayParams.forEach((param)=>{\n                searchParams.append(i, String(param));\n            });\n        } else {\n            searchParams.append(i, String(options[i]));\n        }\n    });\n}\nconst resolveHeadersConstructor = ()=>{\n    if (typeof Headers === \"undefined\") {\n        return cross_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers;\n    }\n    return Headers;\n};\nconst isUrlSource = (providedSource)=>{\n    if (providedSource.url) return true;\n    return false;\n};\nconst isTextSource = (providedSource)=>{\n    if (providedSource.text) return true;\n    return false;\n};\nconst isFileSource = (providedSource)=>{\n    if (isReadStreamSource(providedSource) || isBufferSource(providedSource)) return true;\n    return false;\n};\nconst isBufferSource = (providedSource)=>{\n    if (providedSource) return true;\n    return false;\n};\nconst isReadStreamSource = (providedSource)=>{\n    if (providedSource) return true;\n    return false;\n};\nclass CallbackUrl extends URL {\n    constructor(){\n        super(...arguments);\n        this.callbackUrl = true;\n    }\n}\nconst convertProtocolToWs = (url)=>{\n    const convert = (string)=>string.toLowerCase().replace(/^http/, \"ws\");\n    return convert(url);\n};\nconst buildRequestUrl = (endpoint, baseUrl, transcriptionOptions)=>{\n    const url = new URL(endpoint, baseUrl);\n    appendSearchParams(url.searchParams, transcriptionOptions);\n    return url;\n};\nfunction isLiveSchema(arg) {\n    return arg && typeof arg.interim_results !== \"undefined\";\n}\nfunction isDeepgramClientOptions(arg) {\n    return arg && typeof arg.global !== \"undefined\";\n}\nconst convertLegacyOptions = (optionsArg)=>{\n    var _a, _b, _c, _d, _e, _f;\n    const newOptions = {};\n    if (optionsArg._experimentalCustomFetch) {\n        newOptions.global = {\n            fetch: {\n                client: optionsArg._experimentalCustomFetch\n            }\n        };\n    }\n    optionsArg = deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(optionsArg, newOptions);\n    if ((_a = optionsArg.restProxy) === null || _a === void 0 ? void 0 : _a.url) {\n        newOptions.global = {\n            fetch: {\n                options: {\n                    proxy: {\n                        url: (_b = optionsArg.restProxy) === null || _b === void 0 ? void 0 : _b.url\n                    }\n                }\n            }\n        };\n    }\n    optionsArg = deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(optionsArg, newOptions);\n    if ((_c = optionsArg.global) === null || _c === void 0 ? void 0 : _c.url) {\n        newOptions.global = {\n            fetch: {\n                options: {\n                    url: optionsArg.global.url\n                }\n            },\n            websocket: {\n                options: {\n                    url: optionsArg.global.url\n                }\n            }\n        };\n    }\n    optionsArg = deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(optionsArg, newOptions);\n    if ((_d = optionsArg.global) === null || _d === void 0 ? void 0 : _d.headers) {\n        newOptions.global = {\n            fetch: {\n                options: {\n                    headers: (_e = optionsArg.global) === null || _e === void 0 ? void 0 : _e.headers\n                }\n            },\n            websocket: {\n                options: {\n                    _nodeOnlyHeaders: (_f = optionsArg.global) === null || _f === void 0 ? void 0 : _f.headers\n                }\n            }\n        };\n    }\n    optionsArg = deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(optionsArg, newOptions);\n    return optionsArg;\n}; //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/runtime.js":
/*!***************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/runtime.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BROWSER_AGENT: () => (/* binding */ BROWSER_AGENT),\n/* harmony export */   BUN_VERSION: () => (/* binding */ BUN_VERSION),\n/* harmony export */   NODE_VERSION: () => (/* binding */ NODE_VERSION),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isBun: () => (/* binding */ isBun),\n/* harmony export */   isNode: () => (/* binding */ isNode)\n/* harmony export */ });\nconst NODE_VERSION = typeof process !== \"undefined\" && process.versions && process.versions.node ? process.versions.node : \"unknown\";\nconst BUN_VERSION = typeof process !== \"undefined\" && process.versions && process.versions.bun ? process.versions.bun : \"unknown\";\nconst BROWSER_AGENT =  false ? 0 : \"unknown\";\nconst isBrowser = ()=>BROWSER_AGENT !== \"unknown\";\nconst isNode = ()=>NODE_VERSION !== \"unknown\";\nconst isBun = ()=>BUN_VERSION !== \"unknown\"; //# sourceMappingURL=runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBTyxNQUFNQSxlQUFlLE9BQU9DLFlBQVksZUFBZUEsUUFBUUMsUUFBUSxJQUFJRCxRQUFRQyxRQUFRLENBQUNDLElBQUksR0FDakdGLFFBQVFDLFFBQVEsQ0FBQ0MsSUFBSSxHQUNyQixVQUFVO0FBQ1QsTUFBTUMsY0FBYyxPQUFPSCxZQUFZLGVBQWVBLFFBQVFDLFFBQVEsSUFBSUQsUUFBUUMsUUFBUSxDQUFDRyxHQUFHLEdBQy9GSixRQUFRQyxRQUFRLENBQUNHLEdBQUcsR0FDcEIsVUFBVTtBQUNULE1BQU1DLGdCQUFnQixNQUErRSxHQUN0R0MsQ0FBMEIsR0FDMUIsVUFBVTtBQUNULE1BQU1HLFlBQVksSUFBTUosa0JBQWtCLFVBQVU7QUFDcEQsTUFBTUssU0FBUyxJQUFNWCxpQkFBaUIsVUFBVTtBQUNoRCxNQUFNWSxRQUFRLElBQU1SLGdCQUFnQixVQUFVLENBQ3JELG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbGwtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvcnVudGltZS5qcz8wZmQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBOT0RFX1ZFUlNJT04gPSB0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLnZlcnNpb25zICYmIHByb2Nlc3MudmVyc2lvbnMubm9kZVxuICAgID8gcHJvY2Vzcy52ZXJzaW9ucy5ub2RlXG4gICAgOiBcInVua25vd25cIjtcbmV4cG9ydCBjb25zdCBCVU5fVkVSU0lPTiA9IHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmIHByb2Nlc3MudmVyc2lvbnMgJiYgcHJvY2Vzcy52ZXJzaW9ucy5idW5cbiAgICA/IHByb2Nlc3MudmVyc2lvbnMuYnVuXG4gICAgOiBcInVua25vd25cIjtcbmV4cG9ydCBjb25zdCBCUk9XU0VSX0FHRU5UID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubmF2aWdhdG9yICYmIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50XG4gICAgPyB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudFxuICAgIDogXCJ1bmtub3duXCI7XG5leHBvcnQgY29uc3QgaXNCcm93c2VyID0gKCkgPT4gQlJPV1NFUl9BR0VOVCAhPT0gXCJ1bmtub3duXCI7XG5leHBvcnQgY29uc3QgaXNOb2RlID0gKCkgPT4gTk9ERV9WRVJTSU9OICE9PSBcInVua25vd25cIjtcbmV4cG9ydCBjb25zdCBpc0J1biA9ICgpID0+IEJVTl9WRVJTSU9OICE9PSBcInVua25vd25cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bnRpbWUuanMubWFwIl0sIm5hbWVzIjpbIk5PREVfVkVSU0lPTiIsInByb2Nlc3MiLCJ2ZXJzaW9ucyIsIm5vZGUiLCJCVU5fVkVSU0lPTiIsImJ1biIsIkJST1dTRVJfQUdFTlQiLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpc0Jyb3dzZXIiLCJpc05vZGUiLCJpc0J1biJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/runtime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/version.js":
/*!***************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/lib/version.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"4.2.0\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsVUFBVSxRQUFRLENBQy9CLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbGwtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcz9lM2ZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gXCI0LjIuMFwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/version.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractClient: () => (/* binding */ AbstractClient),\n/* harmony export */   noop: () => (/* binding */ noop)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/constants */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/helpers */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\");\n\n\n\n\nconst noop = ()=>{};\n/**\n * Represents an abstract Deepgram client that provides a base implementation for interacting with the Deepgram API.\n *\n * The `AbstractClient` class is responsible for:\n * - Initializing the Deepgram API key\n * - Applying default options for the client and namespace\n * - Providing a namespace for organizing API requests\n *\n * Subclasses of `AbstractClient` should implement the specific functionality for interacting with the Deepgram API.\n */ class AbstractClient extends events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    /**\n     * Constructs a new instance of the DeepgramClient class with the provided options.\n     *\n     * @param options - The options to configure the DeepgramClient instance.\n     * @param options.key - The Deepgram API key to use for authentication. If not provided, the `DEEPGRAM_API_KEY` environment variable will be used.\n     * @param options.global - Global options that apply to all requests made by the DeepgramClient instance.\n     * @param options.global.fetch - Options to configure the fetch requests made by the DeepgramClient instance.\n     * @param options.global.fetch.options - Additional options to pass to the fetch function, such as `url` and `headers`.\n     * @param options.namespace - Options specific to a particular namespace within the DeepgramClient instance.\n     */ constructor(options){\n        super();\n        this.factory = undefined;\n        this.namespace = \"global\";\n        this.version = \"v1\";\n        this.baseUrl = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_URL;\n        this.logger = noop;\n        let key;\n        if (typeof options.key === \"function\") {\n            this.factory = options.key;\n            key = this.factory();\n        } else {\n            key = options.key;\n        }\n        if (!key) {\n            key = process.env.DEEPGRAM_API_KEY;\n        }\n        if (!key) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"A deepgram API key is required.\");\n        }\n        this.key = key;\n        options = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.convertLegacyOptions)(options);\n        /**\n         * Apply default options.\n         */ this.options = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.applyDefaults)(options, _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_OPTIONS);\n    }\n    /**\n     * Sets the version for the current instance of the Deepgram API and returns the instance.\n     *\n     * @param version - The version to set for the Deepgram API instance. Defaults to \"v1\" if not provided.\n     * @returns The current instance of the AbstractClient with the updated version.\n     */ v(version = \"v1\") {\n        this.version = version;\n        return this;\n    }\n    /**\n     * Gets the namespace options for the current instance of the AbstractClient.\n     * The namespace options include the default options merged with the global options,\n     * and the API key for the current instance.\n     *\n     * @returns The namespace options for the current instance.\n     */ get namespaceOptions() {\n        const defaults = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.applyDefaults)(this.options[this.namespace], this.options.global);\n        return Object.assign(Object.assign({}, defaults), {\n            key: this.key\n        });\n    }\n    /**\n     * Generates a URL for an API endpoint with optional query parameters and transcription options.\n     *\n     * @param endpoint - The API endpoint URL, which may contain placeholders for fields.\n     * @param fields - An optional object containing key-value pairs to replace placeholders in the endpoint URL.\n     * @param transcriptionOptions - Optional transcription options to include as query parameters in the URL.\n     * @returns A URL object representing the constructed API request URL.\n     */ getRequestUrl(endpoint, fields = {\n        version: this.version\n    }, transcriptionOptions) {\n        /**\n         * If we pass in fields without a version, set a version.\n         */ fields.version = this.version;\n        /**\n         * Version and template the endpoint for input argument..\n         */ endpoint = endpoint.replace(/:(\\w+)/g, function(_, key) {\n            return fields[key];\n        });\n        /**\n         * Create a URL object.\n         */ const url = new URL(endpoint, this.baseUrl);\n        /**\n         * If there are transcription options, append them to the request as URL querystring parameters\n         */ if (transcriptionOptions) {\n            (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.appendSearchParams)(url.searchParams, transcriptionOptions);\n        }\n        return url;\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */ log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n} //# sourceMappingURL=AbstractClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractLiveClient.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/AbstractLiveClient.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractLiveClient: () => (/* binding */ AbstractLiveClient),\n/* harmony export */   AbstractWsClient: () => (/* binding */ AbstractLiveClient)\n/* harmony export */ });\n/* harmony import */ var _AbstractClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/constants */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/runtime */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/runtime.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * Represents an error that occurred in a WebSocket-like connection.\n * @property {any} error - The underlying error object.\n * @property {string} message - A human-readable error message.\n * @property {string} type - The type of the error.\n */ // interface WebSocketLikeError {\n//   error: any;\n//   message: string;\n//   type: string;\n// }\n/**\n * Indicates whether a native WebSocket implementation is available in the current environment.\n */ const NATIVE_WEBSOCKET_AVAILABLE = typeof WebSocket !== \"undefined\";\n/**\n * Represents an abstract live client that extends the AbstractClient class.\n * The AbstractLiveClient class provides functionality for connecting, reconnecting, and disconnecting a WebSocket connection, as well as sending data over the connection.\n * Subclasses of this class are responsible for setting up the connection event handlers.\n *\n * @abstract\n */ class AbstractLiveClient extends _AbstractClient__WEBPACK_IMPORTED_MODULE_0__.AbstractClient {\n    constructor(options){\n        super(options);\n        this.conn = null;\n        this.sendBuffer = [];\n        /**\n         * Reconnects the socket using new or existing transcription options.\n         *\n         * @param options - The transcription options to use when reconnecting the socket.\n         */ this.reconnect = _AbstractClient__WEBPACK_IMPORTED_MODULE_0__.noop;\n        const { key, websocket: { options: websocketOptions, client } } = this.namespaceOptions;\n        if (this.proxy) {\n            this.baseUrl = websocketOptions.proxy.url;\n        } else {\n            this.baseUrl = websocketOptions.url;\n        }\n        if (client) {\n            this.transport = client;\n        } else {\n            this.transport = null;\n        }\n        if (websocketOptions._nodeOnlyHeaders) {\n            this.headers = websocketOptions._nodeOnlyHeaders;\n        } else {\n            this.headers = {};\n        }\n        if (!(\"Authorization\" in this.headers)) {\n            this.headers[\"Authorization\"] = `Token ${key}`; // Add default token\n        }\n    }\n    /**\n     * Connects the socket, unless already connected.\n     *\n     * @protected Can only be called from within the class.\n     */ connect(transcriptionOptions, endpoint) {\n        if (this.conn) {\n            return;\n        }\n        this.reconnect = (options = transcriptionOptions)=>{\n            this.connect(options, endpoint);\n        };\n        const requestUrl = this.getRequestUrl(endpoint, {}, transcriptionOptions);\n        /**\n         * Custom websocket transport\n         */ if (this.transport) {\n            this.conn = new this.transport(requestUrl, undefined, {\n                headers: this.headers\n            });\n            return;\n        }\n        /**\n         * @summary Bun websocket transport has a bug where it's native WebSocket implementation messes up the headers\n         * @summary This is a workaround to use the WS package for the websocket connection instead of the native Bun WebSocket\n         * @summary you can track the issue here\n         * @link https://github.com/oven-sh/bun/issues/4529\n         */ if ((0,_lib_runtime__WEBPACK_IMPORTED_MODULE_1__.isBun)()) {\n            Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/ws\"), __webpack_require__.e(\"_32c4-_66e9\")]).then(__webpack_require__.bind(__webpack_require__, /*! ws */ \"(rsc)/./node_modules/ws/wrapper.mjs\")).then(({ default: WS })=>{\n                this.conn = new WS(requestUrl, {\n                    headers: this.headers\n                });\n                console.log(`Using WS package`);\n                this.setupConnection();\n            });\n            return;\n        }\n        /**\n         * Native websocket transport (browser)\n         */ if (NATIVE_WEBSOCKET_AVAILABLE) {\n            this.conn = new WebSocket(requestUrl, [\n                \"token\",\n                this.namespaceOptions.key\n            ]);\n            this.setupConnection();\n            return;\n        }\n        /**\n         * Dummy websocket\n         */ this.conn = new WSWebSocketDummy(requestUrl, undefined, {\n            close: ()=>{\n                this.conn = null;\n            }\n        });\n        /**\n         * WS package for node environment\n         */ Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/ws\"), __webpack_require__.e(\"_32c4-_66e9\")]).then(__webpack_require__.bind(__webpack_require__, /*! ws */ \"(rsc)/./node_modules/ws/wrapper.mjs\")).then(({ default: WS })=>{\n            this.conn = new WS(requestUrl, undefined, {\n                headers: this.headers\n            });\n            this.setupConnection();\n        });\n    }\n    /**\n     * Disconnects the socket from the client.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */ disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function() {}; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : \"\");\n            } else {\n                this.conn.close();\n            }\n            this.conn = null;\n        }\n    }\n    /**\n     * Returns the current connection state of the WebSocket connection.\n     *\n     * @returns The current connection state of the WebSocket connection.\n     */ connectionState() {\n        switch(this.conn && this.conn.readyState){\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_2__.SOCKET_STATES.connecting:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_2__.CONNECTION_STATE.Connecting;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_2__.SOCKET_STATES.open:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_2__.CONNECTION_STATE.Open;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_2__.SOCKET_STATES.closing:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_2__.CONNECTION_STATE.Closing;\n            default:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_2__.CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns the current ready state of the WebSocket connection.\n     *\n     * @returns The current ready state of the WebSocket connection.\n     */ getReadyState() {\n        var _a, _b;\n        return (_b = (_a = this.conn) === null || _a === void 0 ? void 0 : _a.readyState) !== null && _b !== void 0 ? _b : _lib_constants__WEBPACK_IMPORTED_MODULE_2__.SOCKET_STATES.closed;\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */ isConnected() {\n        return this.connectionState() === _lib_constants__WEBPACK_IMPORTED_MODULE_2__.CONNECTION_STATE.Open;\n    }\n    /**\n     * Sends data to the Deepgram API via websocket connection\n     * @param data Audio data to send to Deepgram\n     *\n     * Conforms to RFC #146 for Node.js - does not send an empty byte.\n     * @see https://github.com/deepgram/deepgram-python-sdk/issues/146\n     */ send(data) {\n        const callback = ()=>__awaiter(this, void 0, void 0, function*() {\n                var _a;\n                if (data instanceof Blob) {\n                    if (data.size === 0) {\n                        this.log(\"warn\", \"skipping `send` for zero-byte blob\", data);\n                        return;\n                    }\n                    data = yield data.arrayBuffer();\n                }\n                if (typeof data !== \"string\") {\n                    if (!(data === null || data === void 0 ? void 0 : data.byteLength)) {\n                        this.log(\"warn\", \"skipping `send` for zero-byte payload\", data);\n                        return;\n                    }\n                }\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(data);\n            });\n        if (this.isConnected()) {\n            callback();\n        } else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Determines whether the current instance should proxy requests.\n     * @returns {boolean} true if the current instance should proxy requests; otherwise, false\n     */ get proxy() {\n        var _a;\n        return this.key === \"proxy\" && !!((_a = this.namespaceOptions.websocket.options.proxy) === null || _a === void 0 ? void 0 : _a.url);\n    }\n}\nclass WSWebSocketDummy {\n    constructor(address, _protocols, options){\n        this.binaryType = \"arraybuffer\";\n        this.onclose = ()=>{};\n        this.onerror = ()=>{};\n        this.onmessage = ()=>{};\n        this.onopen = ()=>{};\n        this.readyState = _lib_constants__WEBPACK_IMPORTED_MODULE_2__.SOCKET_STATES.connecting;\n        this.send = ()=>{};\n        this.url = null;\n        this.url = address.toString();\n        this.close = options.close;\n    }\n}\n //# sourceMappingURL=AbstractLiveClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9BYnN0cmFjdExpdmVDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFJQSxZQUFZLFNBQUssSUFBSSxTQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDd0Q7QUFDVztBQUM1QjtBQUN2Qzs7Ozs7Q0FLQyxHQUNELGlDQUFpQztBQUNqQyxnQkFBZ0I7QUFDaEIscUJBQXFCO0FBQ3JCLGtCQUFrQjtBQUNsQixJQUFJO0FBQ0o7O0NBRUMsR0FDRCxNQUFNWSw2QkFBNkIsT0FBT0MsY0FBYztBQUN4RDs7Ozs7O0NBTUMsR0FDTSxNQUFNQywyQkFBMkJQLDJEQUFjQTtJQUNsRFEsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNDLElBQUksR0FBRztRQUNaLElBQUksQ0FBQ0MsVUFBVSxHQUFHLEVBQUU7UUFDcEI7Ozs7U0FJQyxHQUNELElBQUksQ0FBQ0MsU0FBUyxHQUFHWCxpREFBSUE7UUFDckIsTUFBTSxFQUFFWSxHQUFHLEVBQUVDLFdBQVcsRUFBRUwsU0FBU00sZ0JBQWdCLEVBQUVDLE1BQU0sRUFBRSxFQUFHLEdBQUcsSUFBSSxDQUFDQyxnQkFBZ0I7UUFDeEYsSUFBSSxJQUFJLENBQUNDLEtBQUssRUFBRTtZQUNaLElBQUksQ0FBQ0MsT0FBTyxHQUFHSixpQkFBaUJHLEtBQUssQ0FBQ0UsR0FBRztRQUM3QyxPQUNLO1lBQ0QsSUFBSSxDQUFDRCxPQUFPLEdBQUdKLGlCQUFpQkssR0FBRztRQUN2QztRQUNBLElBQUlKLFFBQVE7WUFDUixJQUFJLENBQUNLLFNBQVMsR0FBR0w7UUFDckIsT0FDSztZQUNELElBQUksQ0FBQ0ssU0FBUyxHQUFHO1FBQ3JCO1FBQ0EsSUFBSU4saUJBQWlCTyxnQkFBZ0IsRUFBRTtZQUNuQyxJQUFJLENBQUNDLE9BQU8sR0FBR1IsaUJBQWlCTyxnQkFBZ0I7UUFDcEQsT0FDSztZQUNELElBQUksQ0FBQ0MsT0FBTyxHQUFHLENBQUM7UUFDcEI7UUFDQSxJQUFJLENBQUUsb0JBQW1CLElBQUksQ0FBQ0EsT0FBTyxHQUFHO1lBQ3BDLElBQUksQ0FBQ0EsT0FBTyxDQUFDLGdCQUFnQixHQUFHLENBQUMsTUFBTSxFQUFFVixJQUFJLENBQUMsRUFBRSxvQkFBb0I7UUFDeEU7SUFDSjtJQUNBOzs7O0tBSUMsR0FDRFcsUUFBUUMsb0JBQW9CLEVBQUVDLFFBQVEsRUFBRTtRQUNwQyxJQUFJLElBQUksQ0FBQ2hCLElBQUksRUFBRTtZQUNYO1FBQ0o7UUFDQSxJQUFJLENBQUNFLFNBQVMsR0FBRyxDQUFDSCxVQUFVZ0Isb0JBQW9CO1lBQzVDLElBQUksQ0FBQ0QsT0FBTyxDQUFDZixTQUFTaUI7UUFDMUI7UUFDQSxNQUFNQyxhQUFhLElBQUksQ0FBQ0MsYUFBYSxDQUFDRixVQUFVLENBQUMsR0FBR0Q7UUFDcEQ7O1NBRUMsR0FDRCxJQUFJLElBQUksQ0FBQ0osU0FBUyxFQUFFO1lBQ2hCLElBQUksQ0FBQ1gsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDVyxTQUFTLENBQUNNLFlBQVlFLFdBQVc7Z0JBQ2xETixTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUN6QjtZQUNBO1FBQ0o7UUFDQTs7Ozs7U0FLQyxHQUNELElBQUluQixtREFBS0EsSUFBSTtZQUNULGtOQUFZLENBQUNOLElBQUksQ0FBQyxDQUFDLEVBQUVnQyxTQUFTQyxFQUFFLEVBQUU7Z0JBQzlCLElBQUksQ0FBQ3JCLElBQUksR0FBRyxJQUFJcUIsR0FBR0osWUFBWTtvQkFDM0JKLFNBQVMsSUFBSSxDQUFDQSxPQUFPO2dCQUN6QjtnQkFDQVMsUUFBUUMsR0FBRyxDQUFDLENBQUMsZ0JBQWdCLENBQUM7Z0JBQzlCLElBQUksQ0FBQ0MsZUFBZTtZQUN4QjtZQUNBO1FBQ0o7UUFDQTs7U0FFQyxHQUNELElBQUk3Qiw0QkFBNEI7WUFDNUIsSUFBSSxDQUFDSyxJQUFJLEdBQUcsSUFBSUosVUFBVXFCLFlBQVk7Z0JBQUM7Z0JBQVMsSUFBSSxDQUFDVixnQkFBZ0IsQ0FBQ0osR0FBRzthQUFDO1lBQzFFLElBQUksQ0FBQ3FCLGVBQWU7WUFDcEI7UUFDSjtRQUNBOztTQUVDLEdBQ0QsSUFBSSxDQUFDeEIsSUFBSSxHQUFHLElBQUl5QixpQkFBaUJSLFlBQVlFLFdBQVc7WUFDcERPLE9BQU87Z0JBQ0gsSUFBSSxDQUFDMUIsSUFBSSxHQUFHO1lBQ2hCO1FBQ0o7UUFDQTs7U0FFQyxHQUNELGtOQUFZLENBQUNaLElBQUksQ0FBQyxDQUFDLEVBQUVnQyxTQUFTQyxFQUFFLEVBQUU7WUFDOUIsSUFBSSxDQUFDckIsSUFBSSxHQUFHLElBQUlxQixHQUFHSixZQUFZRSxXQUFXO2dCQUN0Q04sU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDekI7WUFDQSxJQUFJLENBQUNXLGVBQWU7UUFDeEI7SUFDSjtJQUNBOzs7OztLQUtDLEdBQ0RHLFdBQVdDLElBQUksRUFBRUMsTUFBTSxFQUFFO1FBQ3JCLElBQUksSUFBSSxDQUFDN0IsSUFBSSxFQUFFO1lBQ1gsSUFBSSxDQUFDQSxJQUFJLENBQUM4QixPQUFPLEdBQUcsWUFBYyxHQUFHLE9BQU87WUFDNUMsSUFBSUYsTUFBTTtnQkFDTixJQUFJLENBQUM1QixJQUFJLENBQUMwQixLQUFLLENBQUNFLE1BQU1DLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUlBLFNBQVM7WUFDMUUsT0FDSztnQkFDRCxJQUFJLENBQUM3QixJQUFJLENBQUMwQixLQUFLO1lBQ25CO1lBQ0EsSUFBSSxDQUFDMUIsSUFBSSxHQUFHO1FBQ2hCO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0QrQixrQkFBa0I7UUFDZCxPQUFRLElBQUksQ0FBQy9CLElBQUksSUFBSSxJQUFJLENBQUNBLElBQUksQ0FBQ2dDLFVBQVU7WUFDckMsS0FBS3ZDLHlEQUFhQSxDQUFDd0MsVUFBVTtnQkFDekIsT0FBT3pDLDREQUFnQkEsQ0FBQzBDLFVBQVU7WUFDdEMsS0FBS3pDLHlEQUFhQSxDQUFDMEMsSUFBSTtnQkFDbkIsT0FBTzNDLDREQUFnQkEsQ0FBQzRDLElBQUk7WUFDaEMsS0FBSzNDLHlEQUFhQSxDQUFDNEMsT0FBTztnQkFDdEIsT0FBTzdDLDREQUFnQkEsQ0FBQzhDLE9BQU87WUFDbkM7Z0JBQ0ksT0FBTzlDLDREQUFnQkEsQ0FBQytDLE1BQU07UUFDdEM7SUFDSjtJQUNBOzs7O0tBSUMsR0FDREMsZ0JBQWdCO1FBQ1osSUFBSUMsSUFBSUM7UUFDUixPQUFPLENBQUNBLEtBQUssQ0FBQ0QsS0FBSyxJQUFJLENBQUN6QyxJQUFJLE1BQU0sUUFBUXlDLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR1QsVUFBVSxNQUFNLFFBQVFVLE9BQU8sS0FBSyxJQUFJQSxLQUFLakQseURBQWFBLENBQUNrRCxNQUFNO0lBQzNJO0lBQ0E7O0tBRUMsR0FDREMsY0FBYztRQUNWLE9BQU8sSUFBSSxDQUFDYixlQUFlLE9BQU92Qyw0REFBZ0JBLENBQUM0QyxJQUFJO0lBQzNEO0lBQ0E7Ozs7OztLQU1DLEdBQ0RTLEtBQUtDLElBQUksRUFBRTtRQUNQLE1BQU1DLFdBQVcsSUFBTTVFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7Z0JBQ25ELElBQUlzRTtnQkFDSixJQUFJSyxnQkFBZ0JFLE1BQU07b0JBQ3RCLElBQUlGLEtBQUtHLElBQUksS0FBSyxHQUFHO3dCQUNqQixJQUFJLENBQUMxQixHQUFHLENBQUMsUUFBUSxzQ0FBc0N1Qjt3QkFDdkQ7b0JBQ0o7b0JBQ0FBLE9BQU8sTUFBTUEsS0FBS0ksV0FBVztnQkFDakM7Z0JBQ0EsSUFBSSxPQUFPSixTQUFTLFVBQVU7b0JBQzFCLElBQUksQ0FBRUEsQ0FBQUEsU0FBUyxRQUFRQSxTQUFTLEtBQUssSUFBSSxLQUFLLElBQUlBLEtBQUtLLFVBQVUsR0FBRzt3QkFDaEUsSUFBSSxDQUFDNUIsR0FBRyxDQUFDLFFBQVEseUNBQXlDdUI7d0JBQzFEO29CQUNKO2dCQUNKO2dCQUNDTCxDQUFBQSxLQUFLLElBQUksQ0FBQ3pDLElBQUksTUFBTSxRQUFReUMsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHSSxJQUFJLENBQUNDO1lBQ2xFO1FBQ0EsSUFBSSxJQUFJLENBQUNGLFdBQVcsSUFBSTtZQUNwQkc7UUFDSixPQUNLO1lBQ0QsSUFBSSxDQUFDOUMsVUFBVSxDQUFDbUQsSUFBSSxDQUFDTDtRQUN6QjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0QsSUFBSXZDLFFBQVE7UUFDUixJQUFJaUM7UUFDSixPQUFPLElBQUksQ0FBQ3RDLEdBQUcsS0FBSyxXQUFXLENBQUMsQ0FBRSxFQUFDc0MsS0FBSyxJQUFJLENBQUNsQyxnQkFBZ0IsQ0FBQ0gsU0FBUyxDQUFDTCxPQUFPLENBQUNTLEtBQUssTUFBTSxRQUFRaUMsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHL0IsR0FBRztJQUN0STtBQUNKO0FBQ0EsTUFBTWU7SUFDRjNCLFlBQVl1RCxPQUFPLEVBQUVDLFVBQVUsRUFBRXZELE9BQU8sQ0FBRTtRQUN0QyxJQUFJLENBQUN3RCxVQUFVLEdBQUc7UUFDbEIsSUFBSSxDQUFDekIsT0FBTyxHQUFHLEtBQVE7UUFDdkIsSUFBSSxDQUFDMEIsT0FBTyxHQUFHLEtBQVE7UUFDdkIsSUFBSSxDQUFDQyxTQUFTLEdBQUcsS0FBUTtRQUN6QixJQUFJLENBQUNDLE1BQU0sR0FBRyxLQUFRO1FBQ3RCLElBQUksQ0FBQzFCLFVBQVUsR0FBR3ZDLHlEQUFhQSxDQUFDd0MsVUFBVTtRQUMxQyxJQUFJLENBQUNZLElBQUksR0FBRyxLQUFRO1FBQ3BCLElBQUksQ0FBQ25DLEdBQUcsR0FBRztRQUNYLElBQUksQ0FBQ0EsR0FBRyxHQUFHMkMsUUFBUU0sUUFBUTtRQUMzQixJQUFJLENBQUNqQyxLQUFLLEdBQUczQixRQUFRMkIsS0FBSztJQUM5QjtBQUNKO0FBQ2tELENBQ2xELDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbGwtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9BYnN0cmFjdExpdmVDbGllbnQuanM/NmZjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IEFic3RyYWN0Q2xpZW50LCBub29wIH0gZnJvbSBcIi4vQWJzdHJhY3RDbGllbnRcIjtcbmltcG9ydCB7IENPTk5FQ1RJT05fU1RBVEUsIFNPQ0tFVF9TVEFURVMgfSBmcm9tIFwiLi4vbGliL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgaXNCdW4gfSBmcm9tIFwiLi4vbGliL3J1bnRpbWVcIjtcbi8qKlxuICogUmVwcmVzZW50cyBhbiBlcnJvciB0aGF0IG9jY3VycmVkIGluIGEgV2ViU29ja2V0LWxpa2UgY29ubmVjdGlvbi5cbiAqIEBwcm9wZXJ0eSB7YW55fSBlcnJvciAtIFRoZSB1bmRlcmx5aW5nIGVycm9yIG9iamVjdC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBtZXNzYWdlIC0gQSBodW1hbi1yZWFkYWJsZSBlcnJvciBtZXNzYWdlLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IHR5cGUgLSBUaGUgdHlwZSBvZiB0aGUgZXJyb3IuXG4gKi9cbi8vIGludGVyZmFjZSBXZWJTb2NrZXRMaWtlRXJyb3Ige1xuLy8gICBlcnJvcjogYW55O1xuLy8gICBtZXNzYWdlOiBzdHJpbmc7XG4vLyAgIHR5cGU6IHN0cmluZztcbi8vIH1cbi8qKlxuICogSW5kaWNhdGVzIHdoZXRoZXIgYSBuYXRpdmUgV2ViU29ja2V0IGltcGxlbWVudGF0aW9uIGlzIGF2YWlsYWJsZSBpbiB0aGUgY3VycmVudCBlbnZpcm9ubWVudC5cbiAqL1xuY29uc3QgTkFUSVZFX1dFQlNPQ0tFVF9BVkFJTEFCTEUgPSB0eXBlb2YgV2ViU29ja2V0ICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBSZXByZXNlbnRzIGFuIGFic3RyYWN0IGxpdmUgY2xpZW50IHRoYXQgZXh0ZW5kcyB0aGUgQWJzdHJhY3RDbGllbnQgY2xhc3MuXG4gKiBUaGUgQWJzdHJhY3RMaXZlQ2xpZW50IGNsYXNzIHByb3ZpZGVzIGZ1bmN0aW9uYWxpdHkgZm9yIGNvbm5lY3RpbmcsIHJlY29ubmVjdGluZywgYW5kIGRpc2Nvbm5lY3RpbmcgYSBXZWJTb2NrZXQgY29ubmVjdGlvbiwgYXMgd2VsbCBhcyBzZW5kaW5nIGRhdGEgb3ZlciB0aGUgY29ubmVjdGlvbi5cbiAqIFN1YmNsYXNzZXMgb2YgdGhpcyBjbGFzcyBhcmUgcmVzcG9uc2libGUgZm9yIHNldHRpbmcgdXAgdGhlIGNvbm5lY3Rpb24gZXZlbnQgaGFuZGxlcnMuXG4gKlxuICogQGFic3RyYWN0XG4gKi9cbmV4cG9ydCBjbGFzcyBBYnN0cmFjdExpdmVDbGllbnQgZXh0ZW5kcyBBYnN0cmFjdENsaWVudCB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICBzdXBlcihvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb25uID0gbnVsbDtcbiAgICAgICAgdGhpcy5zZW5kQnVmZmVyID0gW107XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZWNvbm5lY3RzIHRoZSBzb2NrZXQgdXNpbmcgbmV3IG9yIGV4aXN0aW5nIHRyYW5zY3JpcHRpb24gb3B0aW9ucy5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgdHJhbnNjcmlwdGlvbiBvcHRpb25zIHRvIHVzZSB3aGVuIHJlY29ubmVjdGluZyB0aGUgc29ja2V0LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5yZWNvbm5lY3QgPSBub29wO1xuICAgICAgICBjb25zdCB7IGtleSwgd2Vic29ja2V0OiB7IG9wdGlvbnM6IHdlYnNvY2tldE9wdGlvbnMsIGNsaWVudCB9LCB9ID0gdGhpcy5uYW1lc3BhY2VPcHRpb25zO1xuICAgICAgICBpZiAodGhpcy5wcm94eSkge1xuICAgICAgICAgICAgdGhpcy5iYXNlVXJsID0gd2Vic29ja2V0T3B0aW9ucy5wcm94eS51cmw7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmJhc2VVcmwgPSB3ZWJzb2NrZXRPcHRpb25zLnVybDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2xpZW50KSB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zcG9ydCA9IGNsaWVudDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNwb3J0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAod2Vic29ja2V0T3B0aW9ucy5fbm9kZU9ubHlIZWFkZXJzKSB7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnMgPSB3ZWJzb2NrZXRPcHRpb25zLl9ub2RlT25seUhlYWRlcnM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIShcIkF1dGhvcml6YXRpb25cIiBpbiB0aGlzLmhlYWRlcnMpKSB7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnNbXCJBdXRob3JpemF0aW9uXCJdID0gYFRva2VuICR7a2V5fWA7IC8vIEFkZCBkZWZhdWx0IHRva2VuXG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29ubmVjdHMgdGhlIHNvY2tldCwgdW5sZXNzIGFscmVhZHkgY29ubmVjdGVkLlxuICAgICAqXG4gICAgICogQHByb3RlY3RlZCBDYW4gb25seSBiZSBjYWxsZWQgZnJvbSB3aXRoaW4gdGhlIGNsYXNzLlxuICAgICAqL1xuICAgIGNvbm5lY3QodHJhbnNjcmlwdGlvbk9wdGlvbnMsIGVuZHBvaW50KSB7XG4gICAgICAgIGlmICh0aGlzLmNvbm4pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlY29ubmVjdCA9IChvcHRpb25zID0gdHJhbnNjcmlwdGlvbk9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdChvcHRpb25zLCBlbmRwb2ludCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlcXVlc3RVcmwgPSB0aGlzLmdldFJlcXVlc3RVcmwoZW5kcG9pbnQsIHt9LCB0cmFuc2NyaXB0aW9uT3B0aW9ucyk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDdXN0b20gd2Vic29ja2V0IHRyYW5zcG9ydFxuICAgICAgICAgKi9cbiAgICAgICAgaWYgKHRoaXMudHJhbnNwb3J0KSB7XG4gICAgICAgICAgICB0aGlzLmNvbm4gPSBuZXcgdGhpcy50cmFuc3BvcnQocmVxdWVzdFVybCwgdW5kZWZpbmVkLCB7XG4gICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBzdW1tYXJ5IEJ1biB3ZWJzb2NrZXQgdHJhbnNwb3J0IGhhcyBhIGJ1ZyB3aGVyZSBpdCdzIG5hdGl2ZSBXZWJTb2NrZXQgaW1wbGVtZW50YXRpb24gbWVzc2VzIHVwIHRoZSBoZWFkZXJzXG4gICAgICAgICAqIEBzdW1tYXJ5IFRoaXMgaXMgYSB3b3JrYXJvdW5kIHRvIHVzZSB0aGUgV1MgcGFja2FnZSBmb3IgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIGluc3RlYWQgb2YgdGhlIG5hdGl2ZSBCdW4gV2ViU29ja2V0XG4gICAgICAgICAqIEBzdW1tYXJ5IHlvdSBjYW4gdHJhY2sgdGhlIGlzc3VlIGhlcmVcbiAgICAgICAgICogQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL292ZW4tc2gvYnVuL2lzc3Vlcy80NTI5XG4gICAgICAgICAqL1xuICAgICAgICBpZiAoaXNCdW4oKSkge1xuICAgICAgICAgICAgaW1wb3J0KFwid3NcIikudGhlbigoeyBkZWZhdWx0OiBXUyB9KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25uID0gbmV3IFdTKHJlcXVlc3RVcmwsIHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBVc2luZyBXUyBwYWNrYWdlYCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXR1cENvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBOYXRpdmUgd2Vic29ja2V0IHRyYW5zcG9ydCAoYnJvd3NlcilcbiAgICAgICAgICovXG4gICAgICAgIGlmIChOQVRJVkVfV0VCU09DS0VUX0FWQUlMQUJMRSkge1xuICAgICAgICAgICAgdGhpcy5jb25uID0gbmV3IFdlYlNvY2tldChyZXF1ZXN0VXJsLCBbXCJ0b2tlblwiLCB0aGlzLm5hbWVzcGFjZU9wdGlvbnMua2V5XSk7XG4gICAgICAgICAgICB0aGlzLnNldHVwQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEdW1teSB3ZWJzb2NrZXRcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29ubiA9IG5ldyBXU1dlYlNvY2tldER1bW15KHJlcXVlc3RVcmwsIHVuZGVmaW5lZCwge1xuICAgICAgICAgICAgY2xvc2U6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbm4gPSBudWxsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXUyBwYWNrYWdlIGZvciBub2RlIGVudmlyb25tZW50XG4gICAgICAgICAqL1xuICAgICAgICBpbXBvcnQoXCJ3c1wiKS50aGVuKCh7IGRlZmF1bHQ6IFdTIH0pID0+IHtcbiAgICAgICAgICAgIHRoaXMuY29ubiA9IG5ldyBXUyhyZXF1ZXN0VXJsLCB1bmRlZmluZWQsIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuc2V0dXBDb25uZWN0aW9uKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEaXNjb25uZWN0cyB0aGUgc29ja2V0IGZyb20gdGhlIGNsaWVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb2RlIEEgbnVtZXJpYyBzdGF0dXMgY29kZSB0byBzZW5kIG9uIGRpc2Nvbm5lY3QuXG4gICAgICogQHBhcmFtIHJlYXNvbiBBIGN1c3RvbSByZWFzb24gZm9yIHRoZSBkaXNjb25uZWN0LlxuICAgICAqL1xuICAgIGRpc2Nvbm5lY3QoY29kZSwgcmVhc29uKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbm4pIHtcbiAgICAgICAgICAgIHRoaXMuY29ubi5vbmNsb3NlID0gZnVuY3Rpb24gKCkgeyB9OyAvLyBub29wXG4gICAgICAgICAgICBpZiAoY29kZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubi5jbG9zZShjb2RlLCByZWFzb24gIT09IG51bGwgJiYgcmVhc29uICE9PSB2b2lkIDAgPyByZWFzb24gOiBcIlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubi5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jb25uID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IGNvbm5lY3Rpb24gc3RhdGUgb2YgdGhlIFdlYlNvY2tldCBjb25uZWN0aW9uLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgY29ubmVjdGlvbiBzdGF0ZSBvZiB0aGUgV2ViU29ja2V0IGNvbm5lY3Rpb24uXG4gICAgICovXG4gICAgY29ubmVjdGlvblN0YXRlKCkge1xuICAgICAgICBzd2l0Y2ggKHRoaXMuY29ubiAmJiB0aGlzLmNvbm4ucmVhZHlTdGF0ZSkge1xuICAgICAgICAgICAgY2FzZSBTT0NLRVRfU1RBVEVTLmNvbm5lY3Rpbmc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIENPTk5FQ1RJT05fU1RBVEUuQ29ubmVjdGluZztcbiAgICAgICAgICAgIGNhc2UgU09DS0VUX1NUQVRFUy5vcGVuOlxuICAgICAgICAgICAgICAgIHJldHVybiBDT05ORUNUSU9OX1NUQVRFLk9wZW47XG4gICAgICAgICAgICBjYXNlIFNPQ0tFVF9TVEFURVMuY2xvc2luZzpcbiAgICAgICAgICAgICAgICByZXR1cm4gQ09OTkVDVElPTl9TVEFURS5DbG9zaW5nO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gQ09OTkVDVElPTl9TVEFURS5DbG9zZWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY3VycmVudCByZWFkeSBzdGF0ZSBvZiB0aGUgV2ViU29ja2V0IGNvbm5lY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCByZWFkeSBzdGF0ZSBvZiB0aGUgV2ViU29ja2V0IGNvbm5lY3Rpb24uXG4gICAgICovXG4gICAgZ2V0UmVhZHlTdGF0ZSgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMuY29ubikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlYWR5U3RhdGUpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFNPQ0tFVF9TVEFURVMuY2xvc2VkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGB0cnVlYCBpcyB0aGUgY29ubmVjdGlvbiBpcyBvcGVuLlxuICAgICAqL1xuICAgIGlzQ29ubmVjdGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25uZWN0aW9uU3RhdGUoKSA9PT0gQ09OTkVDVElPTl9TVEFURS5PcGVuO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZW5kcyBkYXRhIHRvIHRoZSBEZWVwZ3JhbSBBUEkgdmlhIHdlYnNvY2tldCBjb25uZWN0aW9uXG4gICAgICogQHBhcmFtIGRhdGEgQXVkaW8gZGF0YSB0byBzZW5kIHRvIERlZXBncmFtXG4gICAgICpcbiAgICAgKiBDb25mb3JtcyB0byBSRkMgIzE0NiBmb3IgTm9kZS5qcyAtIGRvZXMgbm90IHNlbmQgYW4gZW1wdHkgYnl0ZS5cbiAgICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9kZWVwZ3JhbS9kZWVwZ3JhbS1weXRob24tc2RrL2lzc3Vlcy8xNDZcbiAgICAgKi9cbiAgICBzZW5kKGRhdGEpIHtcbiAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIEJsb2IpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nKFwid2FyblwiLCBcInNraXBwaW5nIGBzZW5kYCBmb3IgemVyby1ieXRlIGJsb2JcIiwgZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGF0YSA9IHlpZWxkIGRhdGEuYXJyYXlCdWZmZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGlmICghKGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS5ieXRlTGVuZ3RoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZyhcIndhcm5cIiwgXCJza2lwcGluZyBgc2VuZGAgZm9yIHplcm8tYnl0ZSBwYXlsb2FkXCIsIGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9hID0gdGhpcy5jb25uKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc2VuZChkYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLmlzQ29ubmVjdGVkKCkpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNlbmRCdWZmZXIucHVzaChjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBjdXJyZW50IGluc3RhbmNlIHNob3VsZCBwcm94eSByZXF1ZXN0cy5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiB0aGUgY3VycmVudCBpbnN0YW5jZSBzaG91bGQgcHJveHkgcmVxdWVzdHM7IG90aGVyd2lzZSwgZmFsc2VcbiAgICAgKi9cbiAgICBnZXQgcHJveHkoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5ID09PSBcInByb3h5XCIgJiYgISEoKF9hID0gdGhpcy5uYW1lc3BhY2VPcHRpb25zLndlYnNvY2tldC5vcHRpb25zLnByb3h5KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudXJsKTtcbiAgICB9XG59XG5jbGFzcyBXU1dlYlNvY2tldER1bW15IHtcbiAgICBjb25zdHJ1Y3RvcihhZGRyZXNzLCBfcHJvdG9jb2xzLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuYmluYXJ5VHlwZSA9IFwiYXJyYXlidWZmZXJcIjtcbiAgICAgICAgdGhpcy5vbmNsb3NlID0gKCkgPT4geyB9O1xuICAgICAgICB0aGlzLm9uZXJyb3IgPSAoKSA9PiB7IH07XG4gICAgICAgIHRoaXMub25tZXNzYWdlID0gKCkgPT4geyB9O1xuICAgICAgICB0aGlzLm9ub3BlbiA9ICgpID0+IHsgfTtcbiAgICAgICAgdGhpcy5yZWFkeVN0YXRlID0gU09DS0VUX1NUQVRFUy5jb25uZWN0aW5nO1xuICAgICAgICB0aGlzLnNlbmQgPSAoKSA9PiB7IH07XG4gICAgICAgIHRoaXMudXJsID0gbnVsbDtcbiAgICAgICAgdGhpcy51cmwgPSBhZGRyZXNzLnRvU3RyaW5nKCk7XG4gICAgICAgIHRoaXMuY2xvc2UgPSBvcHRpb25zLmNsb3NlO1xuICAgIH1cbn1cbmV4cG9ydCB7IEFic3RyYWN0TGl2ZUNsaWVudCBhcyBBYnN0cmFjdFdzQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYnN0cmFjdExpdmVDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIkFic3RyYWN0Q2xpZW50Iiwibm9vcCIsIkNPTk5FQ1RJT05fU1RBVEUiLCJTT0NLRVRfU1RBVEVTIiwiaXNCdW4iLCJOQVRJVkVfV0VCU09DS0VUX0FWQUlMQUJMRSIsIldlYlNvY2tldCIsIkFic3RyYWN0TGl2ZUNsaWVudCIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsImNvbm4iLCJzZW5kQnVmZmVyIiwicmVjb25uZWN0Iiwia2V5Iiwid2Vic29ja2V0Iiwid2Vic29ja2V0T3B0aW9ucyIsImNsaWVudCIsIm5hbWVzcGFjZU9wdGlvbnMiLCJwcm94eSIsImJhc2VVcmwiLCJ1cmwiLCJ0cmFuc3BvcnQiLCJfbm9kZU9ubHlIZWFkZXJzIiwiaGVhZGVycyIsImNvbm5lY3QiLCJ0cmFuc2NyaXB0aW9uT3B0aW9ucyIsImVuZHBvaW50IiwicmVxdWVzdFVybCIsImdldFJlcXVlc3RVcmwiLCJ1bmRlZmluZWQiLCJkZWZhdWx0IiwiV1MiLCJjb25zb2xlIiwibG9nIiwic2V0dXBDb25uZWN0aW9uIiwiV1NXZWJTb2NrZXREdW1teSIsImNsb3NlIiwiZGlzY29ubmVjdCIsImNvZGUiLCJyZWFzb24iLCJvbmNsb3NlIiwiY29ubmVjdGlvblN0YXRlIiwicmVhZHlTdGF0ZSIsImNvbm5lY3RpbmciLCJDb25uZWN0aW5nIiwib3BlbiIsIk9wZW4iLCJjbG9zaW5nIiwiQ2xvc2luZyIsIkNsb3NlZCIsImdldFJlYWR5U3RhdGUiLCJfYSIsIl9iIiwiY2xvc2VkIiwiaXNDb25uZWN0ZWQiLCJzZW5kIiwiZGF0YSIsImNhbGxiYWNrIiwiQmxvYiIsInNpemUiLCJhcnJheUJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJwdXNoIiwiYWRkcmVzcyIsIl9wcm90b2NvbHMiLCJiaW5hcnlUeXBlIiwib25lcnJvciIsIm9ubWVzc2FnZSIsIm9ub3BlbiIsInRvU3RyaW5nIiwiQWJzdHJhY3RXc0NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractLiveClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractRestClient: () => (/* binding */ AbstractRestClient),\n/* harmony export */   AbstractRestfulClient: () => (/* binding */ AbstractRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/fetch */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/fetch.js\");\n/* harmony import */ var _AbstractClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js\");\n/* harmony import */ var _lib_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/runtime */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/runtime.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! deepmerge */ \"(rsc)/./node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(deepmerge__WEBPACK_IMPORTED_MODULE_0__);\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n/**\n * An abstract class that extends `AbstractClient` and provides a base implementation for a REST-based API client.\n * This class handles authentication, error handling, and other common functionality for REST API clients.\n */ class AbstractRestClient extends _AbstractClient__WEBPACK_IMPORTED_MODULE_1__.AbstractClient {\n    /**\n     * Constructs a new instance of the `AbstractRestClient` class with the provided options.\n     *\n     * @param options - The client options to use for this instance.\n     * @throws {DeepgramError} If the client is being used in a browser and no proxy is provided.\n     */ constructor(options){\n        super(options);\n        if ((0,_lib_runtime__WEBPACK_IMPORTED_MODULE_2__.isBrowser)() && !this.proxy) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_3__.DeepgramError(\"Due to CORS we are unable to support REST-based API calls to our API from the browser. Please consider using a proxy: https://dpgr.am/js-proxy for more information.\");\n        }\n        this.fetch = (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_4__.fetchWithAuth)(this.key, this.namespaceOptions.fetch.client);\n        if (this.proxy) {\n            this.baseUrl = this.namespaceOptions.fetch.options.proxy.url;\n        } else {\n            this.baseUrl = this.namespaceOptions.fetch.options.url;\n        }\n    }\n    /**\n     * Constructs an error message from the provided error object.\n     *\n     * @param err - The error object to extract the error message from.\n     * @returns The constructed error message.\n     */ _getErrorMessage(err) {\n        return err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\n    }\n    /**\n     * Handles an error that occurred during a request.\n     *\n     * @param error - The error that occurred during the request.\n     * @param reject - The rejection function to call with the error.\n     * @returns A Promise that resolves when the error has been handled.\n     */ _handleError(error, reject) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const Res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_4__.resolveResponse)();\n            if (error instanceof Res) {\n                error.json().then((err)=>{\n                    reject(new _lib_errors__WEBPACK_IMPORTED_MODULE_3__.DeepgramApiError(this._getErrorMessage(err), error.status || 500));\n                }).catch((err)=>{\n                    reject(new _lib_errors__WEBPACK_IMPORTED_MODULE_3__.DeepgramUnknownError(this._getErrorMessage(err), err));\n                });\n            } else {\n                reject(new _lib_errors__WEBPACK_IMPORTED_MODULE_3__.DeepgramUnknownError(this._getErrorMessage(error), error));\n            }\n        });\n    }\n    /**\n     * Constructs the options object to be used for a fetch request.\n     *\n     * @param method - The HTTP method to use for the request, such as \"GET\", \"POST\", \"PUT\", \"PATCH\", or \"DELETE\".\n     * @param bodyOrOptions - For \"POST\", \"PUT\", and \"PATCH\" requests, the request body as a string, Buffer, or Readable stream. For \"GET\" and \"DELETE\" requests, the fetch options to use.\n     * @param options - Additional fetch options to use for the request.\n     * @returns The constructed fetch options object.\n     */ _getRequestOptions(method, bodyOrOptions, options) {\n        let reqOptions = {\n            method\n        };\n        if (method === \"GET\" || method === \"DELETE\") {\n            reqOptions = Object.assign(Object.assign({}, reqOptions), bodyOrOptions);\n        } else {\n            reqOptions = Object.assign(Object.assign({\n                duplex: \"half\",\n                body: bodyOrOptions\n            }, reqOptions), options);\n        }\n        return deepmerge__WEBPACK_IMPORTED_MODULE_0___default()(this.namespaceOptions.fetch.options, reqOptions, {\n            clone: false\n        });\n    }\n    _handleRequest(method, url, bodyOrOptions, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return new Promise((resolve, reject)=>{\n                const fetcher = this.fetch;\n                fetcher(url, this._getRequestOptions(method, bodyOrOptions, options)).then((result)=>{\n                    if (!result.ok) throw result;\n                    resolve(result);\n                }).catch((error)=>this._handleError(error, reject));\n            });\n        });\n    }\n    /**\n     * Handles an HTTP GET request using the provided URL and optional request options.\n     *\n     * @param url - The URL to send the GET request to.\n     * @param options - Additional fetch options to use for the GET request.\n     * @returns A Promise that resolves to the Response object for the GET request.\n     */ get(url, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._handleRequest(\"GET\", url, options);\n        });\n    }\n    /**\n     * Handles an HTTP POST request using the provided URL, request body, and optional request options.\n     *\n     * @param url - The URL to send the POST request to.\n     * @param body - The request body as a string, Buffer, or Readable stream.\n     * @param options - Additional fetch options to use for the POST request.\n     * @returns A Promise that resolves to the Response object for the POST request.\n     */ post(url, body, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._handleRequest(\"POST\", url, body, options);\n        });\n    }\n    /**\n     * Handles an HTTP PUT request using the provided URL, request body, and optional request options.\n     *\n     * @param url - The URL to send the PUT request to.\n     * @param body - The request body as a string, Buffer, or Readable stream.\n     * @param options - Additional fetch options to use for the PUT request.\n     * @returns A Promise that resolves to the Response object for the PUT request.\n     */ put(url, body, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._handleRequest(\"PUT\", url, body, options);\n        });\n    }\n    /**\n     * Handles an HTTP PATCH request using the provided URL, request body, and optional request options.\n     *\n     * @param url - The URL to send the PATCH request to.\n     * @param body - The request body as a string, Buffer, or Readable stream.\n     * @param options - Additional fetch options to use for the PATCH request.\n     * @returns A Promise that resolves to the Response object for the PATCH request.\n     */ patch(url, body, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._handleRequest(\"PATCH\", url, body, options);\n        });\n    }\n    /**\n     * Handles an HTTP DELETE request using the provided URL and optional request options.\n     *\n     * @param url - The URL to send the DELETE request to.\n     * @param options - Additional fetch options to use for the DELETE request.\n     * @returns A Promise that resolves to the Response object for the DELETE request.\n     */ delete(url, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this._handleRequest(\"DELETE\", url, options);\n        });\n    }\n    /**\n     * Determines whether the current instance should proxy requests.\n     * @returns {boolean} true if the current instance should proxy requests; otherwise, false\n     */ get proxy() {\n        var _a;\n        return this.key === \"proxy\" && !!((_a = this.namespaceOptions.fetch.options.proxy) === null || _a === void 0 ? void 0 : _a.url);\n    }\n}\n //# sourceMappingURL=AbstractRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AgentLiveClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/AgentLiveClient.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentLiveClient: () => (/* binding */ AgentLiveClient)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/constants */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/enums/AgentEvents */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/AgentEvents.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractLiveClient.js\");\n\n\n\n\nclass AgentLiveClient extends _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_0__.AbstractLiveClient {\n    constructor(options, endpoint = \"/:version/agent/converse\"){\n        var _a, _b, _c, _d;\n        super(options);\n        this.namespace = \"agent\";\n        this.baseUrl = (_d = (_c = (_b = (_a = options.agent) === null || _a === void 0 ? void 0 : _a.websocket) === null || _b === void 0 ? void 0 : _b.options) === null || _c === void 0 ? void 0 : _c.url) !== null && _d !== void 0 ? _d : _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_AGENT_URL;\n        this.connect({}, endpoint);\n    }\n    /**\n     * Sets up the connection event handlers.\n     * This method is responsible for handling the various events that can occur on the WebSocket connection, such as opening, closing, and receiving messages.\n     * - When the connection is opened, it emits the `AgentEvents.Open` event.\n     * - When the connection is closed, it emits the `AgentEvents.Close` event.\n     * - When an error occurs on the connection, it emits the `AgentEvents.Error` event.\n     * - When a message is received, it parses the message and emits the appropriate event based on the message type.\n     */ setupConnection() {\n        if (this.conn) {\n            this.conn.onopen = ()=>{\n                this.emit(_lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents.Open, this);\n            };\n            this.conn.onclose = (event)=>{\n                this.emit(_lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents.Close, event);\n            };\n            this.conn.onerror = (event)=>{\n                this.emit(_lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents.Error, event);\n            };\n            this.conn.onmessage = (event)=>{\n                this.handleMessage(event);\n            };\n        }\n    }\n    /**\n     * Handles incoming messages from the WebSocket connection.\n     * @param event - The MessageEvent object representing the received message.\n     */ handleMessage(event) {\n        if (typeof event.data === \"string\") {\n            try {\n                const data = JSON.parse(event.data);\n                this.handleTextMessage(data);\n            } catch (error) {\n                this.emit(_lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents.Error, {\n                    event,\n                    data: event.data,\n                    message: \"Unable to parse `data` as JSON.\",\n                    error\n                });\n            }\n        } else if (event.data instanceof Blob) {\n            event.data.arrayBuffer().then((buffer)=>{\n                this.handleBinaryMessage(Buffer.from(buffer));\n            });\n        } else if (event.data instanceof ArrayBuffer) {\n            this.handleBinaryMessage(Buffer.from(event.data));\n        } else if (Buffer.isBuffer(event.data)) {\n            this.handleBinaryMessage(event.data);\n        } else {\n            console.log(\"Received unknown data type\", event.data);\n            this.emit(_lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents.Error, {\n                event,\n                message: \"Received unknown data type.\"\n            });\n        }\n    }\n    /**\n     * Handles binary messages received from the WebSocket connection.\n     * @param data - The binary data.\n     */ handleBinaryMessage(data) {\n        this.emit(_lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents.Audio, data);\n    }\n    /**\n     * Handles text messages received from the WebSocket connection.\n     * @param data - The parsed JSON data.\n     */ handleTextMessage(data) {\n        if (data.type in _lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents) {\n            this.emit(data.type, data);\n        } else {\n            this.emit(_lib_enums_AgentEvents__WEBPACK_IMPORTED_MODULE_2__.AgentEvents.Unhandled, data);\n        }\n    }\n    /**\n     * To be called with your model configuration BEFORE sending\n     * any audio data.\n     * @param options - The SettingsConfiguration object.\n     */ configure(options) {\n        var _a, _b, _c;\n        if (!((_a = options.agent.listen) === null || _a === void 0 ? void 0 : _a.provider.model.startsWith(\"nova-3\")) && ((_c = (_b = options.agent.listen) === null || _b === void 0 ? void 0 : _b.provider.keyterms) === null || _c === void 0 ? void 0 : _c.length)) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_3__.DeepgramError(\"Keyterms are only supported with the Nova 3 models.\");\n        }\n        const string = JSON.stringify(Object.assign({\n            type: \"Settings\"\n        }, options));\n        this.send(string);\n    }\n    /**\n     * Provide new system prompt to the LLM.\n     * @param prompt - The system prompt to provide.\n     */ updatePrompt(prompt) {\n        this.send(JSON.stringify({\n            type: \"UpdatePrompt\",\n            prompt\n        }));\n    }\n    /**\n     * Change the speak model.\n     * @param model - The new model to use.\n     */ updateSpeak(speakConfig) {\n        this.send(JSON.stringify({\n            type: \"UpdateSpeak\",\n            speak: speakConfig\n        }));\n    }\n    /**\n     * Immediately trigger an agent message. If this message\n     * is sent while the user is speaking, or while the server is in the\n     * middle of sending audio, then the request will be ignored and an InjectionRefused\n     * event will be emitted.\n     * @example \"Hold on while I look that up for you.\"\n     * @example \"Are you still on the line?\"\n     * @param content - The message to speak.\n     */ injectAgentMessage(content) {\n        this.send(JSON.stringify({\n            type: \"InjectAgentMessage\",\n            content\n        }));\n    }\n    /**\n     * Respond to a function call request.\n     * @param response  - The response to the function call request.\n     */ functionCallResponse(response) {\n        this.send(JSON.stringify(Object.assign({\n            type: \"FunctionCallResponse\"\n        }, response)));\n    }\n    /**\n     * Send a keepalive to avoid closing the websocket while you\n     * are not transmitting audio. This should be sent at least\n     * every 8 seconds.\n     */ keepAlive() {\n        this.send(JSON.stringify({\n            type: \"KeepAlive\"\n        }));\n    }\n} //# sourceMappingURL=AgentLiveClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AgentLiveClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AuthRestClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/AuthRestClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthRestClient: () => (/* binding */ AuthRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass AuthRestClient extends _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__.AbstractRestClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"auth\";\n    }\n    /**\n     * Generates a new temporary token for the Deepgram API.\n     * @param endpoint Optional custom endpoint to use for the request. Defaults to \":version/auth/grant\".\n     * @returns Object containing the result of the request or an error if one occurred. Result will contain access_token and expires_in properties.\n     */ grantToken(endpoint = \":version/auth/grant\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint);\n                const result = yield this.post(requestUrl, \"\").then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n} //# sourceMappingURL=AuthRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9BdXRoUmVzdENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxZQUFZLFNBQUssSUFBSSxTQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDZ0Q7QUFDVTtBQUNuRCxNQUFNUyx1QkFBdUJELG1FQUFrQkE7SUFDbERFLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxTQUFTLEdBQUc7SUFDckI7SUFDQTs7OztLQUlDLEdBQ0RDLFdBQVdDLFdBQVcscUJBQXFCLEVBQUU7UUFDekMsT0FBTzFCLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsSUFBSTtnQkFDQSxNQUFNMkIsYUFBYSxJQUFJLENBQUNDLGFBQWEsQ0FBQ0Y7Z0JBQ3RDLE1BQU1YLFNBQVMsTUFBTSxJQUFJLENBQUNjLElBQUksQ0FBQ0YsWUFBWSxJQUFJVixJQUFJLENBQUMsQ0FBQ0YsU0FBV0EsT0FBT2UsSUFBSTtnQkFDM0UsT0FBTztvQkFBRWY7b0JBQVFnQixPQUFPO2dCQUFLO1lBQ2pDLEVBQ0EsT0FBT0EsT0FBTztnQkFDVixJQUFJWiw0REFBZUEsQ0FBQ1ksUUFBUTtvQkFDeEIsT0FBTzt3QkFBRWhCLFFBQVE7d0JBQU1nQjtvQkFBTTtnQkFDakM7Z0JBQ0EsTUFBTUE7WUFDVjtRQUNKO0lBQ0o7QUFDSixFQUNBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbGwtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9BdXRoUmVzdENsaWVudC5qcz9jMWFhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IHsgaXNEZWVwZ3JhbUVycm9yIH0gZnJvbSBcIi4uL2xpYi9lcnJvcnNcIjtcbmltcG9ydCB7IEFic3RyYWN0UmVzdENsaWVudCB9IGZyb20gXCIuL0Fic3RyYWN0UmVzdENsaWVudFwiO1xuZXhwb3J0IGNsYXNzIEF1dGhSZXN0Q2xpZW50IGV4dGVuZHMgQWJzdHJhY3RSZXN0Q2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5uYW1lc3BhY2UgPSBcImF1dGhcIjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgbmV3IHRlbXBvcmFyeSB0b2tlbiBmb3IgdGhlIERlZXBncmFtIEFQSS5cbiAgICAgKiBAcGFyYW0gZW5kcG9pbnQgT3B0aW9uYWwgY3VzdG9tIGVuZHBvaW50IHRvIHVzZSBmb3IgdGhlIHJlcXVlc3QuIERlZmF1bHRzIHRvIFwiOnZlcnNpb24vYXV0aC9ncmFudFwiLlxuICAgICAqIEByZXR1cm5zIE9iamVjdCBjb250YWluaW5nIHRoZSByZXN1bHQgb2YgdGhlIHJlcXVlc3Qgb3IgYW4gZXJyb3IgaWYgb25lIG9jY3VycmVkLiBSZXN1bHQgd2lsbCBjb250YWluIGFjY2Vzc190b2tlbiBhbmQgZXhwaXJlc19pbiBwcm9wZXJ0aWVzLlxuICAgICAqL1xuICAgIGdyYW50VG9rZW4oZW5kcG9pbnQgPSBcIjp2ZXJzaW9uL2F1dGgvZ3JhbnRcIikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0VXJsID0gdGhpcy5nZXRSZXF1ZXN0VXJsKGVuZHBvaW50KTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB5aWVsZCB0aGlzLnBvc3QocmVxdWVzdFVybCwgXCJcIikudGhlbigocmVzdWx0KSA9PiByZXN1bHQuanNvbigpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyByZXN1bHQsIGVycm9yOiBudWxsIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNEZWVwZ3JhbUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IG51bGwsIGVycm9yIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoUmVzdENsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiYWRvcHQiLCJ2YWx1ZSIsInJlc29sdmUiLCJQcm9taXNlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwidGhlbiIsImFwcGx5IiwiaXNEZWVwZ3JhbUVycm9yIiwiQWJzdHJhY3RSZXN0Q2xpZW50IiwiQXV0aFJlc3RDbGllbnQiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsIm5hbWVzcGFjZSIsImdyYW50VG9rZW4iLCJlbmRwb2ludCIsInJlcXVlc3RVcmwiLCJnZXRSZXF1ZXN0VXJsIiwicG9zdCIsImpzb24iLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AuthRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/ListenClient.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListenClient: () => (/* binding */ ListenClient)\n/* harmony export */ });\n/* harmony import */ var _AbstractClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js\");\n/* harmony import */ var _ListenLiveClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ListenLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenLiveClient.js\");\n/* harmony import */ var _ListenRestClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ListenRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenRestClient.js\");\n\n\n\n/**\n * The `ListenClient` class extends the `AbstractClient` class and provides access to the \"listen\" namespace.\n * It exposes two methods:\n *\n * 1. `prerecorded()`: Returns a `ListenRestClient` instance for interacting with the prerecorded listen API.\n * 2. `live(transcriptionOptions: LiveSchema = {}, endpoint = \":version/listen\")`: Returns a `ListenLiveClient` instance for interacting with the live listen API, with the provided transcription options and endpoint.\n */ class ListenClient extends _AbstractClient__WEBPACK_IMPORTED_MODULE_0__.AbstractClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"listen\";\n    }\n    /**\n     * Returns a `ListenRestClient` instance for interacting with the prerecorded listen API.\n     */ get prerecorded() {\n        return new _ListenRestClient__WEBPACK_IMPORTED_MODULE_1__.ListenRestClient(this.options);\n    }\n    /**\n     * Returns a `ListenLiveClient` instance for interacting with the live listen API, with the provided transcription options and endpoint.\n     * @param {LiveSchema} [transcriptionOptions={}] - The transcription options to use for the live listen API.\n     * @param {string} [endpoint=\":version/listen\"] - The endpoint to use for the live listen API.\n     * @returns {ListenLiveClient} - A `ListenLiveClient` instance for interacting with the live listen API.\n     */ live(transcriptionOptions = {}, endpoint = \":version/listen\") {\n        return new _ListenLiveClient__WEBPACK_IMPORTED_MODULE_2__.ListenLiveClient(this.options, transcriptionOptions, endpoint);\n    }\n} //# sourceMappingURL=ListenClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9MaXN0ZW5DbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRDtBQUNJO0FBQ0E7QUFDdEQ7Ozs7OztDQU1DLEdBQ00sTUFBTUcscUJBQXFCSCwyREFBY0E7SUFDNUNJLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxTQUFTLEdBQUc7SUFDckI7SUFDQTs7S0FFQyxHQUNELElBQUlDLGNBQWM7UUFDZCxPQUFPLElBQUlMLCtEQUFnQkEsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDNUM7SUFDQTs7Ozs7S0FLQyxHQUNEQyxLQUFLQyx1QkFBdUIsQ0FBQyxDQUFDLEVBQUVDLFdBQVcsaUJBQWlCLEVBQUU7UUFDMUQsT0FBTyxJQUFJViwrREFBZ0JBLENBQUMsSUFBSSxDQUFDTyxPQUFPLEVBQUVFLHNCQUFzQkM7SUFDcEU7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbGwtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9MaXN0ZW5DbGllbnQuanM/NTUzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdENsaWVudCB9IGZyb20gXCIuL0Fic3RyYWN0Q2xpZW50XCI7XG5pbXBvcnQgeyBMaXN0ZW5MaXZlQ2xpZW50IH0gZnJvbSBcIi4vTGlzdGVuTGl2ZUNsaWVudFwiO1xuaW1wb3J0IHsgTGlzdGVuUmVzdENsaWVudCB9IGZyb20gXCIuL0xpc3RlblJlc3RDbGllbnRcIjtcbi8qKlxuICogVGhlIGBMaXN0ZW5DbGllbnRgIGNsYXNzIGV4dGVuZHMgdGhlIGBBYnN0cmFjdENsaWVudGAgY2xhc3MgYW5kIHByb3ZpZGVzIGFjY2VzcyB0byB0aGUgXCJsaXN0ZW5cIiBuYW1lc3BhY2UuXG4gKiBJdCBleHBvc2VzIHR3byBtZXRob2RzOlxuICpcbiAqIDEuIGBwcmVyZWNvcmRlZCgpYDogUmV0dXJucyBhIGBMaXN0ZW5SZXN0Q2xpZW50YCBpbnN0YW5jZSBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgcHJlcmVjb3JkZWQgbGlzdGVuIEFQSS5cbiAqIDIuIGBsaXZlKHRyYW5zY3JpcHRpb25PcHRpb25zOiBMaXZlU2NoZW1hID0ge30sIGVuZHBvaW50ID0gXCI6dmVyc2lvbi9saXN0ZW5cIilgOiBSZXR1cm5zIGEgYExpc3RlbkxpdmVDbGllbnRgIGluc3RhbmNlIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBsaXZlIGxpc3RlbiBBUEksIHdpdGggdGhlIHByb3ZpZGVkIHRyYW5zY3JpcHRpb24gb3B0aW9ucyBhbmQgZW5kcG9pbnQuXG4gKi9cbmV4cG9ydCBjbGFzcyBMaXN0ZW5DbGllbnQgZXh0ZW5kcyBBYnN0cmFjdENsaWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZXNwYWNlID0gXCJsaXN0ZW5cIjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGBMaXN0ZW5SZXN0Q2xpZW50YCBpbnN0YW5jZSBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgcHJlcmVjb3JkZWQgbGlzdGVuIEFQSS5cbiAgICAgKi9cbiAgICBnZXQgcHJlcmVjb3JkZWQoKSB7XG4gICAgICAgIHJldHVybiBuZXcgTGlzdGVuUmVzdENsaWVudCh0aGlzLm9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgYExpc3RlbkxpdmVDbGllbnRgIGluc3RhbmNlIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBsaXZlIGxpc3RlbiBBUEksIHdpdGggdGhlIHByb3ZpZGVkIHRyYW5zY3JpcHRpb24gb3B0aW9ucyBhbmQgZW5kcG9pbnQuXG4gICAgICogQHBhcmFtIHtMaXZlU2NoZW1hfSBbdHJhbnNjcmlwdGlvbk9wdGlvbnM9e31dIC0gVGhlIHRyYW5zY3JpcHRpb24gb3B0aW9ucyB0byB1c2UgZm9yIHRoZSBsaXZlIGxpc3RlbiBBUEkuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtlbmRwb2ludD1cIjp2ZXJzaW9uL2xpc3RlblwiXSAtIFRoZSBlbmRwb2ludCB0byB1c2UgZm9yIHRoZSBsaXZlIGxpc3RlbiBBUEkuXG4gICAgICogQHJldHVybnMge0xpc3RlbkxpdmVDbGllbnR9IC0gQSBgTGlzdGVuTGl2ZUNsaWVudGAgaW5zdGFuY2UgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGxpdmUgbGlzdGVuIEFQSS5cbiAgICAgKi9cbiAgICBsaXZlKHRyYW5zY3JpcHRpb25PcHRpb25zID0ge30sIGVuZHBvaW50ID0gXCI6dmVyc2lvbi9saXN0ZW5cIikge1xuICAgICAgICByZXR1cm4gbmV3IExpc3RlbkxpdmVDbGllbnQodGhpcy5vcHRpb25zLCB0cmFuc2NyaXB0aW9uT3B0aW9ucywgZW5kcG9pbnQpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxpc3RlbkNsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiQWJzdHJhY3RDbGllbnQiLCJMaXN0ZW5MaXZlQ2xpZW50IiwiTGlzdGVuUmVzdENsaWVudCIsIkxpc3RlbkNsaWVudCIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwibmFtZXNwYWNlIiwicHJlcmVjb3JkZWQiLCJvcHRpb25zIiwibGl2ZSIsInRyYW5zY3JpcHRpb25PcHRpb25zIiwiZW5kcG9pbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenLiveClient.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/ListenLiveClient.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListenLiveClient: () => (/* binding */ ListenLiveClient),\n/* harmony export */   LiveClient: () => (/* binding */ ListenLiveClient)\n/* harmony export */ });\n/* harmony import */ var _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractLiveClient.js\");\n/* harmony import */ var _lib_enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/enums */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTranscriptionEvents.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n\n\n\n/**\n * The `ListenLiveClient` class extends the `AbstractLiveClient` class and provides functionality for setting up and managing a WebSocket connection for live transcription.\n *\n * The constructor takes in `DeepgramClientOptions` and an optional `LiveSchema` object, as well as an optional `endpoint` string. It then calls the `connect` method of the parent `AbstractLiveClient` class to establish the WebSocket connection.\n *\n * The `setupConnection` method is responsible for handling the various events that can occur on the WebSocket connection, such as opening, closing, and receiving messages. It sets up event handlers for these events and emits the appropriate events based on the message type.\n *\n * The `configure` method allows you to send additional configuration options to the connected session, such as enabling numerals.\n *\n * The `keepAlive` method sends a \"KeepAlive\" message to the server to maintain the connection.\n *\n * The `requestClose` method requests the server to close the connection.\n *\n * The `finish` method is deprecated as of version 3.4 and will be removed in version 4.0. Use `requestClose` instead.\n */ class ListenLiveClient extends _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_0__.AbstractLiveClient {\n    /**\n     * Constructs a new `ListenLiveClient` instance with the provided options.\n     *\n     * @param options - The `DeepgramClientOptions` to use for the client connection.\n     * @param transcriptionOptions - An optional `LiveSchema` object containing additional configuration options for the live transcription.\n     * @param endpoint - An optional string representing the WebSocket endpoint to connect to. Defaults to `:version/listen`.\n     */ constructor(options, transcriptionOptions = {}, endpoint = \":version/listen\"){\n        var _a, _b;\n        super(options);\n        this.namespace = \"listen\";\n        if (((_a = transcriptionOptions.keyterm) === null || _a === void 0 ? void 0 : _a.length) && !((_b = transcriptionOptions.model) === null || _b === void 0 ? void 0 : _b.startsWith(\"nova-3\"))) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_1__.DeepgramError(\"Keyterms are only supported with the Nova 3 models.\");\n        }\n        this.connect(transcriptionOptions, endpoint);\n    }\n    /**\n     * Sets up the connection event handlers.\n     * This method is responsible for handling the various events that can occur on the WebSocket connection, such as opening, closing, and receiving messages.\n     * - When the connection is opened, it emits the `LiveTranscriptionEvents.Open` event.\n     * - When the connection is closed, it emits the `LiveTranscriptionEvents.Close` event.\n     * - When an error occurs on the connection, it emits the `LiveTranscriptionEvents.Error` event.\n     * - When a message is received, it parses the message and emits the appropriate event based on the message type, such as `LiveTranscriptionEvents.Metadata`, `LiveTranscriptionEvents.Transcript`, `LiveTranscriptionEvents.UtteranceEnd`, and `LiveTranscriptionEvents.SpeechStarted`.\n     */ setupConnection() {\n        if (this.conn) {\n            this.conn.onopen = ()=>{\n                this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Open, this);\n            };\n            this.conn.onclose = (event)=>{\n                this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Close, event);\n            };\n            this.conn.onerror = (event)=>{\n                this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Error, event);\n            };\n            this.conn.onmessage = (event)=>{\n                try {\n                    const data = JSON.parse(event.data.toString());\n                    if (data.type === _lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Metadata) {\n                        this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Metadata, data);\n                    } else if (data.type === _lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Transcript) {\n                        this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Transcript, data);\n                    } else if (data.type === _lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.UtteranceEnd) {\n                        this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.UtteranceEnd, data);\n                    } else if (data.type === _lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.SpeechStarted) {\n                        this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.SpeechStarted, data);\n                    } else {\n                        this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Unhandled, data);\n                    }\n                } catch (error) {\n                    this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_2__.LiveTranscriptionEvents.Error, {\n                        event,\n                        message: \"Unable to parse `data` as JSON.\",\n                        error\n                    });\n                }\n            };\n        }\n    }\n    /**\n     * Sends additional config to the connected session.\n     *\n     * @param config - The configuration options to apply to the LiveClient.\n     * @param config.numerals - We currently only support numerals.\n     */ configure(config) {\n        this.send(JSON.stringify({\n            type: \"Configure\",\n            processors: config\n        }));\n    }\n    /**\n     * Sends a \"KeepAlive\" message to the server to maintain the connection.\n     */ keepAlive() {\n        this.send(JSON.stringify({\n            type: \"KeepAlive\"\n        }));\n    }\n    /**\n     * Sends a \"Finalize\" message to flush any transcription sitting in the server's buffer.\n     */ finalize() {\n        this.send(JSON.stringify({\n            type: \"Finalize\"\n        }));\n    }\n    /**\n     * @deprecated Since version 3.4. Will be removed in version 4.0. Use `requestClose` instead.\n     */ finish() {\n        this.requestClose();\n    }\n    /**\n     * Requests the server close the connection.\n     */ requestClose() {\n        this.send(JSON.stringify({\n            type: \"CloseStream\"\n        }));\n    }\n}\n //# sourceMappingURL=ListenLiveClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenLiveClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenRestClient.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/ListenRestClient.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListenRestClient: () => (/* binding */ ListenRestClient),\n/* harmony export */   PrerecordedClient: () => (/* binding */ ListenRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/helpers */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * The `ListenRestClient` class extends the `AbstractRestClient` class and provides methods for transcribing audio from URLs or files using the Deepgram API.\n *\n * The `transcribeUrl` method is used to transcribe audio from a URL synchronously. It takes a `UrlSource` object as the source, an optional `PrerecordedSchema` object as options, and an optional endpoint string. It returns a `DeepgramResponse` object containing the transcription result or an error.\n *\n * The `transcribeFile` method is used to transcribe audio from a file synchronously. It takes a `FileSource` object as the source, an optional `PrerecordedSchema` object as options, and an optional endpoint string. It returns a `DeepgramResponse` object containing the transcription result or an error.\n *\n * The `transcribeUrlCallback` method is used to transcribe audio from a URL asynchronously. It takes a `UrlSource` object as the source, a `CallbackUrl` object as the callback, an optional `PrerecordedSchema` object as options, and an optional endpoint string. It returns a `DeepgramResponse` object containing the transcription result or an error.\n *\n * The `transcribeFileCallback` method is used to transcribe audio from a file asynchronously. It takes a `FileSource` object as the source, a `CallbackUrl` object as the callback, an optional `PrerecordedSchema` object as options, and an optional endpoint string. It returns a `DeepgramResponse` object containing the transcription result or an error.\n */ class ListenRestClient extends _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__.AbstractRestClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"listen\";\n    }\n    /**\n     * Transcribes audio from a URL synchronously.\n     *\n     * @param source - The URL source object containing the audio URL to transcribe.\n     * @param options - An optional `PrerecordedSchema` object containing additional options for the transcription.\n     * @param endpoint - An optional endpoint string to use for the transcription request.\n     * @returns A `DeepgramResponse` object containing the transcription result or an error.\n     */ transcribeUrl(source, options, endpoint = \":version/listen\") {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isUrlSource)(source)) {\n                    body = JSON.stringify(source);\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown transcription source type\");\n                }\n                if (options !== undefined && \"callback\" in options) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Callback cannot be provided as an option to a synchronous transcription. Use `transcribeUrlCallback` or `transcribeFileCallback` instead.\");\n                }\n                if (((_a = options === null || options === void 0 ? void 0 : options.keyterm) === null || _a === void 0 ? void 0 : _a.length) && !((_b = options.model) === null || _b === void 0 ? void 0 : _b.startsWith(\"nova-3\"))) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Keyterms are only supported with the Nova 3 models.\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign({}, options));\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Transcribes audio from a file asynchronously.\n     *\n     * @param source - The file source object containing the audio file to transcribe.\n     * @param options - An optional `PrerecordedSchema` object containing additional options for the transcription.\n     * @param endpoint - An optional endpoint string to use for the transcription request.\n     * @returns A `DeepgramResponse` object containing the transcription result or an error.\n     */ transcribeFile(source, options, endpoint = \":version/listen\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isFileSource)(source)) {\n                    body = source;\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown transcription source type\");\n                }\n                if (options !== undefined && \"callback\" in options) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Callback cannot be provided as an option to a synchronous transcription. Use `transcribeUrlCallback` or `transcribeFileCallback` instead.\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign({}, options));\n                const result = yield this.post(requestUrl, body, {\n                    headers: {\n                        \"Content-Type\": \"deepgram/audio+video\"\n                    }\n                }).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Transcribes audio from a URL asynchronously.\n     *\n     * @param source - The URL source object containing the audio file to transcribe.\n     * @param callback - The callback URL to receive the transcription result.\n     * @param options - An optional `PrerecordedSchema` object containing additional options for the transcription.\n     * @param endpoint - An optional endpoint string to use for the transcription request.\n     * @returns A `DeepgramResponse` object containing the transcription result or an error.\n     */ transcribeUrlCallback(source, callback, options, endpoint = \":version/listen\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isUrlSource)(source)) {\n                    body = JSON.stringify(source);\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown transcription source type\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign(Object.assign({}, options), {\n                    callback: callback.toString()\n                }));\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Transcribes audio from a file asynchronously.\n     *\n     * @param source - The file source object containing the audio file to transcribe.\n     * @param callback - The callback URL to receive the transcription result.\n     * @param options - An optional `PrerecordedSchema` object containing additional options for the transcription.\n     * @param endpoint - An optional endpoint string to use for the transcription request.\n     * @returns A `DeepgramResponse` object containing the transcription result or an error.\n     */ transcribeFileCallback(source, callback, options, endpoint = \":version/listen\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isFileSource)(source)) {\n                    body = source;\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown transcription source type\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign(Object.assign({}, options), {\n                    callback: callback.toString()\n                }));\n                const result = yield this.post(requestUrl, body, {\n                    headers: {\n                        \"Content-Type\": \"deepgram/audio+video\"\n                    }\n                }).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n}\n //# sourceMappingURL=ListenRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ManageRestClient.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/ManageRestClient.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ManageClient: () => (/* binding */ ManageRestClient),\n/* harmony export */   ManageRestClient: () => (/* binding */ ManageRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * The `ManageRestClient` class provides a set of methods for interacting with the Deepgram Manage API. It extends the `AbstractRestClient` class and provides functionality for managing projects, keys, members, invites, usage, balances, and models.\n *\n * The class has a `namespace` property that is set to `\"manage\"`, which is used in the construction of the request URLs.\n *\n * The methods in this class include:\n * - `getTokenDetails`: Retrieves the details of the current authentication token.\n * - `getProjects`: Retrieves a list of all projects associated with the authenticated account.\n * - `getProject`: Retrieves the details of a specific project.\n * - `updateProject`: Updates the details of a specific project.\n * - `deleteProject`: Deletes a specific project.\n * - `getProjectKeys`: Retrieves a list of all API keys associated with a specific project.\n * - `getProjectKey`: Retrieves the details of a specific API key.\n * - `createProjectKey`: Creates a new API key for a specific project.\n * - `deleteProjectKey`: Deletes a specific API key.\n * - `getProjectMembers`: Retrieves a list of all members associated with a specific project.\n * - `removeProjectMember`: Removes a specific member from a project.\n * - `getProjectMemberScopes`: Retrieves the scopes associated with a specific project member.\n * - `updateProjectMemberScope`: Updates the scopes associated with a specific project member.\n * - `getProjectInvites`: Retrieves a list of all pending invitations for a specific project.\n * - `sendProjectInvite`: Sends a new invitation to a specific email address for a project.\n * - `deleteProjectInvite`: Deletes a specific invitation for a project.\n * - `leaveProject`: Removes the authenticated user from a specific project.\n * - `getProjectUsageRequests`: Retrieves a list of all usage requests for a specific project.\n * - `getProjectUsageRequest`: Retrieves the details of a specific usage request.\n * - `getProjectUsageSummary`: Retrieves a summary of the usage for a specific project.\n * - `getProjectUsageFields`: Retrieves a list of the available usage fields for a specific project.\n * - `getProjectBalances`: Retrieves a list of all balances associated with a specific project.\n * - `getProjectBalance`: Retrieves the details of a specific balance for a project.\n * - `getAllModels`: Retrieves all models for a project.\n * - `getModel`: Retrieves a specific model.\n */ class ManageRestClient extends _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__.AbstractRestClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"manage\";\n    }\n    /**\n     * Retrieves the details of the current authentication token.\n     *\n     * @returns A promise that resolves to an object containing the token details, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/docs/authenticating#test-request\n     */ getTokenDetails(endpoint = \":version/auth/token\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint);\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves a list of all projects associated with the authenticated user.\n     *\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects\".\n     * @returns A promise that resolves to an object containing the list of projects, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/get-projects\n     */ getProjects(endpoint = \":version/projects\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint);\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of a specific project associated with the authenticated user.\n     *\n     * @param projectId - The ID of the project to retrieve.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId\".\n     * @returns A promise that resolves to an object containing the project details, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/get-project\n     */ getProject(projectId, endpoint = \":version/projects/:projectId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates an existing project associated with the authenticated user.\n     *\n     * @param projectId - The ID of the project to update.\n     * @param options - An object containing the updated project details.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId\".\n     * @returns A promise that resolves to an object containing the response message, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/update-project\n     */ updateProject(projectId, options, endpoint = \":version/projects/:projectId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                }, options);\n                const body = JSON.stringify(options);\n                const result = yield this.patch(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing project associated with the authenticated user.\n     *\n     * @param projectId - The ID of the project to delete.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId\".\n     * @returns A promise that resolves to an object containing the response message, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/delete-project\n     */ deleteProject(projectId, endpoint = \":version/projects/:projectId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                yield this.delete(requestUrl);\n                return {\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves a list of project keys associated with the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve the keys for.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/keys\".\n     * @returns A promise that resolves to an object containing the list of project keys, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/list-keys\n     */ getProjectKeys(projectId, endpoint = \":version/projects/:projectId/keys\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves a specific project key associated with the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve the key for.\n     * @param keyId - The ID of the project key to retrieve.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/keys/:keyId\".\n     * @returns A promise that resolves to an object containing the project key, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/get-key\n     */ getProjectKey(projectId, keyId, endpoint = \":version/projects/:projectId/keys/:keyId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    keyId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new project key for the specified project.\n     *\n     * @param projectId - The ID of the project to create the key for.\n     * @param options - An object containing the options for creating the project key.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/keys\".\n     * @returns A promise that resolves to an object containing the created project key, or an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/create-key\n     */ createProjectKey(projectId, options, endpoint = \":version/projects/:projectId/keys\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                }, options);\n                const body = JSON.stringify(options);\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes the specified project key.\n     *\n     * @param projectId - The ID of the project the key belongs to.\n     * @param keyId - The ID of the key to delete.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/keys/:keyId\".\n     * @returns A promise that resolves to an object containing a null result and an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/delete-key\n     */ deleteProjectKey(projectId, keyId, endpoint = \":version/projects/:projectId/keys/:keyId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    keyId\n                });\n                yield this.delete(requestUrl);\n                return {\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the members of the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve members for.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/members\".\n     * @returns A promise that resolves to an object containing the project members and an error object if an error occurs.\n     * @see https://developers.deepgram.com/reference/get-members\n     */ getProjectMembers(projectId, endpoint = \":version/projects/:projectId/members\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes a member from the specified project.\n     *\n     * @param projectId - The ID of the project to remove the member from.\n     * @param memberId - The ID of the member to remove.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/members/:memberId\".\n     * @returns A promise that resolves to an object containing a null error if the operation was successful, or an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/remove-member\n     */ removeProjectMember(projectId, memberId, endpoint = \":version/projects/:projectId/members/:memberId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    memberId\n                });\n                yield this.delete(requestUrl);\n                return {\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the scopes for the specified project member.\n     *\n     * @param projectId - The ID of the project to retrieve the member scopes for.\n     * @param memberId - The ID of the member to retrieve the scopes for.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/members/:memberId/scopes\".\n     * @returns A promise that resolves to an object containing the retrieved scopes or an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/get-member-scopes\n     */ getProjectMemberScopes(projectId, memberId, endpoint = \":version/projects/:projectId/members/:memberId/scopes\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    memberId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the scopes for the specified project member.\n     *\n     * @param projectId - The ID of the project to update the member scopes for.\n     * @param memberId - The ID of the member to update the scopes for.\n     * @param options - An object containing the new scopes to apply to the member.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/members/:memberId/scopes\".\n     * @returns A promise that resolves to an object containing the result of the update operation or an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/update-scope\n     */ updateProjectMemberScope(projectId, memberId, options, endpoint = \":version/projects/:projectId/members/:memberId/scopes\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    memberId\n                }, options);\n                const body = JSON.stringify(options);\n                const result = yield this.put(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the project invites for the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve the invites for.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/invites\".\n     * @returns A promise that resolves to an object containing the result of the get operation or an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/list-invites\n     */ getProjectInvites(projectId, endpoint = \":version/projects/:projectId/invites\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends a project invite to the specified email addresses.\n     *\n     * @param projectId - The ID of the project to send the invite for.\n     * @param options - An object containing the email addresses to invite and any additional options.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/invites\".\n     * @returns A promise that resolves to an object containing the result of the post operation or an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/send-invites\n     */ sendProjectInvite(projectId, options, endpoint = \":version/projects/:projectId/invites\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                }, options);\n                const body = JSON.stringify(options);\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes a project invite for the specified email address.\n     *\n     * @param projectId - The ID of the project to delete the invite for.\n     * @param email - The email address of the invite to delete.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/invites/:email\".\n     * @returns A promise that resolves to an object containing a null result and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/delete-invite\n     */ deleteProjectInvite(projectId, email, endpoint = \":version/projects/:projectId/invites/:email\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    email\n                });\n                yield this.delete(requestUrl).then((result)=>result.json());\n                return {\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Leaves the specified project.\n     *\n     * @param projectId - The ID of the project to leave.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/leave\".\n     * @returns A promise that resolves to an object containing a null result and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/leave-project\n     */ leaveProject(projectId, endpoint = \":version/projects/:projectId/leave\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const result = yield this.delete(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves a list of usage requests for the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve usage requests for.\n     * @param options - An object containing options to filter the usage requests, such as pagination parameters.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/requests\".\n     * @returns A promise that resolves to an object containing the list of usage requests and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/get-all-requests\n     */ getProjectUsageRequests(projectId, options, endpoint = \":version/projects/:projectId/requests\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                }, options);\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of a specific usage request for the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve the usage request for.\n     * @param requestId - The ID of the usage request to retrieve.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/requests/:requestId\".\n     * @returns A promise that resolves to an object containing the usage request details and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/get-request\n     */ getProjectUsageRequest(projectId, requestId, endpoint = \":version/projects/:projectId/requests/:requestId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    requestId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the usage summary for the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve the usage summary for.\n     * @param options - An object containing optional parameters for the request, such as filters and pagination options.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/usage\".\n     * @returns A promise that resolves to an object containing the usage summary and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/get-usage\n     */ getProjectUsageSummary(projectId, options, endpoint = \":version/projects/:projectId/usage\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                }, options);\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the usage fields for the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve the usage fields for.\n     * @param options - An object containing optional parameters for the request, such as filters and pagination options.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/usage/fields\".\n     * @returns A promise that resolves to an object containing the usage fields and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/get-fields\n     */ getProjectUsageFields(projectId, options, endpoint = \":version/projects/:projectId/usage/fields\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                }, options);\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the balances for the specified project.\n     *\n     * @param projectId - The ID of the project to retrieve the balances for.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/balances\".\n     * @returns A promise that resolves to an object containing the project balances and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/get-all-balances\n     */ getProjectBalances(projectId, endpoint = \":version/projects/:projectId/balances\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the balance for the specified project and balance ID.\n     *\n     * @param projectId - The ID of the project to retrieve the balance for.\n     * @param balanceId - The ID of the balance to retrieve.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/projects/:projectId/balances/:balanceId\".\n     * @returns A promise that resolves to an object containing the project balance and an error object if an error occurred.\n     * @see https://developers.deepgram.com/reference/get-balance\n     */ getProjectBalance(projectId, balanceId, endpoint = \":version/projects/:projectId/balances/:balanceId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    balanceId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves all models for a given project.\n     *\n     * @param projectId - The ID of the project.\n     * @param endpoint - (optional) The endpoint URL for retrieving models. Defaults to \":version/projects/:projectId/models\".\n     * @returns A promise that resolves to a DeepgramResponse containing the GetModelsResponse.\n     * @example\n     * ```typescript\n     * import { createClient } from \"@deepgram/sdk\";\n     *\n     * const deepgram = createClient(DEEPGRAM_API_KEY);\n     * const { result: models, error } = deepgram.manage.getAllModels(\"projectId\");\n     *\n     * if (error) {\n     *   console.error(error);\n     * } else {\n     *   console.log(models);\n     * }\n     * ```\n     */ getAllModels(projectId, options = {}, endpoint = \":version/projects/:projectId/models\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                }, options);\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves a model from the specified project.\n     *\n     * @param projectId - The ID of the project.\n     * @param modelId - The ID of the model.\n     * @param endpoint - (optional) The endpoint URL for the request. Default value is \":version/projects/:projectId/models/:modelId\".\n     * @returns A promise that resolves to a DeepgramResponse containing the GetModelResponse.\n     * @example\n     * ```typescript\n     * import { createClient } from \"@deepgram/sdk\";\n     *\n     * const deepgram = createClient(DEEPGRAM_API_KEY);\n     * const { result: model, error } = deepgram.models.getModel(\"projectId\", \"modelId\");\n     *\n     * if (error) {\n     *   console.error(error);\n     * } else {\n     *   console.log(model);\n     * }\n     * ```\n     */ getModel(projectId, modelId, endpoint = \":version/projects/:projectId/models/:modelId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    modelId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n}\n //# sourceMappingURL=ManageRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ManageRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ModelsRestClient.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/ModelsRestClient.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModelsRestClient: () => (/* binding */ ModelsRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * Represents a REST client for interacting with the Deepgram API.\n *\n * The `ModelsRestClient` class provides methods for interacting with the Deepgram API to retrieve information about available models.\n * @extends AbstractRestClient\n */ class ModelsRestClient extends _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__.AbstractRestClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"models\";\n    }\n    /**\n     * Retrieves a list of all available models.\n     *\n     * @param endpoint - (optional) The endpoint to request.\n     * @returns A promise that resolves with the response from the Deepgram API.\n     * @example\n     * ```typescript\n     * import { createClient } from \"@deepgram/sdk\";\n     *\n     * const deepgram = createClient(DEEPGRAM_API_KEY);\n     * const { result: models, error } = deepgram.models.getAll();\n     *\n     * if (error) {\n     *   console.error(error);\n     * } else {\n     *   console.log(models);\n     * }\n     * ```\n     */ getAll(endpoint = \":version/models\", options = {}) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {}, options);\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves information about a specific model.\n     *\n     * @param modelId - The UUID of the model to retrieve.\n     * @param endpoint - (optional) The endpoint to request.\n     * @returns A promise that resolves with the response from the Deepgram API.\n     * @example\n     * ```typescript\n     * import { createClient } from \"@deepgram/sdk\";\n     *\n     * const deepgram = createClient(DEEPGRAM_API_KEY);\n     * const { result: model, error } = deepgram.models.getModel(\"modelId\");\n     *\n     * if (error) {\n     *   console.error(error);\n     * } else {\n     *   console.log(model);\n     * }\n     * ```\n     */ getModel(modelId, endpoint = \":version/models/:modelId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    modelId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n} //# sourceMappingURL=ModelsRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9Nb2RlbHNSZXN0Q2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUlBLFlBQVksU0FBSyxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFNBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDbkYsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDMUYsU0FBU0MsU0FBU1IsS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFNBQVMsQ0FBQyxRQUFRLENBQUNFO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDN0YsU0FBU0YsS0FBS0ksTUFBTTtZQUFJQSxPQUFPQyxJQUFJLEdBQUdULFFBQVFRLE9BQU9ULEtBQUssSUFBSUQsTUFBTVUsT0FBT1QsS0FBSyxFQUFFVyxJQUFJLENBQUNQLFdBQVdJO1FBQVc7UUFDN0dILEtBQUssQ0FBQ1AsWUFBWUEsVUFBVWMsS0FBSyxDQUFDakIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUNnRDtBQUNVO0FBQzFEOzs7OztDQUtDLEdBQ00sTUFBTVMseUJBQXlCRCxtRUFBa0JBO0lBQ3BERSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsU0FBUyxHQUFHO0lBQ3JCO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQWtCQyxHQUNEQyxPQUFPQyxXQUFXLGlCQUFpQixFQUFFQyxVQUFVLENBQUMsQ0FBQyxFQUFFO1FBQy9DLE9BQU8zQixVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUk7Z0JBQ0EsTUFBTTRCLGFBQWEsSUFBSSxDQUFDQyxhQUFhLENBQUNILFVBQVUsQ0FBQyxHQUFHQztnQkFDcEQsTUFBTVosU0FBUyxNQUFNLElBQUksQ0FBQ2UsR0FBRyxDQUFDRixZQUFZWCxJQUFJLENBQUMsQ0FBQ0YsU0FBV0EsT0FBT2dCLElBQUk7Z0JBQ3RFLE9BQU87b0JBQUVoQjtvQkFBUWlCLE9BQU87Z0JBQUs7WUFDakMsRUFDQSxPQUFPQSxPQUFPO2dCQUNWLElBQUliLDREQUFlQSxDQUFDYSxRQUFRO29CQUN4QixPQUFPO3dCQUFFakIsUUFBUTt3QkFBTWlCO29CQUFNO2dCQUNqQztnQkFDQSxNQUFNQTtZQUNWO1FBQ0o7SUFDSjtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBbUJDLEdBQ0RDLFNBQVNDLE9BQU8sRUFBRVIsV0FBVywwQkFBMEIsRUFBRTtRQUNyRCxPQUFPMUIsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxJQUFJO2dCQUNBLE1BQU00QixhQUFhLElBQUksQ0FBQ0MsYUFBYSxDQUFDSCxVQUFVO29CQUFFUTtnQkFBUTtnQkFDMUQsTUFBTW5CLFNBQVMsTUFBTSxJQUFJLENBQUNlLEdBQUcsQ0FBQ0YsWUFBWVgsSUFBSSxDQUFDLENBQUNGLFNBQVdBLE9BQU9nQixJQUFJO2dCQUN0RSxPQUFPO29CQUFFaEI7b0JBQVFpQixPQUFPO2dCQUFLO1lBQ2pDLEVBQ0EsT0FBT0EsT0FBTztnQkFDVixJQUFJYiw0REFBZUEsQ0FBQ2EsUUFBUTtvQkFDeEIsT0FBTzt3QkFBRWpCLFFBQVE7d0JBQU1pQjtvQkFBTTtnQkFDakM7Z0JBQ0EsTUFBTUE7WUFDVjtRQUNKO0lBQ0o7QUFDSixFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbGwtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9Nb2RlbHNSZXN0Q2xpZW50LmpzPzhjZDQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBpc0RlZXBncmFtRXJyb3IgfSBmcm9tIFwiLi4vbGliL2Vycm9yc1wiO1xuaW1wb3J0IHsgQWJzdHJhY3RSZXN0Q2xpZW50IH0gZnJvbSBcIi4vQWJzdHJhY3RSZXN0Q2xpZW50XCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSBSRVNUIGNsaWVudCBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgRGVlcGdyYW0gQVBJLlxuICpcbiAqIFRoZSBgTW9kZWxzUmVzdENsaWVudGAgY2xhc3MgcHJvdmlkZXMgbWV0aG9kcyBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgRGVlcGdyYW0gQVBJIHRvIHJldHJpZXZlIGluZm9ybWF0aW9uIGFib3V0IGF2YWlsYWJsZSBtb2RlbHMuXG4gKiBAZXh0ZW5kcyBBYnN0cmFjdFJlc3RDbGllbnRcbiAqL1xuZXhwb3J0IGNsYXNzIE1vZGVsc1Jlc3RDbGllbnQgZXh0ZW5kcyBBYnN0cmFjdFJlc3RDbGllbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLm5hbWVzcGFjZSA9IFwibW9kZWxzXCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIGxpc3Qgb2YgYWxsIGF2YWlsYWJsZSBtb2RlbHMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZW5kcG9pbnQgLSAob3B0aW9uYWwpIFRoZSBlbmRwb2ludCB0byByZXF1ZXN0LlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHJlc3BvbnNlIGZyb20gdGhlIERlZXBncmFtIEFQSS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tIFwiQGRlZXBncmFtL3Nka1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZGVlcGdyYW0gPSBjcmVhdGVDbGllbnQoREVFUEdSQU1fQVBJX0tFWSk7XG4gICAgICogY29uc3QgeyByZXN1bHQ6IG1vZGVscywgZXJyb3IgfSA9IGRlZXBncmFtLm1vZGVscy5nZXRBbGwoKTtcbiAgICAgKlxuICAgICAqIGlmIChlcnJvcikge1xuICAgICAqICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICogfSBlbHNlIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKG1vZGVscyk7XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGdldEFsbChlbmRwb2ludCA9IFwiOnZlcnNpb24vbW9kZWxzXCIsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0VXJsID0gdGhpcy5nZXRSZXF1ZXN0VXJsKGVuZHBvaW50LCB7fSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0geWllbGQgdGhpcy5nZXQocmVxdWVzdFVybCkudGhlbigocmVzdWx0KSA9PiByZXN1bHQuanNvbigpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyByZXN1bHQsIGVycm9yOiBudWxsIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNEZWVwZ3JhbUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IG51bGwsIGVycm9yIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgbW9kZWwuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbW9kZWxJZCAtIFRoZSBVVUlEIG9mIHRoZSBtb2RlbCB0byByZXRyaWV2ZS5cbiAgICAgKiBAcGFyYW0gZW5kcG9pbnQgLSAob3B0aW9uYWwpIFRoZSBlbmRwb2ludCB0byByZXF1ZXN0LlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHJlc3BvbnNlIGZyb20gdGhlIERlZXBncmFtIEFQSS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tIFwiQGRlZXBncmFtL3Nka1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZGVlcGdyYW0gPSBjcmVhdGVDbGllbnQoREVFUEdSQU1fQVBJX0tFWSk7XG4gICAgICogY29uc3QgeyByZXN1bHQ6IG1vZGVsLCBlcnJvciB9ID0gZGVlcGdyYW0ubW9kZWxzLmdldE1vZGVsKFwibW9kZWxJZFwiKTtcbiAgICAgKlxuICAgICAqIGlmIChlcnJvcikge1xuICAgICAqICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICogfSBlbHNlIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKG1vZGVsKTtcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZ2V0TW9kZWwobW9kZWxJZCwgZW5kcG9pbnQgPSBcIjp2ZXJzaW9uL21vZGVscy86bW9kZWxJZFwiKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlcXVlc3RVcmwgPSB0aGlzLmdldFJlcXVlc3RVcmwoZW5kcG9pbnQsIHsgbW9kZWxJZCB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB5aWVsZCB0aGlzLmdldChyZXF1ZXN0VXJsKS50aGVuKChyZXN1bHQpID0+IHJlc3VsdC5qc29uKCkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IHJlc3VsdCwgZXJyb3I6IG51bGwgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChpc0RlZXBncmFtRXJyb3IoZXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHJlc3VsdDogbnVsbCwgZXJyb3IgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1vZGVsc1Jlc3RDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsImlzRGVlcGdyYW1FcnJvciIsIkFic3RyYWN0UmVzdENsaWVudCIsIk1vZGVsc1Jlc3RDbGllbnQiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsIm5hbWVzcGFjZSIsImdldEFsbCIsImVuZHBvaW50Iiwib3B0aW9ucyIsInJlcXVlc3RVcmwiLCJnZXRSZXF1ZXN0VXJsIiwiZ2V0IiwianNvbiIsImVycm9yIiwiZ2V0TW9kZWwiLCJtb2RlbElkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ModelsRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ReadRestClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/ReadRestClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadClient: () => (/* binding */ ReadRestClient),\n/* harmony export */   ReadRestClient: () => (/* binding */ ReadRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/helpers */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * The `ReadRestClient` class extends the `AbstractRestClient` class and provides methods for analyzing audio sources synchronously and asynchronously.\n *\n * The `analyzeUrl` method analyzes a URL-based audio source synchronously, returning a promise that resolves to the analysis response or an error.\n *\n * The `analyzeText` method analyzes a text-based audio source synchronously, returning a promise that resolves to the analysis response or an error.\n *\n * The `analyzeUrlCallback` method analyzes a URL-based audio source asynchronously, returning a promise that resolves to the analysis response or an error.\n *\n * The `analyzeTextCallback` method analyzes a text-based audio source asynchronously, returning a promise that resolves to the analysis response or an error.\n */ class ReadRestClient extends _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__.AbstractRestClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"read\";\n    }\n    /**\n     * Analyzes a URL-based audio source synchronously.\n     *\n     * @param source - The URL-based audio source to analyze.\n     * @param options - Optional analysis options.\n     * @param endpoint - The API endpoint to use for the analysis. Defaults to \":version/read\".\n     * @returns A promise that resolves to the analysis response, or an error if the analysis fails.\n     */ analyzeUrl(source, options, endpoint = \":version/read\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isUrlSource)(source)) {\n                    body = JSON.stringify(source);\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown source type\");\n                }\n                if (options !== undefined && \"callback\" in options) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Callback cannot be provided as an option to a synchronous transcription. Use `analyzeUrlCallback` or `analyzeTextCallback` instead.\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign({}, options));\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Analyzes a text-based audio source synchronously.\n     *\n     * @param source - The text-based audio source to analyze.\n     * @param options - Optional analysis options.\n     * @param endpoint - The API endpoint to use for the analysis. Defaults to \":version/read\".\n     * @returns A promise that resolves to the analysis response, or an error if the analysis fails.\n     */ analyzeText(source, options, endpoint = \":version/read\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isTextSource)(source)) {\n                    body = JSON.stringify(source);\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown source type\");\n                }\n                if (options !== undefined && \"callback\" in options) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Callback cannot be provided as an option to a synchronous requests. Use `analyzeUrlCallback` or `analyzeTextCallback` instead.\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign({}, options));\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Analyzes a URL-based audio source asynchronously.\n     *\n     * @param source - The URL-based audio source to analyze.\n     * @param callback - The URL to call back with the analysis results.\n     * @param options - Optional analysis options.\n     * @param endpoint - The API endpoint to use for the analysis. Defaults to \":version/read\".\n     * @returns A promise that resolves to the analysis response, or an error if the analysis fails.\n     */ analyzeUrlCallback(source, callback, options, endpoint = \":version/read\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isUrlSource)(source)) {\n                    body = JSON.stringify(source);\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown source type\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign(Object.assign({}, options), {\n                    callback: callback.toString()\n                }));\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Analyzes a text-based audio source asynchronously.\n     *\n     * @param source - The text-based audio source to analyze.\n     * @param callback - The URL to call back with the analysis results.\n     * @param options - Optional analysis options.\n     * @param endpoint - The API endpoint to use for the analysis. Defaults to \":version/read\".\n     * @returns A promise that resolves to the analysis response, or an error if the analysis fails.\n     */ analyzeTextCallback(source, callback, options, endpoint = \":version/read\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isTextSource)(source)) {\n                    body = JSON.stringify(source);\n                } else {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown source type\");\n                }\n                const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign(Object.assign({}, options), {\n                    callback: callback.toString()\n                }));\n                const result = yield this.post(requestUrl, body, {\n                    headers: {\n                        \"Content-Type\": \"deepgram/audio+video\"\n                    }\n                }).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n}\n //# sourceMappingURL=ReadRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ReadRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SelfHostedRestClient.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/SelfHostedRestClient.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnPremClient: () => (/* binding */ SelfHostedRestClient),\n/* harmony export */   SelfHostedRestClient: () => (/* binding */ SelfHostedRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * The `SelfHostedRestClient` class extends the `AbstractRestClient` class and provides methods for interacting with the Deepgram self-hosted API.\n *\n * This class is used to list, retrieve, create, and delete self-hosted credentials for a Deepgram project.\n */ class SelfHostedRestClient extends _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__.AbstractRestClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"selfhosted\";\n    }\n    /**\n     * Lists the self-hosted credentials for a Deepgram project.\n     *\n     * @param projectId - The ID of the Deepgram project.\n     * @returns A promise that resolves to an object containing the list of self-hosted credentials and any error that occurred.\n     * @see https://developers.deepgram.com/reference/list-credentials\n     */ listCredentials(projectId, endpoint = \":version/projects/:projectId/onprem/distribution/credentials\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the self-hosted credentials for a specific Deepgram project and credentials ID.\n     *\n     * @param projectId - The ID of the Deepgram project.\n     * @param credentialsId - The ID of the self-hosted credentials to retrieve.\n     * @returns A promise that resolves to an object containing the self-hosted credentials and any error that occurred.\n     * @see https://developers.deepgram.com/reference/get-credentials\n     */ getCredentials(projectId, credentialsId, endpoint = \":version/projects/:projectId/onprem/distribution/credentials/:credentialsId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    credentialsId\n                });\n                const result = yield this.get(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates self-hosted credentials for a specific Deepgram project.\n     *\n     * @param projectId - The ID of the Deepgram project.\n     * @param options - The options for creating the self-hosted credentials.\n     * @returns A promise that resolves to an object containing the created self-hosted credentials and any error that occurred.\n     * @see https://developers.deepgram.com/reference/create-credentials\n     */ createCredentials(projectId, options, endpoint = \":version/projects/:projectId/onprem/distribution/credentials\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId\n                });\n                const body = JSON.stringify(options);\n                const result = yield this.post(requestUrl, body).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes self-hosted credentials for a specific Deepgram project.\n     *\n     * @param projectId - The ID of the Deepgram project.\n     * @param credentialsId - The ID of the self-hosted credentials to delete.\n     * @returns A promise that resolves to an object containing a message response and any error that occurred.\n     * @see https://developers.deepgram.com/reference/delete-credentials\n     */ deleteCredentials(projectId, credentialsId, endpoint = \":version/projects/:projectId/onprem/distribution/credentials/:credentialsId\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const requestUrl = this.getRequestUrl(endpoint, {\n                    projectId,\n                    credentialsId\n                });\n                const result = yield this.delete(requestUrl).then((result)=>result.json());\n                return {\n                    result,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isDeepgramError)(error)) {\n                    return {\n                        result: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n}\n //# sourceMappingURL=SelfHostedRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SelfHostedRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/SpeakClient.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpeakClient: () => (/* binding */ SpeakClient)\n/* harmony export */ });\n/* harmony import */ var _AbstractClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js\");\n/* harmony import */ var _SpeakLiveClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SpeakLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakLiveClient.js\");\n/* harmony import */ var _SpeakRestClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SpeakRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakRestClient.js\");\n\n\n\n/**\n * The `SpeakClient` class extends the `AbstractClient` class and provides access to the \"speak\" namespace.\n * It exposes two methods:\n *\n * 1. `request()`: Returns a `SpeakRestClient` instance for interacting with the rest speak API.\n * 2. `live(ttsOptions: SpeakSchema = {}, endpoint = \":version/speak\")`: Returns a `SpeakLiveClient` instance for interacting with the live speak API, with the provided TTS options and endpoint.\n */ class SpeakClient extends _AbstractClient__WEBPACK_IMPORTED_MODULE_0__.AbstractClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"speak\";\n    }\n    /**\n     * Returns a `SpeakRestClient` instance for interacting with the rest speak API.\n     */ request(source, options, endpoint = \":version/speak\") {\n        const client = new _SpeakRestClient__WEBPACK_IMPORTED_MODULE_1__.SpeakRestClient(this.options);\n        return client.request(source, options, endpoint);\n    }\n    /**\n     * Returns a `SpeakLiveClient` instance for interacting with the live speak API, with the provided TTS options and endpoint.\n     * @param {SpeakSchema} [ttsOptions={}] - The TTS options to use for the live speak API.\n     * @param {string} [endpoint=\":version/speak\"] - The endpoint to use for the live speak API.\n     * @returns {SpeakLiveClient} - A `SpeakLiveClient` instance for interacting with the live speak API.\n     */ live(ttsOptions = {}, endpoint = \":version/speak\") {\n        return new _SpeakLiveClient__WEBPACK_IMPORTED_MODULE_2__.SpeakLiveClient(this.options, ttsOptions, endpoint);\n    }\n} //# sourceMappingURL=SpeakClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9TcGVha0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtEO0FBQ0U7QUFDQTtBQUNwRDs7Ozs7O0NBTUMsR0FDTSxNQUFNRyxvQkFBb0JILDJEQUFjQTtJQUMzQ0ksYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFNBQVMsR0FBRztJQUNyQjtJQUNBOztLQUVDLEdBQ0RDLFFBQVFDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxXQUFXLGdCQUFnQixFQUFFO1FBQ2xELE1BQU1DLFNBQVMsSUFBSVQsNkRBQWVBLENBQUMsSUFBSSxDQUFDTyxPQUFPO1FBQy9DLE9BQU9FLE9BQU9KLE9BQU8sQ0FBQ0MsUUFBUUMsU0FBU0M7SUFDM0M7SUFDQTs7Ozs7S0FLQyxHQUNERSxLQUFLQyxhQUFhLENBQUMsQ0FBQyxFQUFFSCxXQUFXLGdCQUFnQixFQUFFO1FBQy9DLE9BQU8sSUFBSVQsNkRBQWVBLENBQUMsSUFBSSxDQUFDUSxPQUFPLEVBQUVJLFlBQVlIO0lBQ3pEO0FBQ0osRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWxsLWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL0BkZWVwZ3JhbS9zZGsvZGlzdC9tb2R1bGUvcGFja2FnZXMvU3BlYWtDbGllbnQuanM/NmQxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdENsaWVudCB9IGZyb20gXCIuL0Fic3RyYWN0Q2xpZW50XCI7XG5pbXBvcnQgeyBTcGVha0xpdmVDbGllbnQgfSBmcm9tIFwiLi9TcGVha0xpdmVDbGllbnRcIjtcbmltcG9ydCB7IFNwZWFrUmVzdENsaWVudCB9IGZyb20gXCIuL1NwZWFrUmVzdENsaWVudFwiO1xuLyoqXG4gKiBUaGUgYFNwZWFrQ2xpZW50YCBjbGFzcyBleHRlbmRzIHRoZSBgQWJzdHJhY3RDbGllbnRgIGNsYXNzIGFuZCBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIFwic3BlYWtcIiBuYW1lc3BhY2UuXG4gKiBJdCBleHBvc2VzIHR3byBtZXRob2RzOlxuICpcbiAqIDEuIGByZXF1ZXN0KClgOiBSZXR1cm5zIGEgYFNwZWFrUmVzdENsaWVudGAgaW5zdGFuY2UgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIHJlc3Qgc3BlYWsgQVBJLlxuICogMi4gYGxpdmUodHRzT3B0aW9uczogU3BlYWtTY2hlbWEgPSB7fSwgZW5kcG9pbnQgPSBcIjp2ZXJzaW9uL3NwZWFrXCIpYDogUmV0dXJucyBhIGBTcGVha0xpdmVDbGllbnRgIGluc3RhbmNlIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBsaXZlIHNwZWFrIEFQSSwgd2l0aCB0aGUgcHJvdmlkZWQgVFRTIG9wdGlvbnMgYW5kIGVuZHBvaW50LlxuICovXG5leHBvcnQgY2xhc3MgU3BlYWtDbGllbnQgZXh0ZW5kcyBBYnN0cmFjdENsaWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubmFtZXNwYWNlID0gXCJzcGVha1wiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgYFNwZWFrUmVzdENsaWVudGAgaW5zdGFuY2UgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIHJlc3Qgc3BlYWsgQVBJLlxuICAgICAqL1xuICAgIHJlcXVlc3Qoc291cmNlLCBvcHRpb25zLCBlbmRwb2ludCA9IFwiOnZlcnNpb24vc3BlYWtcIikge1xuICAgICAgICBjb25zdCBjbGllbnQgPSBuZXcgU3BlYWtSZXN0Q2xpZW50KHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBjbGllbnQucmVxdWVzdChzb3VyY2UsIG9wdGlvbnMsIGVuZHBvaW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGBTcGVha0xpdmVDbGllbnRgIGluc3RhbmNlIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBsaXZlIHNwZWFrIEFQSSwgd2l0aCB0aGUgcHJvdmlkZWQgVFRTIG9wdGlvbnMgYW5kIGVuZHBvaW50LlxuICAgICAqIEBwYXJhbSB7U3BlYWtTY2hlbWF9IFt0dHNPcHRpb25zPXt9XSAtIFRoZSBUVFMgb3B0aW9ucyB0byB1c2UgZm9yIHRoZSBsaXZlIHNwZWFrIEFQSS5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW2VuZHBvaW50PVwiOnZlcnNpb24vc3BlYWtcIl0gLSBUaGUgZW5kcG9pbnQgdG8gdXNlIGZvciB0aGUgbGl2ZSBzcGVhayBBUEkuXG4gICAgICogQHJldHVybnMge1NwZWFrTGl2ZUNsaWVudH0gLSBBIGBTcGVha0xpdmVDbGllbnRgIGluc3RhbmNlIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBsaXZlIHNwZWFrIEFQSS5cbiAgICAgKi9cbiAgICBsaXZlKHR0c09wdGlvbnMgPSB7fSwgZW5kcG9pbnQgPSBcIjp2ZXJzaW9uL3NwZWFrXCIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTcGVha0xpdmVDbGllbnQodGhpcy5vcHRpb25zLCB0dHNPcHRpb25zLCBlbmRwb2ludCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlYWtDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbIkFic3RyYWN0Q2xpZW50IiwiU3BlYWtMaXZlQ2xpZW50IiwiU3BlYWtSZXN0Q2xpZW50IiwiU3BlYWtDbGllbnQiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsIm5hbWVzcGFjZSIsInJlcXVlc3QiLCJzb3VyY2UiLCJvcHRpb25zIiwiZW5kcG9pbnQiLCJjbGllbnQiLCJsaXZlIiwidHRzT3B0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakLiveClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/SpeakLiveClient.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpeakLiveClient: () => (/* binding */ SpeakLiveClient)\n/* harmony export */ });\n/* harmony import */ var _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractLiveClient.js\");\n/* harmony import */ var _lib_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/enums */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/enums/LiveTTSEvents.js\");\n\n\n/**\n * The `SpeakLiveClient` class extends the `AbstractLiveClient` class and provides functionality for setting up and managing a WebSocket connection for live text-to-speech synthesis.\n *\n * The constructor takes in `DeepgramClientOptions` and an optional `SpeakSchema` object, as well as an optional `endpoint` string. It then calls the `connect` method of the parent `AbstractLiveClient` class to establish the WebSocket connection.\n *\n * The `setupConnection` method is responsible for handling the various events that can occur on the WebSocket connection, such as opening, closing, and receiving messages. It sets up event handlers for these events and emits the appropriate events based on the message type.\n *\n * The `configure` method allows you to send additional configuration options to the connected session.\n *\n * The `requestClose` method requests the server to close the connection.\n */ class SpeakLiveClient extends _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_0__.AbstractLiveClient {\n    /**\n     * Constructs a new `SpeakLiveClient` instance with the provided options.\n     *\n     * @param options - The `DeepgramClientOptions` to use for the client connection.\n     * @param speakOptions - An optional `SpeakSchema` object containing additional configuration options for the text-to-speech.\n     * @param endpoint - An optional string representing the WebSocket endpoint to connect to. Defaults to `:version/speak`.\n     */ constructor(options, speakOptions = {}, endpoint = \":version/speak\"){\n        super(options);\n        this.namespace = \"speak\";\n        this.connect(speakOptions, endpoint);\n    }\n    /**\n     * Sets up the connection event handlers.\n     * This method is responsible for handling the various events that can occur on the WebSocket connection, such as opening, closing, and receiving data.\n     * - When the connection is opened, it emits the `LiveTTSEvents.Open` event.\n     * - When the connection is closed, it emits the `LiveTTSEvents.Close` event.\n     * - When an error occurs on the connection, it emits the `LiveTTSEvents.Error` event.\n     * - When a message is received, it parses the message and emits the appropriate event based on the message type, such as `LiveTTSEvents.Metadata`, `LiveTTSEvents.Flushed`, and `LiveTTSEvents.Warning`.\n     */ setupConnection() {\n        if (this.conn) {\n            this.conn.onopen = ()=>{\n                this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Open, this);\n            };\n            this.conn.onclose = (event)=>{\n                this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Close, event);\n            };\n            this.conn.onerror = (event)=>{\n                this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Error, event);\n            };\n            this.conn.onmessage = (event)=>{\n                this.handleMessage(event);\n            };\n        }\n    }\n    /**\n     * Handles text messages received from the WebSocket connection.\n     * @param data - The parsed JSON data.\n     */ handleTextMessage(data) {\n        if (data.type === _lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Metadata) {\n            this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Metadata, data);\n        } else if (data.type === _lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Flushed) {\n            this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Flushed, data);\n        } else if (data.type === _lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Warning) {\n            this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Warning, data);\n        } else {\n            this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Unhandled, data);\n        }\n    }\n    /**\n     * Handles binary messages received from the WebSocket connection.\n     * @param data - The binary data.\n     */ handleBinaryMessage(data) {\n        this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Audio, data);\n    }\n    /**\n     * Sends a text input message to the server.\n     *\n     * @param {string} text - The text to convert to speech.\n     */ sendText(text) {\n        this.send(JSON.stringify({\n            type: \"Speak\",\n            text\n        }));\n    }\n    /**\n     * Requests the server flush the current buffer and return generated audio.\n     */ flush() {\n        this.send(JSON.stringify({\n            type: \"Flush\"\n        }));\n    }\n    /**\n     * Requests the server clear the current buffer.\n     */ clear() {\n        this.send(JSON.stringify({\n            type: \"Clear\"\n        }));\n    }\n    /**\n     * Requests the server close the connection.\n     */ requestClose() {\n        this.send(JSON.stringify({\n            type: \"Close\"\n        }));\n    }\n    /**\n     * Handles incoming messages from the WebSocket connection.\n     * @param event - The MessageEvent object representing the received message.\n     */ handleMessage(event) {\n        if (typeof event.data === \"string\") {\n            try {\n                const data = JSON.parse(event.data);\n                this.handleTextMessage(data);\n            } catch (error) {\n                this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Error, {\n                    event,\n                    message: \"Unable to parse `data` as JSON.\",\n                    error\n                });\n            }\n        } else if (event.data instanceof Blob) {\n            event.data.arrayBuffer().then((buffer)=>{\n                this.handleBinaryMessage(Buffer.from(buffer));\n            });\n        } else if (event.data instanceof ArrayBuffer) {\n            this.handleBinaryMessage(Buffer.from(event.data));\n        } else if (Buffer.isBuffer(event.data)) {\n            this.handleBinaryMessage(event.data);\n        } else {\n            console.log(\"Received unknown data type\", event.data);\n            this.emit(_lib_enums__WEBPACK_IMPORTED_MODULE_1__.LiveTTSEvents.Error, {\n                event,\n                message: \"Received unknown data type.\"\n            });\n        }\n    }\n} //# sourceMappingURL=SpeakLiveClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakLiveClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakRestClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/SpeakRestClient.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpeakRestClient: () => (/* binding */ SpeakRestClient)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/errors */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/helpers */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/lib/helpers.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * Provides a client for interacting with the Deepgram Text-to-Speech API.\n */ class SpeakRestClient extends _AbstractRestClient__WEBPACK_IMPORTED_MODULE_0__.AbstractRestClient {\n    constructor(){\n        super(...arguments);\n        this.namespace = \"speak\";\n    }\n    /**\n     * Sends a request to the Deepgram Text-to-Speech API to generate audio from the provided text source.\n     *\n     * @param source - The text source to be converted to audio.\n     * @param options - Optional configuration options for the text-to-speech request.\n     * @param endpoint - The API endpoint to use for the request. Defaults to \":version/speak\".\n     * @returns A promise that resolves to the SpeakRestClient instance, which can be used to retrieve the response headers and body.\n     * @throws {DeepgramError} If the text source type is unknown.\n     * @throws {DeepgramUnknownError} If the request was made before a previous request completed.\n     * @see https://developers.deepgram.com/reference/text-to-speech-api\n     */ request(source, options, endpoint = \":version/speak\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            let body;\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.isTextSource)(source)) {\n                body = JSON.stringify(source);\n            } else {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramError(\"Unknown transcription source type\");\n            }\n            const requestUrl = this.getRequestUrl(endpoint, {}, Object.assign({\n                model: \"aura-2-thalia-en\"\n            }, options));\n            this.result = yield this.post(requestUrl, body, {\n                headers: {\n                    Accept: \"audio/*\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            return this;\n        });\n    }\n    /**\n     * Retrieves the response body as a readable stream.\n     *\n     * @returns A promise that resolves to the response body as a readable stream, or `null` if no request has been made yet.\n     * @throws {DeepgramUnknownError} If a request has not been made yet.\n     */ getStream() {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.result) throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramUnknownError(\"Tried to get stream before making request\", \"\");\n            return this.result.body;\n        });\n    }\n    /**\n     * Retrieves the response headers from the previous request.\n     *\n     * @returns A promise that resolves to the response headers, or throws a `DeepgramUnknownError` if no request has been made yet.\n     */ getHeaders() {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.result) throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.DeepgramUnknownError(\"Tried to get headers before making request\", \"\");\n            return this.result.headers;\n        });\n    }\n} //# sourceMappingURL=SpeakRestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deepgram/sdk/dist/module/packages/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractClient: () => (/* reexport safe */ _AbstractClient__WEBPACK_IMPORTED_MODULE_0__.AbstractClient),\n/* harmony export */   AbstractLiveClient: () => (/* reexport safe */ _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_1__.AbstractLiveClient),\n/* harmony export */   AbstractRestClient: () => (/* reexport safe */ _AbstractRestClient__WEBPACK_IMPORTED_MODULE_2__.AbstractRestClient),\n/* harmony export */   AbstractRestfulClient: () => (/* reexport safe */ _AbstractRestClient__WEBPACK_IMPORTED_MODULE_2__.AbstractRestfulClient),\n/* harmony export */   AbstractWsClient: () => (/* reexport safe */ _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_1__.AbstractWsClient),\n/* harmony export */   AgentLiveClient: () => (/* reexport safe */ _AgentLiveClient__WEBPACK_IMPORTED_MODULE_3__.AgentLiveClient),\n/* harmony export */   AuthRestClient: () => (/* reexport safe */ _AuthRestClient__WEBPACK_IMPORTED_MODULE_4__.AuthRestClient),\n/* harmony export */   ListenClient: () => (/* reexport safe */ _ListenClient__WEBPACK_IMPORTED_MODULE_5__.ListenClient),\n/* harmony export */   ListenLiveClient: () => (/* reexport safe */ _ListenLiveClient__WEBPACK_IMPORTED_MODULE_6__.ListenLiveClient),\n/* harmony export */   ListenRestClient: () => (/* reexport safe */ _ListenRestClient__WEBPACK_IMPORTED_MODULE_7__.ListenRestClient),\n/* harmony export */   LiveClient: () => (/* reexport safe */ _ListenLiveClient__WEBPACK_IMPORTED_MODULE_6__.LiveClient),\n/* harmony export */   ManageClient: () => (/* reexport safe */ _ManageRestClient__WEBPACK_IMPORTED_MODULE_8__.ManageClient),\n/* harmony export */   ManageRestClient: () => (/* reexport safe */ _ManageRestClient__WEBPACK_IMPORTED_MODULE_8__.ManageRestClient),\n/* harmony export */   ModelsRestClient: () => (/* reexport safe */ _ModelsRestClient__WEBPACK_IMPORTED_MODULE_9__.ModelsRestClient),\n/* harmony export */   OnPremClient: () => (/* reexport safe */ _SelfHostedRestClient__WEBPACK_IMPORTED_MODULE_11__.OnPremClient),\n/* harmony export */   PrerecordedClient: () => (/* reexport safe */ _ListenRestClient__WEBPACK_IMPORTED_MODULE_7__.PrerecordedClient),\n/* harmony export */   ReadClient: () => (/* reexport safe */ _ReadRestClient__WEBPACK_IMPORTED_MODULE_10__.ReadClient),\n/* harmony export */   ReadRestClient: () => (/* reexport safe */ _ReadRestClient__WEBPACK_IMPORTED_MODULE_10__.ReadRestClient),\n/* harmony export */   SelfHostedRestClient: () => (/* reexport safe */ _SelfHostedRestClient__WEBPACK_IMPORTED_MODULE_11__.SelfHostedRestClient),\n/* harmony export */   SpeakClient: () => (/* reexport safe */ _SpeakClient__WEBPACK_IMPORTED_MODULE_12__.SpeakClient),\n/* harmony export */   SpeakLiveClient: () => (/* reexport safe */ _SpeakLiveClient__WEBPACK_IMPORTED_MODULE_13__.SpeakLiveClient),\n/* harmony export */   SpeakRestClient: () => (/* reexport safe */ _SpeakRestClient__WEBPACK_IMPORTED_MODULE_14__.SpeakRestClient),\n/* harmony export */   noop: () => (/* reexport safe */ _AbstractClient__WEBPACK_IMPORTED_MODULE_0__.noop)\n/* harmony export */ });\n/* harmony import */ var _AbstractClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractClient.js\");\n/* harmony import */ var _AbstractLiveClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractLiveClient.js\");\n/* harmony import */ var _AbstractRestClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AbstractRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AbstractRestClient.js\");\n/* harmony import */ var _AgentLiveClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AgentLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AgentLiveClient.js\");\n/* harmony import */ var _AuthRestClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AuthRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/AuthRestClient.js\");\n/* harmony import */ var _ListenClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ListenClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenClient.js\");\n/* harmony import */ var _ListenLiveClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ListenLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenLiveClient.js\");\n/* harmony import */ var _ListenRestClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ListenRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ListenRestClient.js\");\n/* harmony import */ var _ManageRestClient__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ManageRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ManageRestClient.js\");\n/* harmony import */ var _ModelsRestClient__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ModelsRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ModelsRestClient.js\");\n/* harmony import */ var _ReadRestClient__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ReadRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/ReadRestClient.js\");\n/* harmony import */ var _SelfHostedRestClient__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./SelfHostedRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SelfHostedRestClient.js\");\n/* harmony import */ var _SpeakClient__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./SpeakClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakClient.js\");\n/* harmony import */ var _SpeakLiveClient__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./SpeakLiveClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakLiveClient.js\");\n/* harmony import */ var _SpeakRestClient__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./SpeakRestClient */ \"(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/SpeakRestClient.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGRlZXBncmFtL3Nkay9kaXN0L21vZHVsZS9wYWNrYWdlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFpQztBQUNJO0FBQ0E7QUFDSDtBQUNEO0FBQ0Y7QUFDSTtBQUNBO0FBQ0E7QUFDQTtBQUNGO0FBQ007QUFDVDtBQUNJO0FBQ0EsQ0FDbEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FsbC1hbmFseXplci8uL25vZGVfbW9kdWxlcy9AZGVlcGdyYW0vc2RrL2Rpc3QvbW9kdWxlL3BhY2thZ2VzL2luZGV4LmpzP2Q5MTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vQWJzdHJhY3RDbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0Fic3RyYWN0TGl2ZUNsaWVudFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vQWJzdHJhY3RSZXN0Q2xpZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9BZ2VudExpdmVDbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0F1dGhSZXN0Q2xpZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9MaXN0ZW5DbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0xpc3RlbkxpdmVDbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0xpc3RlblJlc3RDbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL01hbmFnZVJlc3RDbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL01vZGVsc1Jlc3RDbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1JlYWRSZXN0Q2xpZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9TZWxmSG9zdGVkUmVzdENsaWVudFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vU3BlYWtDbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1NwZWFrTGl2ZUNsaWVudFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vU3BlYWtSZXN0Q2xpZW50XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@deepgram/sdk/dist/module/packages/index.js\n");

/***/ })

};
;